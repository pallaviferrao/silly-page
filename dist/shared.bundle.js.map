{"version":3,"file":"shared.bundle.js","mappings":";uBAAIA,ECCAC,EADAC,cCQJ,IAAIC,EAAwBC,OAAOD,sBAC/BE,EAAiBD,OAAOE,UAAUD,eAClCE,EAAmBH,OAAOE,UAAUE,qBAsDxCC,EAAOC,QA5CP,WACC,IACC,IAAKN,OAAOO,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIC,OAAO,OAEvB,GADAD,EAAM,GAAK,KACkC,MAAzCR,OAAOU,oBAAoBF,GAAO,GACrC,OAAO,EAKR,IADA,IAAIG,EAAQ,CAAC,EACJC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAM,IAAMF,OAAOI,aAAaD,IAAMA,EAKvC,GAAwB,eAHXZ,OAAOU,oBAAoBC,GAAOG,KAAI,SAAUC,GAC5D,OAAOJ,EAAMI,EACd,IACWC,KAAK,IACf,OAAO,EAIR,IAAIC,EAAQ,CAAC,EAIb,MAHA,uBAAuBC,MAAM,IAAIC,SAAQ,SAAUC,GAClDH,EAAMG,GAAUA,CACjB,IAEE,yBADEpB,OAAOqB,KAAKrB,OAAOO,OAAO,CAAC,EAAGU,IAAQD,KAAK,GAMhD,CAAE,MAAOM,GAER,OAAO,CACR,CACD,CAEiBC,GAAoBvB,OAAOO,OAAS,SAAUiB,EAAQC,GAKtE,IAJA,IAAIC,EAEAC,EADAC,EAtDL,SAAkBC,GACjB,GAAIA,QACH,MAAM,IAAIC,UAAU,yDAGrB,OAAO9B,OAAO6B,EACf,CAgDUE,CAASP,GAGTQ,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAG1C,IAAK,IAAIG,KAFTT,EAAO1B,OAAOiC,UAAUD,IAGnB/B,EAAemC,KAAKV,EAAMS,KAC7BP,EAAGO,GAAOT,EAAKS,IAIjB,GAAIpC,EAAuB,CAC1B4B,EAAU5B,EAAsB2B,GAChC,IAAK,IAAId,EAAI,EAAGA,EAAIe,EAAQO,OAAQtB,IAC/BT,EAAiBiC,KAAKV,EAAMC,EAAQf,MACvCgB,EAAGD,EAAQf,IAAMc,EAAKC,EAAQf,IAGjC,CACD,CAEA,OAAOgB,CACR,8lDC1DIS,uBArBJ,SAASC,IAYP,OAXAA,EAAWtC,OAAOO,OAASP,OAAOO,OAAOgC,OAAS,SAAUf,GAC1D,IAAK,IAAIZ,EAAI,EAAGA,EAAIqB,UAAUC,OAAQtB,IAAK,CACzC,IAAIa,EAASQ,UAAUrB,GACvB,IAAK,IAAIuB,KAAOV,EACVzB,OAAOE,UAAUD,eAAemC,KAAKX,EAAQU,KAC/CX,EAAOW,GAAOV,EAAOU,GAG3B,CACA,OAAOX,CACT,EACOc,EAASE,MAAMC,KAAMR,UAC9B,EASA,SAAWI,GAQTA,EAAY,IAAI,MAMhBA,EAAa,KAAI,OAKjBA,EAAgB,QAAI,SACrB,CApBD,CAoBGA,IAAWA,EAAS,CAAC,IACxB,MAAMK,EAAoB,WAK1B,SAASC,EAAoBC,QACX,IAAZA,IACFA,EAAU,CAAC,GAEb,IAKIC,GALA,eACFC,EAAiB,CAAC,KAAI,aACtBC,EAAY,SACZC,GAAW,GACTJ,EAEJC,EAAUC,EAAehC,KAAI,CAACmC,EAAOC,IAAUC,EAAqBF,EAAwB,iBAAVA,EAAqB,KAAOA,EAAMG,MAAiB,IAAVF,EAAc,eAAYG,KACrJ,IAAIH,EAAQI,EAA2B,MAAhBP,EAAuBF,EAAQX,OAAS,EAAIa,GAC/DQ,EAASlB,EAAOmB,IAChBC,EAAW,KACf,SAASH,EAAWvC,GAClB,OAAO2C,KAAKC,IAAID,KAAKE,IAAI7C,EAAG,GAAI8B,EAAQX,OAAS,EACnD,CACA,SAAS2B,IACP,OAAOhB,EAAQK,EACjB,CACA,SAASC,EAAqBvB,EAAIwB,EAAOjB,QACzB,IAAViB,IACFA,EAAQ,MAEV,IAAIU,EAAWC,EAAelB,EAAUgB,IAAqBG,SAAW,IAAKpC,EAAIwB,EAAOjB,GAExF,OADA8B,EAAwC,MAAhCH,EAASE,SAASE,OAAO,GAAY,2DAA6DC,KAAKC,UAAUxC,IAClHkC,CACT,CACA,SAASO,EAAWzC,GAClB,MAAqB,iBAAPA,EAAkBA,EAAK0C,EAAW1C,EAClD,CAoEA,MAnEc,CACZ,SAAIsB,GACF,OAAOA,CACT,EACA,UAAIK,GACF,OAAOA,CACT,EACA,YAAIO,GACF,OAAOD,GACT,EACAQ,aACAE,UAAU3C,GACD,IAAI4C,IAAIH,EAAWzC,GAAK,oBAEjC,cAAA6C,CAAe7C,GACb,IAAI8C,EAAqB,iBAAP9C,EAAkB+C,EAAU/C,GAAMA,EACpD,MAAO,CACLoC,SAAUU,EAAKV,UAAY,GAC3BY,OAAQF,EAAKE,QAAU,GACvBC,KAAMH,EAAKG,MAAQ,GAEvB,EACA,IAAAC,CAAKlD,EAAIwB,GACPG,EAASlB,EAAO0C,KAChB,IAAIC,EAAe7B,EAAqBvB,EAAIwB,GAC5CF,GAAS,EACTL,EAAQoC,OAAO/B,EAAOL,EAAQX,OAAQ8C,GAClChC,GAAYS,GACdA,EAAS,CACPF,SACAO,SAAUkB,EACVE,MAAO,GAGb,EACA,OAAAC,CAAQvD,EAAIwB,GACVG,EAASlB,EAAO+C,QAChB,IAAIJ,EAAe7B,EAAqBvB,EAAIwB,GAC5CP,EAAQK,GAAS8B,EACbhC,GAAYS,GACdA,EAAS,CACPF,SACAO,SAAUkB,EACVE,MAAO,GAGb,EACA,EAAAG,CAAGH,GACD3B,EAASlB,EAAOmB,IAChB,IAAI8B,EAAYhC,EAAWJ,EAAQgC,GAC/BF,EAAenC,EAAQyC,GAC3BpC,EAAQoC,EACJ7B,GACFA,EAAS,CACPF,SACAO,SAAUkB,EACVE,SAGN,EACAK,OAAOC,IACL/B,EAAW+B,EACJ,KACL/B,EAAW,IAAI,GAKvB,CAQA,SAASgC,EAAqB7C,GAqB5B,YApBgB,IAAZA,IACFA,EAAU,CAAC,GAmBN8C,GAjBP,SAA+BC,EAAQC,GACrC,IAAI,SACF5B,EAAQ,OACRY,EAAM,KACNC,GACEc,EAAO7B,SACX,OAAOC,EAAe,GAAI,CACxBC,WACAY,SACAC,QAGFe,EAAcxC,OAASwC,EAAcxC,MAAMyC,KAAO,KAAMD,EAAcxC,OAASwC,EAAcxC,MAAMjB,KAAO,UAC5G,IACA,SAA2BwD,EAAQ/D,GACjC,MAAqB,iBAAPA,EAAkBA,EAAK0C,EAAW1C,EAClD,GACoE,KAAMgB,EAC5E,CASA,SAASkD,EAAkBlD,GAwCzB,YAvCgB,IAAZA,IACFA,EAAU,CAAC,GAsCN8C,GApCP,SAA4BC,EAAQC,GAClC,IAAI,SACF5B,EAAW,IAAG,OACdY,EAAS,GAAE,KACXC,EAAO,IACLF,EAAUgB,EAAO7B,SAASe,KAAKkB,OAAO,IAU1C,OAHK/B,EAASgC,WAAW,MAAShC,EAASgC,WAAW,OACpDhC,EAAW,IAAMA,GAEZD,EAAe,GAAI,CACxBC,WACAY,SACAC,QAGFe,EAAcxC,OAASwC,EAAcxC,MAAMyC,KAAO,KAAMD,EAAcxC,OAASwC,EAAcxC,MAAMjB,KAAO,UAC5G,IACA,SAAwBwD,EAAQ/D,GAC9B,IAAIqE,EAAON,EAAOO,SAASC,cAAc,QACrCC,EAAO,GACX,GAAIH,GAAQA,EAAKI,aAAa,QAAS,CACrC,IAAIC,EAAMX,EAAO7B,SAASsC,KACtBG,EAAYD,EAAIE,QAAQ,KAC5BJ,GAAsB,IAAfG,EAAmBD,EAAMA,EAAIG,MAAM,EAAGF,EAC/C,CACA,OAAOH,EAAO,KAAqB,iBAAPxE,EAAkBA,EAAK0C,EAAW1C,GAChE,IACA,SAA8BkC,EAAUlC,GACtCqC,EAAwC,MAAhCH,EAASE,SAASE,OAAO,GAAY,6DAA+DC,KAAKC,UAAUxC,GAAM,IACnI,GACoFgB,EACtF,CACA,SAAS8D,EAAUC,EAAOC,GACxB,IAAc,IAAVD,SAAmBA,EACrB,MAAM,IAAIE,MAAMD,EAEpB,CACA,SAAS3C,EAAQ6C,EAAMF,GACrB,IAAKE,EAAM,CAEc,oBAAZC,SAAyBA,QAAQC,KAAKJ,GACjD,IAME,MAAM,IAAIC,MAAMD,EAElB,CAAE,MAAOK,GAAI,CACf,CACF,CAOA,SAASC,EAAgBpD,EAAUZ,GACjC,MAAO,CACL2C,IAAK/B,EAASV,MACdjB,IAAK2B,EAAS3B,IACdgF,IAAKjE,EAET,CAIA,SAASa,EAAeqD,EAASxF,EAAIwB,EAAOjB,GAgB1C,YAfc,IAAViB,IACFA,EAAQ,MAEKd,EAAS,CACtB0B,SAA6B,iBAAZoD,EAAuBA,EAAUA,EAAQpD,SAC1DY,OAAQ,GACRC,KAAM,IACS,iBAAPjD,EAAkB+C,EAAU/C,GAAMA,EAAI,CAC9CwB,QAKAjB,IAAKP,GAAMA,EAAGO,KAAOA,GA7BhBuB,KAAK2D,SAASC,SAAS,IAAIvB,OAAO,EAAG,IAgC9C,CAIA,SAASzB,EAAWiD,GAClB,IAAI,SACFvD,EAAW,IAAG,OACdY,EAAS,GAAE,KACXC,EAAO,IACL0C,EAGJ,OAFI3C,GAAqB,MAAXA,IAAgBZ,GAAiC,MAArBY,EAAOV,OAAO,GAAaU,EAAS,IAAMA,GAChFC,GAAiB,MAATA,IAAcb,GAA+B,MAAnBa,EAAKX,OAAO,GAAaW,EAAO,IAAMA,GACrEb,CACT,CAIA,SAASW,EAAUD,GACjB,IAAI8C,EAAa,CAAC,EAClB,GAAI9C,EAAM,CACR,IAAI6B,EAAY7B,EAAK8B,QAAQ,KACzBD,GAAa,IACfiB,EAAW3C,KAAOH,EAAKqB,OAAOQ,GAC9B7B,EAAOA,EAAKqB,OAAO,EAAGQ,IAExB,IAAIkB,EAAc/C,EAAK8B,QAAQ,KAC3BiB,GAAe,IACjBD,EAAW5C,OAASF,EAAKqB,OAAO0B,GAChC/C,EAAOA,EAAKqB,OAAO,EAAG0B,IAEpB/C,IACF8C,EAAWxD,SAAWU,EAE1B,CACA,OAAO8C,CACT,CACA,SAAS9B,EAAmBgC,EAAarD,EAAYsD,EAAkB/E,QACrD,IAAZA,IACFA,EAAU,CAAC,GAEb,IAAI,OACF+C,EAASO,SAAS0B,YAAW,SAC7B5E,GAAW,GACTJ,EACAgD,EAAgBD,EAAOkC,QACvBtE,EAASlB,EAAOmB,IAChBC,EAAW,KACXP,EAAQ4E,IAUZ,SAASA,IAIP,OAHYlC,EAAcxC,OAAS,CACjC+D,IAAK,OAEMA,GACf,CACA,SAASY,IACPxE,EAASlB,EAAOmB,IAChB,IAAI8B,EAAYwC,IACZ5C,EAAqB,MAAbI,EAAoB,KAAOA,EAAYpC,EACnDA,EAAQoC,EACJ7B,GACFA,EAAS,CACPF,SACAO,SAAU+D,EAAQ/D,SAClBoB,SAGN,CA+CA,SAASX,EAAU3C,GAIjB,IAAIqE,EAAkC,SAA3BN,EAAO7B,SAASkE,OAAoBrC,EAAO7B,SAASkE,OAASrC,EAAO7B,SAASsC,KACpFA,EAAqB,iBAAPxE,EAAkBA,EAAK0C,EAAW1C,GAEpD,OADA8E,EAAUT,EAAM,sEAAwEG,GACjF,IAAI5B,IAAI4B,EAAMH,EACvB,CA/Ea,MAAT/C,IACFA,EAAQ,EACR0C,EAAcqC,aAAa3F,EAAS,CAAC,EAAGsD,EAAcxC,MAAO,CAC3D+D,IAAKjE,IACH,KA4EN,IAAI2E,EAAU,CACZ,UAAItE,GACF,OAAOA,CACT,EACA,YAAIO,GACF,OAAO4D,EAAY/B,EAAQC,EAC7B,EACA,MAAAL,CAAOC,GACL,GAAI/B,EACF,MAAM,IAAIoD,MAAM,8CAIlB,OAFAlB,EAAOuC,iBAAiBxF,EAAmBqF,GAC3CtE,EAAW+B,EACJ,KACLG,EAAOwC,oBAAoBzF,EAAmBqF,GAC9CtE,EAAW,IAAI,CAEnB,EACAY,WAAWzC,GACFyC,EAAWsB,EAAQ/D,GAE5B2C,YACA,cAAAE,CAAe7C,GAEb,IAAI0E,EAAM/B,EAAU3C,GACpB,MAAO,CACLoC,SAAUsC,EAAItC,SACdY,OAAQ0B,EAAI1B,OACZC,KAAMyB,EAAIzB,KAEd,EACAC,KAtFF,SAAclD,EAAIwB,GAChBG,EAASlB,EAAO0C,KAChB,IAAIjB,EAAWC,EAAe8D,EAAQ/D,SAAUlC,EAAIwB,GAChDuE,GAAkBA,EAAiB7D,EAAUlC,GACjDsB,EAAQ4E,IAAa,EACrB,IAAIM,EAAelB,EAAgBpD,EAAUZ,GACzCoD,EAAMuB,EAAQxD,WAAWP,GAE7B,IACE8B,EAAcyC,UAAUD,EAAc,GAAI9B,EAC5C,CAAE,MAAOgC,GAKP,GAAIA,aAAiBC,cAA+B,mBAAfD,EAAME,KACzC,MAAMF,EAIR3C,EAAO7B,SAASvD,OAAO+F,EACzB,CACItD,GAAYS,GACdA,EAAS,CACPF,SACAO,SAAU+D,EAAQ/D,SAClBoB,MAAO,GAGb,EA0DEC,QAzDF,SAAiBvD,EAAIwB,GACnBG,EAASlB,EAAO+C,QAChB,IAAItB,EAAWC,EAAe8D,EAAQ/D,SAAUlC,EAAIwB,GAChDuE,GAAkBA,EAAiB7D,EAAUlC,GACjDsB,EAAQ4E,IACR,IAAIM,EAAelB,EAAgBpD,EAAUZ,GACzCoD,EAAMuB,EAAQxD,WAAWP,GAC7B8B,EAAcqC,aAAaG,EAAc,GAAI9B,GACzCtD,GAAYS,GACdA,EAAS,CACPF,SACAO,SAAU+D,EAAQ/D,SAClBoB,MAAO,GAGb,EA2CEG,GAAGtE,GACM6E,EAAcP,GAAGtE,IAG5B,OAAO8G,CACT,CAGA,IAAIY,GACJ,SAAWA,GACTA,EAAiB,KAAI,OACrBA,EAAqB,SAAI,WACzBA,EAAqB,SAAI,WACzBA,EAAkB,MAAI,OACvB,CALD,CAKGA,IAAeA,EAAa,CAAC,IAChC,MAAMC,EAAqB,IAAIC,IAAI,CAAC,OAAQ,gBAAiB,OAAQ,KAAM,QAAS,aAMpF,SAASC,EAA0BC,EAAQC,EAAoBC,EAAYC,GAOzE,YANmB,IAAfD,IACFA,EAAa,SAEE,IAAbC,IACFA,EAAW,CAAC,GAEPH,EAAO/H,KAAI,CAACmI,EAAO/F,KACxB,IAAIgG,EAAW,IAAIH,EAAY7F,GAC3BiG,EAAyB,iBAAbF,EAAME,GAAkBF,EAAME,GAAKD,EAASlI,KAAK,KAGjE,GAFA0F,GAA0B,IAAhBuC,EAAM/F,QAAmB+F,EAAMG,SAAU,6CACnD1C,GAAWsC,EAASG,GAAK,qCAAwCA,EAAxC,qEAhB7B,SAAsBF,GACpB,OAAuB,IAAhBA,EAAM/F,KACf,CAeQmG,CAAaJ,GAAQ,CACvB,IAAIK,EAAahH,EAAS,CAAC,EAAG2G,EAAOH,EAAmBG,GAAQ,CAC9DE,OAGF,OADAH,EAASG,GAAMG,EACRA,CACT,CAAO,CACL,IAAIC,EAAoBjH,EAAS,CAAC,EAAG2G,EAAOH,EAAmBG,GAAQ,CACrEE,KACAC,cAAU/F,IAMZ,OAJA2F,EAASG,GAAMI,EACXN,EAAMG,WACRG,EAAkBH,SAAWR,EAA0BK,EAAMG,SAAUN,EAAoBI,EAAUF,IAEhGO,CACT,IAEJ,CAMA,SAASC,EAAYX,EAAQY,EAAaC,QACvB,IAAbA,IACFA,EAAW,KAEb,IACI1F,EAAW2F,GADuB,iBAAhBF,EAA2B9E,EAAU8E,GAAeA,GACpCzF,UAAY,IAAK0F,GACvD,GAAgB,MAAZ1F,EACF,OAAO,KAET,IAAI4F,EAAWC,EAAchB,IAkI/B,SAA2Be,GACzBA,EAASE,MAAK,CAACC,EAAGC,IAAMD,EAAEE,QAAUD,EAAEC,MAAQD,EAAEC,MAAQF,EAAEE,MAqB5D,SAAwBF,EAAGC,GACzB,IAAIE,EAAWH,EAAE7H,SAAW8H,EAAE9H,QAAU6H,EAAEtD,MAAM,GAAI,GAAG0D,OAAM,CAACpJ,EAAGH,IAAMG,IAAMiJ,EAAEpJ,KAC/E,OAAOsJ,EAKPH,EAAEA,EAAE7H,OAAS,GAAK8H,EAAEA,EAAE9H,OAAS,GAG/B,CACF,CA/BIkI,CAAeL,EAAEM,WAAWvJ,KAAIwJ,GAAQA,EAAKC,gBAAgBP,EAAEK,WAAWvJ,KAAIwJ,GAAQA,EAAKC,kBAC/F,CApIEC,CAAkBZ,GAClB,IAAIa,EAAU,KACd,IAAK,IAAI7J,EAAI,EAAc,MAAX6J,GAAmB7J,EAAIgJ,EAAS1H,SAAUtB,EACxD6J,EAAUC,EAAiBd,EAAShJ,GAOpC+J,EAAgB3G,IAElB,OAAOyG,CACT,CACA,SAASG,EAA2BC,EAAOC,GACzC,IAAI,MACF7B,EAAK,SACLjF,EAAQ,OACR+G,GACEF,EACJ,MAAO,CACL1B,GAAIF,EAAME,GACVnF,WACA+G,SACAC,KAAMF,EAAW7B,EAAME,IACvB8B,OAAQhC,EAAMgC,OAElB,CACA,SAASpB,EAAchB,EAAQe,EAAUsB,EAAanC,QACnC,IAAba,IACFA,EAAW,SAEO,IAAhBsB,IACFA,EAAc,SAEG,IAAfnC,IACFA,EAAa,IAEf,IAAIoC,EAAe,CAAClC,EAAO/F,EAAOkI,KAChC,IAAId,EAAO,CACTc,kBAA+B/H,IAAjB+H,EAA6BnC,EAAMvE,MAAQ,GAAK0G,EAC9DC,eAAuC,IAAxBpC,EAAMoC,cACrBd,cAAerH,EACf+F,SAEEqB,EAAKc,aAAapF,WAAW,OAC/BU,EAAU4D,EAAKc,aAAapF,WAAW+C,GAAa,wBAA2BuB,EAAKc,aAAhC,wBAAiFrC,EAAjF,4GACpDuB,EAAKc,aAAed,EAAKc,aAAa3E,MAAMsC,EAAW7G,SAEzD,IAAIwC,EAAO4G,EAAU,CAACvC,EAAYuB,EAAKc,eACnCf,EAAaa,EAAYK,OAAOjB,GAIhCrB,EAAMG,UAAYH,EAAMG,SAASlH,OAAS,IAC5CwE,GAGgB,IAAhBuC,EAAM/F,MAAgB,4FAAqGwB,EAAO,MAClImF,EAAcZ,EAAMG,SAAUQ,EAAUS,EAAY3F,KAIpC,MAAduE,EAAMvE,MAAiBuE,EAAM/F,QAGjC0G,EAAS9E,KAAK,CACZJ,OACAuF,MAAOuB,EAAa9G,EAAMuE,EAAM/F,OAChCmH,cACA,EAaJ,OAXAxB,EAAO1H,SAAQ,CAAC8H,EAAO/F,KACrB,IAAIuI,EAEJ,GAAmB,KAAfxC,EAAMvE,MAA+C,OAA7B+G,EAAcxC,EAAMvE,OAAiB+G,EAAYC,SAAS,KAGpF,IAAK,IAAIC,KAAYC,EAAwB3C,EAAMvE,MACjDyG,EAAalC,EAAO/F,EAAOyI,QAH7BR,EAAalC,EAAO/F,EAKtB,IAEK0G,CACT,CAeA,SAASgC,EAAwBlH,GAC/B,IAAImH,EAAWnH,EAAKxD,MAAM,KAC1B,GAAwB,IAApB2K,EAAS3J,OAAc,MAAO,GAClC,IAAK4J,KAAUC,GAAQF,EAEnBG,EAAaF,EAAMG,SAAS,KAE5BC,EAAWJ,EAAM3G,QAAQ,MAAO,IACpC,GAAoB,IAAhB4G,EAAK7J,OAGP,OAAO8J,EAAa,CAACE,EAAU,IAAM,CAACA,GAExC,IAAIC,EAAeP,EAAwBG,EAAK/K,KAAK,MACjDoL,EAAS,GAcb,OANAA,EAAOtH,QAAQqH,EAAarL,KAAIuL,GAAuB,KAAZA,EAAiBH,EAAW,CAACA,EAAUG,GAASrL,KAAK,QAE5FgL,GACFI,EAAOtH,QAAQqH,GAGVC,EAAOtL,KAAI6K,GAAYjH,EAAKsB,WAAW,MAAqB,KAAb2F,EAAkB,IAAMA,GAChF,CAKA,MAAMW,EAAU,SACVC,EAAsB,EACtBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAqB,GACrBC,GAAgB,EAChBC,EAAU5K,GAAW,MAANA,EACrB,SAASwJ,EAAa9G,EAAMxB,GAC1B,IAAI2I,EAAWnH,EAAKxD,MAAM,KACtB2L,EAAehB,EAAS3J,OAO5B,OANI2J,EAASiB,KAAKF,KAChBC,GAAgBF,GAEdzJ,IACF2J,GAAgBL,GAEXX,EAASkB,QAAO/K,IAAM4K,EAAQ5K,KAAIgL,QAAO,CAAC/C,EAAOgD,IAAYhD,GAASqC,EAAQY,KAAKD,GAAWV,EAAkC,KAAZU,EAAiBR,EAAoBC,IAAqBG,EACvL,CAaA,SAASnC,EAAiByC,EAAQnJ,GAChC,IAAI,WACFqG,GACE8C,EACAC,EAAgB,CAAC,EACjBC,EAAkB,IAClB5C,EAAU,GACd,IAAK,IAAI7J,EAAI,EAAGA,EAAIyJ,EAAWnI,SAAUtB,EAAG,CAC1C,IAAI0J,EAAOD,EAAWzJ,GAClB0M,EAAM1M,IAAMyJ,EAAWnI,OAAS,EAChCqL,EAAwC,MAApBF,EAA0BrJ,EAAWA,EAASyC,MAAM4G,EAAgBnL,SAAW,IACnG2I,EAAQ2C,EAAU,CACpB9I,KAAM4F,EAAKc,aACXC,cAAef,EAAKe,cACpBiC,OACCC,GACH,IAAK1C,EAAO,OAAO,KACnB7K,OAAOO,OAAO6M,EAAevC,EAAME,QACnC,IAAI9B,EAAQqB,EAAKrB,MACjBwB,EAAQ3F,KAAK,CAEXiG,OAAQqC,EACRpJ,SAAUsH,EAAU,CAAC+B,EAAiBxC,EAAM7G,WAC5CyJ,aAAcC,EAAkBpC,EAAU,CAAC+B,EAAiBxC,EAAM4C,gBAClExE,UAEyB,MAAvB4B,EAAM4C,eACRJ,EAAkB/B,EAAU,CAAC+B,EAAiBxC,EAAM4C,eAExD,CACA,OAAOhD,CACT,CAMA,SAASkD,EAAaC,EAAc7C,QACnB,IAAXA,IACFA,EAAS,CAAC,GAEZ,IAAIrG,EAAOkJ,EACPlJ,EAAKuH,SAAS,MAAiB,MAATvH,IAAiBA,EAAKuH,SAAS,QACvDhI,GAAQ,EAAO,eAAkBS,EAAlB,oCAAuEA,EAAKS,QAAQ,MAAO,MAA3F,qIAAwPT,EAAKS,QAAQ,MAAO,MAAQ,MACnST,EAAOA,EAAKS,QAAQ,MAAO,OAG7B,MAAM0I,EAASnJ,EAAKsB,WAAW,KAAO,IAAM,GACtC5B,EAAY0J,GAAU,MAALA,EAAY,GAAkB,iBAANA,EAAiBA,EAAIrN,OAAOqN,GAqB3E,OAAOD,EApBUnJ,EAAKxD,MAAM,OAAOJ,KAAI,CAACmM,EAAS/J,EAAO6K,KAGtD,GAFsB7K,IAAU6K,EAAM7L,OAAS,GAEd,MAAZ+K,EAAiB,CAGpC,OAAO7I,EAAU2G,EAFJ,KAGf,CACA,MAAMiD,EAAWf,EAAQpC,MAAM,iBAC/B,GAAImD,EAAU,CACZ,MAAO,CAAE7L,EAAK8L,GAAYD,EAC1B,IAAIE,EAAQnD,EAAO5I,GAEnB,OADAuE,EAAuB,MAAbuH,GAA6B,MAATC,EAAe,aAAgB/L,EAAM,WAC5DiC,EAAU8J,EACnB,CAEA,OAAOjB,EAAQ9H,QAAQ,OAAQ,GAAG,IAGnC4H,QAAOE,KAAaA,IACIjM,KAAK,IAChC,CAOA,SAASwM,EAAUW,EAASnK,GACH,iBAAZmK,IACTA,EAAU,CACRzJ,KAAMyJ,EACN9C,eAAe,EACfiC,KAAK,IAGT,IAAKc,EAASC,GAuBhB,SAAqB3J,EAAM2G,EAAeiC,QAClB,IAAlBjC,IACFA,GAAgB,QAEN,IAARiC,IACFA,GAAM,GAERrJ,EAAiB,MAATS,IAAiBA,EAAKuH,SAAS,MAAQvH,EAAKuH,SAAS,MAAO,eAAkBvH,EAAlB,oCAAuEA,EAAKS,QAAQ,MAAO,MAA3F,qIAAwPT,EAAKS,QAAQ,MAAO,MAAQ,MACxV,IAAIkJ,EAAa,GACbC,EAAe,IAAM5J,EAAKS,QAAQ,UAAW,IAChDA,QAAQ,OAAQ,KAChBA,QAAQ,sBAAuB,QAC/BA,QAAQ,aAAa,CAACoJ,EAAGC,KACxBH,EAAWvJ,KAAK0J,GACT,gBAEL9J,EAAKuH,SAAS,MAChBoC,EAAWvJ,KAAK,KAChBwJ,GAAyB,MAAT5J,GAAyB,OAATA,EAAgB,QAC9C,qBACO4I,EAETgB,GAAgB,QACE,KAAT5J,GAAwB,MAATA,IAQxB4J,GAAgB,iBAElB,IAAIF,EAAU,IAAIK,OAAOH,EAAcjD,OAAgBhI,EAAY,KACnE,MAAO,CAAC+K,EAASC,EACnB,CA1D8BK,CAAYP,EAAQzJ,KAAMyJ,EAAQ9C,cAAe8C,EAAQb,KACjFzC,EAAQ7G,EAAS6G,MAAMuD,GAC3B,IAAKvD,EAAO,OAAO,KACnB,IAAIwC,EAAkBxC,EAAM,GACxB4C,EAAeJ,EAAgBlI,QAAQ,UAAW,MAClDwJ,EAAgB9D,EAAMpE,MAAM,GAWhC,MAAO,CACLsE,OAXWsD,EAAWrB,QAAO,CAAC4B,EAAMJ,EAAWtL,KAG/C,GAAkB,MAAdsL,EAAmB,CACrB,IAAIK,EAAaF,EAAczL,IAAU,GACzCuK,EAAeJ,EAAgB5G,MAAM,EAAG4G,EAAgBnL,OAAS2M,EAAW3M,QAAQiD,QAAQ,UAAW,KACzG,CAEA,OADAyJ,EAAKJ,GAsDT,SAAkC7H,EAAO6H,GACvC,IACE,OAAOM,mBAAmBnI,EAC5B,CAAE,MAAO2B,GAEP,OADArE,GAAQ,EAAO,gCAAmCuK,EAAnC,6CAAsG7H,EAAtG,iFAAyM2B,EAAQ,MACzN3B,CACT,CACF,CA7DsBoI,CAAyBJ,EAAczL,IAAU,GAAIsL,GAChEI,CAAI,GACV,CAAC,GAGF5K,SAAUqJ,EACVI,eACAU,UAEJ,CAqCA,SAASxD,EAAgBhE,GACvB,IACE,OAAOqI,UAAUrI,EACnB,CAAE,MAAO2B,GAEP,OADArE,GAAQ,EAAO,iBAAoB0C,EAApB,oHAA8J2B,EAAQ,MAC9K3B,CACT,CACF,CAYA,SAASgD,EAAc3F,EAAU0F,GAC/B,GAAiB,MAAbA,EAAkB,OAAO1F,EAC7B,IAAKA,EAASiL,cAAcjJ,WAAW0D,EAASuF,eAC9C,OAAO,KAIT,IAAIC,EAAaxF,EAASuC,SAAS,KAAOvC,EAASxH,OAAS,EAAIwH,EAASxH,OACrEiN,EAAWnL,EAASE,OAAOgL,GAC/B,OAAIC,GAAyB,MAAbA,EAEP,KAEFnL,EAASyC,MAAMyI,IAAe,GACvC,CAMA,SAASE,EAAYxN,EAAIyN,QACF,IAAjBA,IACFA,EAAe,KAEjB,IACErL,SAAUsL,EAAU,OACpB1K,EAAS,GAAE,KACXC,EAAO,IACS,iBAAPjD,EAAkB+C,EAAU/C,GAAMA,EACzCoC,EAAWsL,EAAaA,EAAWtJ,WAAW,KAAOsJ,EAO3D,SAAyBlE,EAAciE,GACrC,IAAIxD,EAAWwD,EAAalK,QAAQ,OAAQ,IAAIjE,MAAM,KAUtD,OATuBkK,EAAalK,MAAM,KACzBC,SAAQ8L,IACP,OAAZA,EAEEpB,EAAS3J,OAAS,GAAG2J,EAAS0D,MACb,MAAZtC,GACTpB,EAAS/G,KAAKmI,EAChB,IAEKpB,EAAS3J,OAAS,EAAI2J,EAAS7K,KAAK,KAAO,GACpD,CAnBwEwO,CAAgBF,EAAYD,GAAgBA,EAClH,MAAO,CACLrL,WACAY,OAAQ6K,EAAgB7K,GACxBC,KAAM6K,EAAc7K,GAExB,CAcA,SAAS8K,EAAoBC,EAAMC,EAAOC,EAAMpL,GAC9C,MAAO,qBAAuBkL,EAAvB,2CAAiFC,EAAQ,YAAc1L,KAAKC,UAAUM,GAAtH,yCAAgLoL,EAAhL,2HACT,CAwBA,SAASC,EAA2BtF,GAClC,OAAOA,EAAQsC,QAAO,CAAClC,EAAO3H,IAAoB,IAAVA,GAAe2H,EAAM5B,MAAMvE,MAAQmG,EAAM5B,MAAMvE,KAAKxC,OAAS,GACvG,CAIA,SAAS8N,EAAUC,EAAOC,EAAgBC,EAAkBC,GAI1D,IAAIxO,OAHmB,IAAnBwO,IACFA,GAAiB,GAGE,iBAAVH,EACTrO,EAAK+C,EAAUsL,IAEfrO,EAAKU,EAAS,CAAC,EAAG2N,GAClBvJ,GAAW9E,EAAGoC,WAAapC,EAAGoC,SAAS0H,SAAS,KAAMiE,EAAoB,IAAK,WAAY,SAAU/N,IACrG8E,GAAW9E,EAAGoC,WAAapC,EAAGoC,SAAS0H,SAAS,KAAMiE,EAAoB,IAAK,WAAY,OAAQ/N,IACnG8E,GAAW9E,EAAGgD,SAAWhD,EAAGgD,OAAO8G,SAAS,KAAMiE,EAAoB,IAAK,SAAU,OAAQ/N,KAE/F,IAEIF,EAFA2O,EAAwB,KAAVJ,GAAgC,KAAhBrO,EAAGoC,SACjCsL,EAAae,EAAc,IAAMzO,EAAGoC,SAWxC,GAAIoM,GAAgC,MAAdd,EACpB5N,EAAOyO,MACF,CACL,IAAIG,EAAqBJ,EAAehO,OAAS,EACjD,GAAIoN,EAAWtJ,WAAW,MAAO,CAC/B,IAAIuK,EAAajB,EAAWpO,MAAM,KAIlC,KAAyB,OAAlBqP,EAAW,IAChBA,EAAWC,QACXF,GAAsB,EAExB1O,EAAGoC,SAAWuM,EAAWvP,KAAK,IAChC,CAGAU,EAAO4O,GAAsB,EAAIJ,EAAeI,GAAsB,GACxE,CACA,IAAI5L,EAAO0K,EAAYxN,EAAIF,GAEvB+O,EAA2BnB,GAA6B,MAAfA,GAAsBA,EAAWrD,SAAS,KAEnFyE,GAA2BL,GAA8B,MAAff,IAAuBa,EAAiBlE,SAAS,KAI/F,OAHKvH,EAAKV,SAASiI,SAAS,OAASwE,IAA4BC,IAC/DhM,EAAKV,UAAY,KAEZU,CACT,CAWA,MAAM4G,EAAYqF,GAASA,EAAM3P,KAAK,KAAKmE,QAAQ,SAAU,KAIvDuI,EAAoB1J,GAAYA,EAASmB,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,KAI7EsK,EAAkB7K,GAAWA,GAAqB,MAAXA,EAAsBA,EAAOoB,WAAW,KAAOpB,EAAS,IAAMA,EAA7C,GAIxD8K,EAAgB7K,GAASA,GAAiB,MAATA,EAAoBA,EAAKmB,WAAW,KAAOnB,EAAO,IAAMA,EAAzC,GAKhD+L,EAAO,SAAc5F,EAAM6F,QAClB,IAATA,IACFA,EAAO,CAAC,GAEV,IAAIC,EAA+B,iBAATD,EAAoB,CAC5CE,OAAQF,GACNA,EACAG,EAAU,IAAIC,QAAQH,EAAaE,SAIvC,OAHKA,EAAQE,IAAI,iBACfF,EAAQG,IAAI,eAAgB,mCAEvB,IAAIC,SAASjN,KAAKC,UAAU4G,GAAO1I,EAAS,CAAC,EAAGwO,EAAc,CACnEE,YAEJ,EACA,MAAMK,UAA6BxK,OACnC,MAAMyK,EACJ,WAAAC,CAAYvG,EAAM8F,GAOhB,IAAIU,EANJ/O,KAAKgP,eAAiB,IAAI9I,IAC1BlG,KAAKiP,YAAc,IAAI/I,IACvBlG,KAAKkP,aAAe,GACpBjL,EAAUsE,GAAwB,iBAATA,IAAsB4G,MAAMC,QAAQ7G,GAAO,sCAIpEvI,KAAKqP,aAAe,IAAIC,SAAQ,CAACxD,EAAGyD,IAAMR,EAASQ,IACnDvP,KAAKwP,WAAa,IAAIC,gBACtB,IAAIC,EAAU,IAAMX,EAAO,IAAIH,EAAqB,0BACpD5O,KAAK2P,oBAAsB,IAAM3P,KAAKwP,WAAWI,OAAOlK,oBAAoB,QAASgK,GACrF1P,KAAKwP,WAAWI,OAAOnK,iBAAiB,QAASiK,GACjD1P,KAAKuI,KAAOhL,OAAO6C,QAAQmI,GAAMgC,QAAO,CAACsF,EAAK/K,KAC5C,IAAKpF,EAAKwE,GAASY,EACnB,OAAOvH,OAAOO,OAAO+R,EAAK,CACxB,CAACnQ,GAAMM,KAAK8P,aAAapQ,EAAKwE,IAC9B,GACD,CAAC,GACAlE,KAAK+P,MAEP/P,KAAK2P,sBAEP3P,KAAKoO,KAAOC,CACd,CACA,YAAAyB,CAAapQ,EAAKwE,GAChB,KAAMA,aAAiBoL,SACrB,OAAOpL,EAETlE,KAAKkP,aAAa7M,KAAK3C,GACvBM,KAAKgP,eAAegB,IAAItQ,GAGxB,IAAIuQ,EAAUX,QAAQY,KAAK,CAAChM,EAAOlE,KAAKqP,eAAec,MAAK5H,GAAQvI,KAAKoQ,SAASH,EAASvQ,OAAKkB,EAAW2H,KAAO1C,GAAS7F,KAAKoQ,SAASH,EAASvQ,EAAKmG,KAOvJ,OAJAoK,EAAQI,OAAM,SACd9S,OAAO+S,eAAeL,EAAS,WAAY,CACzCM,IAAK,KAAM,IAENN,CACT,CACA,QAAAG,CAASH,EAASvQ,EAAKmG,EAAO0C,GAC5B,GAAIvI,KAAKwP,WAAWI,OAAOY,SAAW3K,aAAiB+I,EAKrD,OAJA5O,KAAK2P,sBACLpS,OAAO+S,eAAeL,EAAS,SAAU,CACvCM,IAAK,IAAM1K,IAENyJ,QAAQP,OAAOlJ,GASxB,GAPA7F,KAAKgP,eAAeyB,OAAO/Q,GACvBM,KAAK+P,MAEP/P,KAAK2P,2BAIO/O,IAAViF,QAAgCjF,IAAT2H,EAAoB,CAC7C,IAAImI,EAAiB,IAAItM,MAAM,0BAA6B1E,EAA7B,yFAK/B,OAJAnC,OAAO+S,eAAeL,EAAS,SAAU,CACvCM,IAAK,IAAMG,IAEb1Q,KAAK2Q,MAAK,EAAOjR,GACV4P,QAAQP,OAAO2B,EACxB,CACA,YAAa9P,IAAT2H,GACFhL,OAAO+S,eAAeL,EAAS,SAAU,CACvCM,IAAK,IAAM1K,IAEb7F,KAAK2Q,MAAK,EAAOjR,GACV4P,QAAQP,OAAOlJ,KAExBtI,OAAO+S,eAAeL,EAAS,QAAS,CACtCM,IAAK,IAAMhI,IAEbvI,KAAK2Q,MAAK,EAAOjR,GACV6I,EACT,CACA,IAAAoI,CAAKH,EAASI,GACZ5Q,KAAKiP,YAAYvQ,SAAQmS,GAAcA,EAAWL,EAASI,IAC7D,CACA,SAAAE,CAAU/N,GAER,OADA/C,KAAKiP,YAAYe,IAAIjN,GACd,IAAM/C,KAAKiP,YAAYwB,OAAO1N,EACvC,CACA,MAAAgO,GACE/Q,KAAKwP,WAAWwB,QAChBhR,KAAKgP,eAAetQ,SAAQ,CAACuS,EAAGC,IAAMlR,KAAKgP,eAAeyB,OAAOS,KACjElR,KAAK2Q,MAAK,EACZ,CACA,iBAAMQ,CAAYvB,GAChB,IAAIY,GAAU,EACd,IAAKxQ,KAAK+P,KAAM,CACd,IAAIL,EAAU,IAAM1P,KAAK+Q,SACzBnB,EAAOnK,iBAAiB,QAASiK,GACjCc,QAAgB,IAAIlB,SAAQ8B,IAC1BpR,KAAK8Q,WAAUN,IACbZ,EAAOlK,oBAAoB,QAASgK,IAChCc,GAAWxQ,KAAK+P,OAClBqB,EAAQZ,EACV,GACA,GAEN,CACA,OAAOA,CACT,CACA,QAAIT,GACF,OAAoC,IAA7B/P,KAAKgP,eAAeqC,IAC7B,CACA,iBAAIC,GAEF,OADArN,EAAwB,OAAdjE,KAAKuI,MAAiBvI,KAAK+P,KAAM,6DACpCxS,OAAO6C,QAAQJ,KAAKuI,MAAMgC,QAAO,CAACsF,EAAK0B,KAC5C,IAAK7R,EAAKwE,GAASqN,EACnB,OAAOhU,OAAOO,OAAO+R,EAAK,CACxB,CAACnQ,GAAM8R,EAAqBtN,IAC5B,GACD,CAAC,EACN,CACA,eAAIuN,GACF,OAAOtC,MAAMlQ,KAAKe,KAAKgP,eACzB,EAKF,SAASwC,EAAqBtN,GAC5B,IAJF,SAA0BA,GACxB,OAAOA,aAAiBoL,UAA8B,IAAnBpL,EAAMwN,QAC3C,CAEOC,CAAiBzN,GACpB,OAAOA,EAET,GAAIA,EAAM0N,OACR,MAAM1N,EAAM0N,OAEd,OAAO1N,EAAM2N,KACf,CACA,MAAMC,EAAQ,SAAevJ,EAAM6F,GAOjC,YANa,IAATA,IACFA,EAAO,CAAC,GAKH,IAAIS,EAAatG,EAHW,iBAAT6F,EAAoB,CAC5CE,OAAQF,GACNA,EAEN,EAKM2D,EAAW,SAAkBlO,EAAKuK,QACzB,IAATA,IACFA,EAAO,KAET,IAAIC,EAAeD,EACS,iBAAjBC,EACTA,EAAe,CACbC,OAAQD,QAE8B,IAAxBA,EAAaC,SAC7BD,EAAaC,OAAS,KAExB,IAAIC,EAAU,IAAIC,QAAQH,EAAaE,SAEvC,OADAA,EAAQG,IAAI,WAAY7K,GACjB,IAAI8K,SAAS,KAAM9O,EAAS,CAAC,EAAGwO,EAAc,CACnDE,YAEJ,EAMMyD,EAAmB,CAACnO,EAAKuK,KAC7B,IAAI6D,EAAWF,EAASlO,EAAKuK,GAE7B,OADA6D,EAAS1D,QAAQG,IAAI,0BAA2B,QACzCuD,CAAQ,EAUjB,MAAMC,EACJ,WAAApD,CAAYR,EAAQ6D,EAAY5J,EAAM6J,QACnB,IAAbA,IACFA,GAAW,GAEbpS,KAAKsO,OAASA,EACdtO,KAAKmS,WAAaA,GAAc,GAChCnS,KAAKoS,SAAWA,EACZ7J,aAAgBnE,OAClBpE,KAAKuI,KAAOA,EAAK1D,WACjB7E,KAAK6F,MAAQ0C,GAEbvI,KAAKuI,KAAOA,CAEhB,EAMF,SAAS8J,GAAqBxM,GAC5B,OAAgB,MAATA,GAAyC,iBAAjBA,EAAMyI,QAAmD,iBAArBzI,EAAMsM,YAAqD,kBAAnBtM,EAAMuM,UAA0B,SAAUvM,CACvJ,CAEA,MAAMyM,GAA0B,CAAC,OAAQ,MAAO,QAAS,UACnDC,GAAuB,IAAIrM,IAAIoM,IAC/BE,GAAyB,CAAC,SAAUF,IACpCG,GAAsB,IAAIvM,IAAIsM,IAC9BE,GAAsB,IAAIxM,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MACnDyM,GAAoC,IAAIzM,IAAI,CAAC,IAAK,MAClD0M,GAAkB,CACtBjS,MAAO,OACPU,cAAUT,EACViS,gBAAYjS,EACZkS,gBAAYlS,EACZmS,iBAAanS,EACboS,cAAUpS,EACVuN,UAAMvN,EACNqS,UAAMrS,GAEFsS,GAAe,CACnBvS,MAAO,OACP4H,UAAM3H,EACNiS,gBAAYjS,EACZkS,gBAAYlS,EACZmS,iBAAanS,EACboS,cAAUpS,EACVuN,UAAMvN,EACNqS,UAAMrS,GAEFuS,GAAe,CACnBxS,MAAO,YACPyS,aAASxS,EACTyS,WAAOzS,EACPS,cAAUT,GAEN0S,GAAqB,gCACrBC,GAA4B/M,IAAS,CACzCgN,iBAAkBC,QAAQjN,EAAMgN,oBAE5BE,GAA0B,2BAQhC,SAASC,GAAavF,GACpB,MAAMwF,EAAexF,EAAKlL,OAASkL,EAAKlL,OAA2B,oBAAXA,OAAyBA,YAAStC,EACpFiT,OAAoC,IAAjBD,QAAiE,IAA1BA,EAAanQ,eAA2E,IAAxCmQ,EAAanQ,SAASqQ,cAChIC,GAAYF,EAElB,IAAIxN,EACJ,GAFApC,EAAUmK,EAAKhI,OAAO3G,OAAS,EAAG,6DAE9B2O,EAAK/H,mBACPA,EAAqB+H,EAAK/H,wBACrB,GAAI+H,EAAK4F,oBAAqB,CAEnC,IAAIA,EAAsB5F,EAAK4F,oBAC/B3N,EAAqBG,IAAS,CAC5BgN,iBAAkBQ,EAAoBxN,IAE1C,MACEH,EAAqBkN,GAGvB,IAGIU,EAHA1N,EAAW,CAAC,EAEZ2N,EAAa/N,EAA0BiI,EAAKhI,OAAQC,OAAoBzF,EAAW2F,GAEnFU,EAAWmH,EAAKnH,UAAY,IAE5BkN,EAAStU,EAAS,CACpBuU,wBAAwB,EACxBC,oBAAoB,GACnBjG,EAAK+F,QAEJG,EAAkB,KAElBrF,EAAc,IAAI/I,IAElBqO,EAAuB,KAEvBC,EAA0B,KAE1BC,EAAoB,KAOpBC,EAA8C,MAAtBtG,EAAKuG,cAC7BC,EAAiB7N,EAAYmN,EAAY9F,EAAKhJ,QAAQ/D,SAAU4F,GAChE4N,EAAgB,KACpB,GAAsB,MAAlBD,EAAwB,CAG1B,IAAI/O,EAAQiP,GAAuB,IAAK,CACtCvT,SAAU6M,EAAKhJ,QAAQ/D,SAASE,YAE9B,QACFyG,EAAO,MACPxB,GACEuO,GAAuBb,GAC3BU,EAAiB5M,EACjB6M,EAAgB,CACd,CAACrO,EAAME,IAAKb,EAEhB,CACA,IAMImP,EAwBAC,EA9BAC,IAGHN,EAAevK,MAAK8K,GAAKA,EAAE3O,MAAM4O,QAEjCR,EAAevK,MAAK8K,GAAKA,EAAE3O,MAAM6O,UAAiC,MAAtBjH,EAAKuG,eAE9ChU,EAAQ,CACV2U,cAAelH,EAAKhJ,QAAQtE,OAC5BO,SAAU+M,EAAKhJ,QAAQ/D,SACvB2G,QAAS4M,EACTM,cACAK,WAAY3C,GAEZ4C,sBAA6C,MAAtBpH,EAAKuG,eAAgC,KAC5Dc,oBAAoB,EACpBC,aAAc,OACdrN,WAAY+F,EAAKuG,eAAiBvG,EAAKuG,cAActM,YAAc,CAAC,EACpEsN,WAAYvH,EAAKuG,eAAiBvG,EAAKuG,cAAcgB,YAAc,KACnEC,OAAQxH,EAAKuG,eAAiBvG,EAAKuG,cAAciB,QAAUf,EAC3DgB,SAAU,IAAIC,IACdC,SAAU,IAAID,KAIZE,EAAgBpW,EAAOmB,IAGvBkV,GAA4B,EAI5BC,GAA+B,EAE/BC,EAAyB,IAAIL,IAE7BM,EAA8B,KAG9BC,GAA8B,EAK9BC,GAAyB,EAGzBC,EAA0B,GAG1BC,EAAwB,GAExBC,EAAmB,IAAIX,IAEvBY,EAAqB,EAIrBC,GAA2B,EAE3BC,EAAiB,IAAId,IAErBe,EAAmB,IAAI3Q,IAEvB4Q,EAAmB,IAAIhB,IAKvBiB,EAAkB,IAAIjB,IAGtBkB,EAAmB,IAAIlB,IAGvBmB,GAA0B,EA4F9B,SAASC,EAAYC,EAAUC,GAC7BzW,EAAQd,EAAS,CAAC,EAAGc,EAAOwW,GAC5BlI,EAAYvQ,SAAQmS,GAAcA,EAAWlQ,EAAO,CAClD0W,4BAA6BD,KAEjC,CAMA,SAASE,EAAmBjW,EAAU8V,GACpC,IAAII,EAAiBC,EAMrB,IACI7B,EADA8B,EAAqC,MAApB9W,EAAMgV,YAAqD,MAA/BhV,EAAM4U,WAAW1C,YAAsB6E,GAAiB/W,EAAM4U,WAAW1C,aAA0C,YAA3BlS,EAAM4U,WAAW5U,QAA+G,KAAjD,OAArC4W,EAAkBlW,EAASV,YAAiB,EAAS4W,EAAgBI,aAIpPhC,EAFAwB,EAASxB,WACPpY,OAAOqB,KAAKuY,EAASxB,YAAYlW,OAAS,EAC/B0X,EAASxB,WAGT,KAEN8B,EAEI9W,EAAMgV,WAGN,KAGf,IAAItN,EAAa8O,EAAS9O,WAAauP,GAAgBjX,EAAM0H,WAAY8O,EAAS9O,WAAY8O,EAASnP,SAAW,GAAImP,EAASvB,QAAUjV,EAAM0H,WAG3I0N,EAAWpV,EAAMoV,SACjBA,EAAS1E,KAAO,IAClB0E,EAAW,IAAID,IAAIC,GACnBA,EAASrX,SAAQ,CAACoN,EAAGoF,IAAM6E,EAASrH,IAAIwC,EAAGiC,OAI7C,IAUIiE,EAVA3B,GAAmD,IAA9BQ,GAAqE,MAA/BtV,EAAM4U,WAAW1C,YAAsB6E,GAAiB/W,EAAM4U,WAAW1C,cAAyG,KAAlD,OAAtC2E,EAAmBnW,EAASV,YAAiB,EAAS6W,EAAiBG,aAYhO,GAXI1D,IACFC,EAAaD,EACbA,OAAqBrT,GAEnByV,GAAwCL,IAAkBpW,EAAOmB,MAAgBiV,IAAkBpW,EAAO0C,KAC5G8L,EAAKhJ,QAAQ/C,KAAKhB,EAAUA,EAASV,OAC5BqV,IAAkBpW,EAAO+C,SAClCyL,EAAKhJ,QAAQ1C,QAAQrB,EAAUA,EAASV,QAItCqV,IAAkBpW,EAAOmB,IAAK,CAEhC,IAAI8W,EAAa1B,EAAuB5F,IAAI5P,EAAMU,SAASE,UACvDsW,GAAcA,EAAWpJ,IAAIpN,EAASE,UACxC6V,EAAqB,CACnBU,gBAAiBnX,EAAMU,SACvBkB,aAAclB,GAEP8U,EAAuB1H,IAAIpN,EAASE,YAG7C6V,EAAqB,CACnBU,gBAAiBzW,EACjBkB,aAAc5B,EAAMU,UAG1B,MAAO,GAAI6U,EAA8B,CAEvC,IAAI6B,EAAU5B,EAAuB5F,IAAI5P,EAAMU,SAASE,UACpDwW,EACFA,EAAQ/H,IAAI3O,EAASE,WAErBwW,EAAU,IAAI7R,IAAI,CAAC7E,EAASE,WAC5B4U,EAAuBzH,IAAI/N,EAAMU,SAASE,SAAUwW,IAEtDX,EAAqB,CACnBU,gBAAiBnX,EAAMU,SACvBkB,aAAclB,EAElB,CACA6V,EAAYrX,EAAS,CAAC,EAAGsX,EAAU,CACjCxB,aACAtN,aACAiN,cAAeU,EACf3U,WACA6T,aAAa,EACbK,WAAY3C,GACZ8C,aAAc,OACdF,sBAAuBwC,GAAuB3W,EAAU8V,EAASnP,SAAWrH,EAAMqH,SAClFyN,qBACAM,aACEqB,GAEJpB,EAAgBpW,EAAOmB,IACvBkV,GAA4B,EAC5BC,GAA+B,EAC/BG,GAA8B,EAC9BC,GAAyB,EACzBC,EAA0B,GAC1BC,EAAwB,EAC1B,CA0GAyB,eAAeC,EAAgB5C,EAAejU,EAAU8W,GAItDlD,GAA+BA,EAA4BjE,QAC3DiE,EAA8B,KAC9Be,EAAgBV,EAChBe,GAAgF,KAAjD8B,GAAQA,EAAKC,gCA62B9C,SAA4B/W,EAAU2G,GACpC,GAAIuM,GAAwBE,EAAmB,CAC7C,IAAI/U,EAAM2Y,GAAahX,EAAU2G,GACjCuM,EAAqB7U,GAAO+U,GAC9B,CACF,CA/2BE6D,CAAmB3X,EAAMU,SAAUV,EAAMqH,SACzCiO,GAAkE,KAArCkC,GAAQA,EAAK1C,oBAC1CS,GAAuE,KAAvCiC,GAAQA,EAAKI,sBAC7C,IAAIC,EAAcvE,GAAsBC,EACpCuE,EAAoBN,GAAQA,EAAKO,mBACjC1Q,EAAUjB,EAAYyR,EAAanX,EAAU4F,GAEjD,IAAKe,EAAS,CACZ,IAAInC,EAAQiP,GAAuB,IAAK,CACtCvT,SAAUF,EAASE,YAGnByG,QAAS2Q,EAAe,MACxBnS,GACEuO,GAAuByD,GAU3B,OARAI,UACAtB,EAAmBjW,EAAU,CAC3B2G,QAAS2Q,EACTtQ,WAAY,CAAC,EACbuN,OAAQ,CACN,CAACpP,EAAME,IAAKb,IAIlB,CAOA,GAAIlF,EAAMuU,cAAgBoB,GAoiE9B,SAA0BhP,EAAGC,GAC3B,GAAID,EAAE/F,WAAagG,EAAEhG,UAAY+F,EAAEnF,SAAWoF,EAAEpF,OAC9C,OAAO,EAET,GAAe,KAAXmF,EAAElF,KAEJ,MAAkB,KAAXmF,EAAEnF,KACJ,GAAIkF,EAAElF,OAASmF,EAAEnF,KAEtB,OAAO,EACF,GAAe,KAAXmF,EAAEnF,KAEX,OAAO,EAIT,OAAO,CACT,CArjEwDyW,CAAiBlY,EAAMU,SAAUA,MAAe8W,GAAQA,EAAKW,YAAcpB,GAAiBS,EAAKW,WAAWjG,aAI9J,YAHAyE,EAAmBjW,EAAU,CAC3B2G,YAKJiN,EAA8B,IAAIxF,gBAClC,IACIsJ,EACAC,EAFAC,EAAUC,GAAwB9K,EAAKhJ,QAAS/D,EAAU4T,EAA4BrF,OAAQuI,GAAQA,EAAKW,YAG/G,GAAIX,GAAQA,EAAKa,aAKfA,EAAe,CACb,CAACG,GAAoBnR,GAASxB,MAAME,IAAKyR,EAAKa,mBAE3C,GAAIb,GAAQA,EAAKW,YAAcpB,GAAiBS,EAAKW,WAAWjG,YAAa,CAElF,IAAIuG,QAsCRnB,eAA4BgB,EAAS5X,EAAUyX,EAAY9Q,EAASmQ,QACrD,IAATA,IACFA,EAAO,CAAC,GAEVkB,KAEA,IAKI1P,EALA4L,EA6pER,SAAiClU,EAAUyX,GACzC,IAAIvD,EAAa,CACf5U,MAAO,aACPU,WACAwR,WAAYiG,EAAWjG,WACvBC,WAAYgG,EAAWhG,WACvBC,YAAa+F,EAAW/F,YACxBC,SAAU8F,EAAW9F,SACrB7E,KAAM2K,EAAW3K,KACjB8E,KAAM6F,EAAW7F,MAEnB,OAAOsC,CACT,CAzqEqB+D,CAAwBjY,EAAUyX,GACnD5B,EAAY,CACV3B,eAIF,IAAIgE,EAAcC,GAAexR,EAAS3G,GAC1C,GAAKkY,EAAY/S,MAAM1F,QAAWyY,EAAY/S,MAAM4O,MAWlD,GADAzL,QAAe8P,GAAmB,SAAUR,EAASM,EAAavR,EAASzB,EAAUF,EAAoBY,GACrGgS,EAAQrJ,OAAOY,QACjB,MAAO,CACLkJ,gBAAgB,QAZpB/P,EAAS,CACPgQ,KAAM3T,EAAWH,MACjBA,MAAOiP,GAAuB,IAAK,CACjC8E,OAAQX,EAAQW,OAChBrY,SAAUF,EAASE,SACnBsY,QAASN,EAAY/S,MAAME,MAWjC,GAAIoT,GAAiBnQ,GAAS,CAC5B,IAAIjH,EAaJ,OAXEA,EADEyV,GAAwB,MAAhBA,EAAKzV,QACLyV,EAAKzV,QAKLiH,EAAOtI,WAAaV,EAAMU,SAASE,SAAWZ,EAAMU,SAASc,aAEnE4X,GAAwBpZ,EAAOgJ,EAAQ,CAC3CmP,aACApW,YAEK,CACLgX,gBAAgB,EAEpB,CACA,GAAIM,GAAcrQ,GAAS,CAGzB,IAAIsQ,EAAgBd,GAAoBnR,EAASuR,EAAY/S,MAAME,IAQnE,OAH+B,KAA1ByR,GAAQA,EAAKzV,WAChBsT,EAAgBpW,EAAO0C,MAElB,CAELyW,kBAAmB,CAAC,EACpBmB,mBAAoB,CAClB,CAACD,EAAczT,MAAME,IAAKiD,EAAO9D,OAGvC,CACA,GAAIsU,GAAiBxQ,GACnB,MAAMmL,GAAuB,IAAK,CAChC6E,KAAM,iBAGV,MAAO,CACLZ,kBAAmB,CACjB,CAACQ,EAAY/S,MAAME,IAAKiD,EAAOpB,MAGrC,CAnH6B6R,CAAanB,EAAS5X,EAAU8W,EAAKW,WAAY9Q,EAAS,CACjFtF,QAASyV,EAAKzV,UAEhB,GAAI0W,EAAaM,eACf,OAEFX,EAAoBK,EAAaL,kBACjCC,EAAeI,EAAac,mBAC5BzB,EAAoB4B,GAAqBhZ,EAAU8W,EAAKW,YAExDG,EAAU,IAAIqB,QAAQrB,EAAQpV,IAAK,CACjC+L,OAAQqJ,EAAQrJ,QAEpB,CAEA,IAAI,eACF8J,EAAc,WACdrR,EAAU,OACVuN,SAoGJqC,eAA6BgB,EAAS5X,EAAU2G,EAAS0Q,EAAoBI,EAAYyB,EAAmB7X,EAASqW,EAAmBC,GAEtI,IAAIP,EAAoBC,GAAsB2B,GAAqBhZ,EAAUyX,GAGzE0B,EAAmB1B,GAAcyB,GAAqBE,GAA4BhC,GAClFD,EAAcvE,GAAsBC,GACnCwG,EAAeC,GAAwBC,GAAiBxM,EAAKhJ,QAASzE,EAAOqH,EAASwS,EAAkBnZ,EAAUiV,EAAwBC,EAAyBC,EAAuBM,EAAkBD,EAAkB2B,EAAavR,EAAU8R,EAAmBC,GAO7Q,GAHAJ,IAAsBiB,KAAa7R,GAAWA,EAAQqC,MAAK8K,GAAKA,EAAE3O,MAAME,KAAOmT,MAAaa,GAAiBA,EAAcrQ,MAAK8K,GAAKA,EAAE3O,MAAME,KAAOmT,MACpJlD,IAA4BD,EAEC,IAAzBgE,EAAcjb,QAAgD,IAAhCkb,EAAqBlb,OAAc,CACnE,IAAIob,EAAkBC,KAWtB,OAVAxD,EAAmBjW,EAAUxB,EAAS,CACpCmI,UACAK,WAAY,CAAC,EAEbuN,OAAQoD,GAAgB,MACvBD,EAAoB,CACrBpD,WAAYoD,GACV,CAAC,EAAG8B,EAAkB,CACxBhF,SAAU,IAAIC,IAAInV,EAAMkV,WACtB,CAAC,IACE,CACL6D,gBAAgB,EAEpB,CAKA,IAAKrD,EAA6B,CAChCsE,EAAqBjc,SAAQqc,IAC3B,IAAIC,EAAUra,EAAMkV,SAAStF,IAAIwK,EAAGrb,KAChCub,EAAsBC,QAAkBta,EAAWoa,EAAUA,EAAQzS,UAAO3H,GAChFD,EAAMkV,SAASnH,IAAIqM,EAAGrb,IAAKub,EAAoB,IAEjD,IAAItF,EAAaoD,GAAqBpY,EAAMgV,WAC5CuB,EAAYrX,EAAS,CACnB0V,WAAYkD,GACX9C,EAAgD,IAAnCpY,OAAOqB,KAAK+W,GAAYlW,OAAe,CACrDkW,WAAY,MACV,CACFA,cACE,CAAC,EAAGgF,EAAqBlb,OAAS,EAAI,CACxCoW,SAAU,IAAIC,IAAInV,EAAMkV,WACtB,CAAC,GACP,CACA8E,EAAqBjc,SAAQqc,IACvBtE,EAAiBhI,IAAIsM,EAAGrb,MAC1Byb,GAAaJ,EAAGrb,KAEdqb,EAAGvL,YAILiH,EAAiB/H,IAAIqM,EAAGrb,IAAKqb,EAAGvL,WAClC,IAGF,IAAI4L,EAAiC,IAAMT,EAAqBjc,SAAQ2c,GAAKF,GAAaE,EAAE3b,OACxFuV,GACFA,EAA4BrF,OAAOnK,iBAAiB,QAAS2V,GAE/D,IAAI,QACFE,EAAO,cACPC,EAAa,eACbC,SACQC,GAA+B9a,EAAMqH,QAASA,EAAS0S,EAAeC,EAAsB1B,GACtG,GAAIA,EAAQrJ,OAAOY,QACjB,MAAO,CACLkJ,gBAAgB,GAMhBzE,GACFA,EAA4BrF,OAAOlK,oBAAoB,QAAS0V,GAElET,EAAqBjc,SAAQqc,GAAMtE,EAAiBhG,OAAOsK,EAAGrb,OAE9D,IAAIqS,EAAW2J,GAAaJ,GAC5B,GAAIvJ,EAAU,CACZ,GAAIA,EAASrN,KAAOgW,EAAcjb,OAAQ,CAIxC,IAAIkc,EAAahB,EAAqB5I,EAASrN,IAAMgW,EAAcjb,QAAQC,IAC3EmX,EAAiB7G,IAAI2L,EACvB,CAIA,aAHM5B,GAAwBpZ,EAAOoR,EAASpI,OAAQ,CACpDjH,YAEK,CACLgX,gBAAgB,EAEpB,CAEA,IAAI,WACFrR,EAAU,OACVuN,GACEgG,GAAkBjb,EAAOqH,EAAS0S,EAAea,EAAevC,EAAc2B,EAAsBa,EAAgBzE,GAExHA,EAAgBrY,SAAQ,CAACmd,EAAchC,KACrCgC,EAAa/K,WAAUN,KAIjBA,GAAWqL,EAAa9L,OAC1BgH,EAAgBtG,OAAOoJ,EACzB,GACA,IAEJ,IAAIgB,EAAkBC,KAClBgB,EAAqBC,GAAqBpF,GAC1CqF,EAAuBnB,GAAmBiB,GAAsBnB,EAAqBlb,OAAS,EAClG,OAAOI,EAAS,CACdwI,aACAuN,UACCoG,EAAuB,CACxBnG,SAAU,IAAIC,IAAInV,EAAMkV,WACtB,CAAC,EACP,CAjOYoG,CAAchD,EAAS5X,EAAU2G,EAASyQ,EAAmBN,GAAQA,EAAKW,WAAYX,GAAQA,EAAKoC,kBAAmBpC,GAAQA,EAAKzV,QAASqW,EAAmBC,GACrKU,IAMJzE,EAA8B,KAC9BqC,EAAmBjW,EAAUxB,EAAS,CACpCmI,WACC+Q,EAAoB,CACrBpD,WAAYoD,GACV,CAAC,EAAG,CACN1Q,aACAuN,YAEJ,CAkNA,SAASsG,EAAWxc,GAClB,OAAOiB,EAAMkV,SAAStF,IAAI7Q,IAAQwT,EACpC,CAqSA+E,eAAe8B,GAAwBpZ,EAAOoR,EAAUoK,GACtD,IAAI,WACFrD,EAAU,kBACVyB,EAAiB,QACjB7X,QACY,IAAVyZ,EAAmB,CAAC,EAAIA,EACxBpK,EAASqK,aACX9F,GAAyB,GAE3B,IAAI+F,EAAmB/a,EAAeX,EAAMU,SAAU0Q,EAAS1Q,SAAU,CACvEsW,aAAa,IAGf,GADA1T,EAAUoY,EAAkB,kDACxBxI,EAAW,CACb,IAAIyI,GAAmB,EACvB,GAAIvK,EAASwK,eAEXD,GAAmB,OACd,GAAIhJ,GAAmB7I,KAAKsH,EAAS1Q,UAAW,CACrD,MAAMwC,EAAMuK,EAAKhJ,QAAQtD,UAAUiQ,EAAS1Q,UAC5Cib,EAEAzY,EAAI0B,SAAWqO,EAAavS,SAASkE,QAEI,MAAzC2B,EAAcrD,EAAItC,SAAU0F,EAC9B,CACA,GAAIqV,EAMF,YALI5Z,EACFkR,EAAavS,SAASqB,QAAQqP,EAAS1Q,UAEvCuS,EAAavS,SAASvD,OAAOiU,EAAS1Q,UAI5C,CAGA4T,EAA8B,KAC9B,IAAIuH,GAAoC,IAAZ9Z,EAAmB9C,EAAO+C,QAAU/C,EAAO0C,MAGnE,WACFuQ,EAAU,WACVC,EAAU,YACVC,GACEpS,EAAM4U,YACLuD,IAAeyB,GAAqB1H,GAAcC,GAAcC,IACnE+F,EAAa2B,GAA4B9Z,EAAM4U,aAKjD,IAAIiF,EAAmB1B,GAAcyB,EACrC,GAAI5H,GAAkClE,IAAIsD,EAASzD,SAAWkM,GAAoB9C,GAAiB8C,EAAiB3H,kBAC5GqF,EAAgBsE,EAAuBH,EAAkB,CAC7DvD,WAAYjZ,EAAS,CAAC,EAAG2a,EAAkB,CACzC1H,WAAYf,EAAS1Q,WAGvBoU,mBAAoBQ,QAEjB,CAGL,IAAIyC,EAAqB2B,GAAqBgC,EAAkBvD,SAC1DZ,EAAgBsE,EAAuBH,EAAkB,CAC7D3D,qBAEA6B,oBAEA9E,mBAAoBQ,GAExB,CACF,CACAgC,eAAewD,GAA+BgB,EAAgBzU,EAAS0S,EAAegC,EAAgBzD,GAIpG,IAAIqC,QAAgBhM,QAAQqN,IAAI,IAAIjC,EAAcrc,KAAI+J,GAASqR,GAAmB,SAAUR,EAAS7Q,EAAOJ,EAASzB,EAAUF,EAAoBY,QAAeyV,EAAere,KAAIgd,IACnL,GAAIA,EAAErT,SAAWqT,EAAEjT,OAASiT,EAAE7L,WAC5B,OAAOiK,GAAmB,SAAUP,GAAwB9K,EAAKhJ,QAASiW,EAAEpZ,KAAMoZ,EAAE7L,WAAWI,QAASyL,EAAEjT,MAAOiT,EAAErT,QAASzB,EAAUF,EAAoBY,GAQ1J,MANY,CACV0S,KAAM3T,EAAWH,MACjBA,MAAOiP,GAAuB,IAAK,CACjCvT,SAAU8Z,EAAEpZ,OAIlB,MAEEsZ,EAAgBD,EAAQtX,MAAM,EAAG0W,EAAcjb,QAC/C+b,EAAiBF,EAAQtX,MAAM0W,EAAcjb,QAEjD,aADM6P,QAAQqN,IAAI,CAACC,GAAuBH,EAAgB/B,EAAea,EAAeA,EAAcld,KAAI,IAAM4a,EAAQrJ,UAAS,EAAOjP,EAAM0H,YAAauU,GAAuBH,EAAgBC,EAAere,KAAIgd,GAAKA,EAAEjT,QAAQoT,EAAgBkB,EAAere,KAAIgd,GAAKA,EAAE7L,WAAa6L,EAAE7L,WAAWI,OAAS,QAAO,KACjT,CACL0L,UACAC,gBACAC,iBAEJ,CACA,SAASnC,KAEP/C,GAAyB,EAGzBC,EAAwBlU,QAAQuW,MAEhC9B,EAAiBpY,SAAQ,CAACoN,EAAGpM,KACvB+W,EAAiBhI,IAAI/O,KACvB8W,EAAsBnU,KAAK3C,GAC3Byb,GAAazb,GACf,GAEJ,CACA,SAASmd,GAAgBnd,EAAKma,EAAShU,GACrC,IAAIoU,EAAgBd,GAAoBxY,EAAMqH,QAAS6R,GACvDiD,GAAcpd,GACdwX,EAAY,CACVtB,OAAQ,CACN,CAACqE,EAAczT,MAAME,IAAKb,GAE5BgQ,SAAU,IAAIC,IAAInV,EAAMkV,WAE5B,CACA,SAASiH,GAAcpd,GACrB,IAAIsb,EAAUra,EAAMkV,SAAStF,IAAI7Q,IAI7B+W,EAAiBhI,IAAI/O,IAAUsb,GAA6B,YAAlBA,EAAQra,OAAuBiW,EAAenI,IAAI/O,IAC9Fyb,GAAazb,GAEfoX,EAAiBrG,OAAO/Q,GACxBkX,EAAenG,OAAO/Q,GACtBmX,EAAiBpG,OAAO/Q,GACxBiB,EAAMkV,SAASpF,OAAO/Q,EACxB,CACA,SAASyb,GAAazb,GACpB,IAAI8P,EAAaiH,EAAiBlG,IAAI7Q,GACtCuE,EAAUuL,EAAY,8BAAgC9P,GACtD8P,EAAWwB,QACXyF,EAAiBhG,OAAO/Q,EAC1B,CACA,SAASqd,GAAiBne,GACxB,IAAK,IAAIc,KAAOd,EAAM,CACpB,IACIoe,EAAcC,GADJf,EAAWxc,GACgB6I,MACzC5H,EAAMkV,SAASnH,IAAIhP,EAAKsd,EAC1B,CACF,CACA,SAASlC,KACP,IAAIoC,EAAW,GACXrC,GAAkB,EACtB,IAAK,IAAInb,KAAOmX,EAAkB,CAChC,IAAImE,EAAUra,EAAMkV,SAAStF,IAAI7Q,GACjCuE,EAAU+W,EAAS,qBAAuBtb,GACpB,YAAlBsb,EAAQra,QACVkW,EAAiBpG,OAAO/Q,GACxBwd,EAAS7a,KAAK3C,GACdmb,GAAkB,EAEtB,CAEA,OADAkC,GAAiBG,GACVrC,CACT,CACA,SAASkB,GAAqBoB,GAC5B,IAAIC,EAAa,GACjB,IAAK,IAAK1d,EAAKgH,KAAOkQ,EACpB,GAAIlQ,EAAKyW,EAAU,CACjB,IAAInC,EAAUra,EAAMkV,SAAStF,IAAI7Q,GACjCuE,EAAU+W,EAAS,qBAAuBtb,GACpB,YAAlBsb,EAAQra,QACVwa,GAAazb,GACbkX,EAAenG,OAAO/Q,GACtB0d,EAAW/a,KAAK3C,GAEpB,CAGF,OADAqd,GAAiBK,GACVA,EAAW3d,OAAS,CAC7B,CAQA,SAAS4d,GAAc3d,GACrBiB,EAAMoV,SAAStF,OAAO/Q,GACtBsX,EAAiBvG,OAAO/Q,EAC1B,CAEA,SAAS4d,GAAc5d,EAAK6d,GAC1B,IAAIC,EAAU7c,EAAMoV,SAASxF,IAAI7Q,IAAQyT,GAGzClP,EAA4B,cAAlBuZ,EAAQ7c,OAA8C,YAArB4c,EAAW5c,OAAyC,YAAlB6c,EAAQ7c,OAA4C,YAArB4c,EAAW5c,OAAyC,YAAlB6c,EAAQ7c,OAA4C,eAArB4c,EAAW5c,OAA4C,YAAlB6c,EAAQ7c,OAA4C,cAArB4c,EAAW5c,OAA2C,eAAlB6c,EAAQ7c,OAA+C,cAArB4c,EAAW5c,MAAuB,qCAAuC6c,EAAQ7c,MAAQ,OAAS4c,EAAW5c,OACpa,IAAIoV,EAAW,IAAID,IAAInV,EAAMoV,UAC7BA,EAASrH,IAAIhP,EAAK6d,GAClBrG,EAAY,CACVnB,YAEJ,CACA,SAAS0H,GAAsBlM,GAC7B,IAAI,gBACFuG,EAAe,aACfvV,EAAY,cACZ+S,GACE/D,EACJ,GAA8B,IAA1ByF,EAAiB3F,KACnB,OAIE2F,EAAiB3F,KAAO,GAC1B7P,GAAQ,EAAO,gDAEjB,IAAIpB,EAAU+O,MAAMlQ,KAAK+X,EAAiB5W,YACrCsd,EAAYC,GAAmBvd,EAAQA,EAAQX,OAAS,GACzD+d,EAAU7c,EAAMoV,SAASxF,IAAImN,GACjC,OAAIF,GAA6B,eAAlBA,EAAQ7c,WAAvB,EAOIgd,EAAgB,CAClB7F,kBACAvV,eACA+S,kBAEOoI,OALT,CAOF,CACA,SAAS9E,GAAsBgF,GAC7B,IAAIC,EAAoB,GAWxB,OAVA9G,EAAgBrY,SAAQ,CAACof,EAAKjE,KACvB+D,IAAaA,EAAU/D,KAI1BiE,EAAI/M,SACJ8M,EAAkBxb,KAAKwX,GACvB9C,EAAgBtG,OAAOoJ,GACzB,IAEKgE,CACT,CAyBA,SAASxF,GAAahX,EAAU2G,GAC9B,GAAIwM,EAAyB,CAE3B,OADUA,EAAwBnT,EAAU2G,EAAQ3J,KAAI8W,GAAKhN,EAA2BgN,EAAGxU,EAAM0H,gBACnFhH,EAAS3B,GACzB,CACA,OAAO2B,EAAS3B,GAClB,CAOA,SAASsY,GAAuB3W,EAAU2G,GACxC,GAAIuM,EAAsB,CACxB,IAAI7U,EAAM2Y,GAAahX,EAAU2G,GAC7B+V,EAAIxJ,EAAqB7U,GAC7B,GAAiB,iBAANqe,EACT,OAAOA,CAEX,CACA,OAAO,IACT,CAuCA,OAlCA/I,EAAS,CACP,YAAI/N,GACF,OAAOA,CACT,EACA,SAAItG,GACF,OAAOA,CACT,EACA,UAAIyF,GACF,OAAO8N,CACT,EACA,UAAIhR,GACF,OAAO0Q,CACT,EACAoK,WAlsCF,WAmDE,GAhDA1J,EAAkBlG,EAAKhJ,QAAQtC,QAAOgC,IACpC,IACEhE,OAAQwU,EAAa,SACrBjU,EAAQ,MACRoB,GACEqC,EAGJ,GAAImS,EAEF,YADAA,GAA0B,GAG5BzV,EAAkC,IAA1BwV,EAAiB3F,MAAuB,MAAT5O,EAAe,8YACtD,IAAIib,EAAaD,GAAsB,CACrC3F,gBAAiBnX,EAAMU,SACvBkB,aAAclB,EACdiU,kBAEF,OAAIoI,GAAuB,MAATjb,GAEhBwU,GAA0B,EAC1B7I,EAAKhJ,QAAQxC,IAAY,EAATH,QAEhB6a,GAAcI,EAAY,CACxB/c,MAAO,UACPU,WACA,OAAA+R,GACEkK,GAAcI,EAAY,CACxB/c,MAAO,aACPyS,aAASxS,EACTyS,WAAOzS,EACPS,aAGF+M,EAAKhJ,QAAQxC,GAAGH,EAClB,EACA,KAAA4Q,GACE,IAAI0C,EAAW,IAAID,IAAInV,EAAMoV,UAC7BA,EAASrH,IAAIgP,EAAYvK,IACzB+D,EAAY,CACVnB,YAEJ,KAIGmC,EAAgB5C,EAAejU,EAAS,IAE7CwS,EAAW,EAokFnB,SAAmCoK,EAASC,GAC1C,IACE,IAAIC,EAAmBF,EAAQG,eAAeC,QAAQ3K,IACtD,GAAIyK,EAAkB,CACpB,IAAIhQ,EAAOzM,KAAK4c,MAAMH,GACtB,IAAK,IAAKjN,EAAGD,KAAM1T,OAAO6C,QAAQ+N,GAAQ,CAAC,GACrC8C,GAAK9B,MAAMC,QAAQ6B,IACrBiN,EAAYxP,IAAIwC,EAAG,IAAIhL,IAAI+K,GAAK,IAGtC,CACF,CAAE,MAAOzM,GAET,CACF,CA/kFM+Z,CAA0B3K,EAAcuC,GACxC,IAAIqI,EAA0B,IA+kFpC,SAAmCP,EAASC,GAC1C,GAAIA,EAAY7M,KAAO,EAAG,CACxB,IAAIlD,EAAO,CAAC,EACZ,IAAK,IAAK+C,EAAGD,KAAMiN,EACjB/P,EAAK+C,GAAK,IAAID,GAEhB,IACEgN,EAAQG,eAAeK,QAAQ/K,GAAyBhS,KAAKC,UAAUwM,GACzE,CAAE,MAAOtI,GACPrE,GAAQ,EAAO,8DAAgEqE,EAAQ,KACzF,CACF,CACF,CA3lF0C6Y,CAA0B9K,EAAcuC,GAC5EvC,EAAanO,iBAAiB,WAAY+Y,GAC1CpI,EAA8B,IAAMxC,EAAalO,oBAAoB,WAAY8Y,EACnF,CASA,OAHK7d,EAAMuU,aACTgD,EAAgBtY,EAAOmB,IAAKJ,EAAMU,UAE7B2T,CACT,EA+nCElE,UAhnCF,SAAmB/N,GAEjB,OADAkM,EAAYe,IAAIjN,GACT,IAAMkM,EAAYwB,OAAO1N,EAClC,EA8mCE4b,wBAhEF,SAAiCC,EAAWC,EAAaC,GAOvD,GANAvK,EAAuBqK,EACvBnK,EAAoBoK,EACpBrK,EAA0BsK,GAAU,MAI/BpK,GAAyB/T,EAAM4U,aAAe3C,GAAiB,CAClE8B,GAAwB,EACxB,IAAIqJ,EAAI/F,GAAuBrX,EAAMU,SAAUV,EAAMqH,SAC5C,MAAL+V,GACF7G,EAAY,CACV1B,sBAAuBuI,GAG7B,CACA,MAAO,KACLxJ,EAAuB,KACvBE,EAAoB,KACpBD,EAA0B,IAAI,CAElC,EA4CEuK,SA//BF9G,eAAe8G,EAAS5f,EAAIgZ,GAC1B,GAAkB,iBAAPhZ,EAET,YADAiP,EAAKhJ,QAAQxC,GAAGzD,GAGlB,IAAI6f,EAAiBC,GAAYte,EAAMU,SAAUV,EAAMqH,QAASf,EAAUkN,EAAOE,mBAAoBlV,EAAY,MAARgZ,OAAe,EAASA,EAAK+G,YAAqB,MAAR/G,OAAe,EAASA,EAAKgH,WAC5K,KACFld,EAAI,WACJ6W,EAAU,MACVjT,GACEuZ,GAAyBjL,EAAOC,wBAAwB,EAAO4K,EAAgB7G,GAC/EL,EAAkBnX,EAAMU,SACxBkB,EAAejB,EAAeX,EAAMU,SAAUY,EAAMkW,GAAQA,EAAKxX,OAMrE4B,EAAe1C,EAAS,CAAC,EAAG0C,EAAc6L,EAAKhJ,QAAQpD,eAAeO,IACtE,IAAI8c,EAAclH,GAAwB,MAAhBA,EAAKzV,QAAkByV,EAAKzV,aAAU9B,EAC5D0U,EAAgB1V,EAAO0C,MACP,IAAhB+c,EACF/J,EAAgB1V,EAAO+C,SACE,IAAhB0c,GAAgD,MAAdvG,GAAsBpB,GAAiBoB,EAAWjG,aAAeiG,EAAWhG,aAAenS,EAAMU,SAASE,SAAWZ,EAAMU,SAASc,SAK/KmT,EAAgB1V,EAAO+C,SAEzB,IAAI8S,EAAqB0C,GAAQ,uBAAwBA,GAAmC,IAA5BA,EAAK1C,wBAA8B7U,EAC/F8c,EAAaD,GAAsB,CACrC3F,kBACAvV,eACA+S,kBAEF,IAAIoI,EAyBJ,aAAaxF,EAAgB5C,EAAe/S,EAAc,CACxDuW,aAGAE,aAAcnT,EACd4P,qBACA/S,QAASyV,GAAQA,EAAKzV,QACtB6V,qBAAsBJ,GAAQA,EAAKmH,0BA9BnChC,GAAcI,EAAY,CACxB/c,MAAO,UACPU,SAAUkB,EACV,OAAA6Q,GACEkK,GAAcI,EAAY,CACxB/c,MAAO,aACPyS,aAASxS,EACTyS,WAAOzS,EACPS,SAAUkB,IAGZwc,EAAS5f,EAAIgZ,EACf,EACA,KAAA9E,GACE,IAAI0C,EAAW,IAAID,IAAInV,EAAMoV,UAC7BA,EAASrH,IAAIgP,EAAYvK,IACzB+D,EAAY,CACVnB,YAEJ,GAaN,EA07BEwJ,MAjmBF,SAAe7f,EAAKma,EAASlW,EAAMwU,GACjC,GAAIpE,EACF,MAAM,IAAI3P,MAAM,oMAEdqS,EAAiBhI,IAAI/O,IAAMyb,GAAazb,GAC5C,IAAI8Y,EAAcvE,GAAsBC,EACpC8K,EAAiBC,GAAYte,EAAMU,SAAUV,EAAMqH,QAASf,EAAUkN,EAAOE,mBAAoB1Q,EAAMkW,EAAiB,MAAR1B,OAAe,EAASA,EAAKgH,UAC7InX,EAAUjB,EAAYyR,EAAawG,EAAgB/X,GACvD,IAAKe,EAIH,YAHA6U,GAAgBnd,EAAKma,EAAS/E,GAAuB,IAAK,CACxDvT,SAAUyd,KAId,IAAI,KACF/c,EAAI,WACJ6W,EAAU,MACVjT,GACEuZ,GAAyBjL,EAAOC,wBAAwB,EAAM4K,EAAgB7G,GAClF,GAAItS,EAEF,YADAgX,GAAgBnd,EAAKma,EAAShU,GAGhC,IAAIuC,EAAQoR,GAAexR,EAAS/F,GACpCgU,GAAkE,KAArCkC,GAAQA,EAAK1C,oBACtCqD,GAAcpB,GAAiBoB,EAAWjG,YAchDoF,eAAmCvY,EAAKma,EAAS5X,EAAMmG,EAAOoX,EAAgB1G,GAG5E,GAFAO,KACAvC,EAAiBrG,OAAO/Q,IACnB0I,EAAM5B,MAAM1F,SAAWsH,EAAM5B,MAAM4O,KAAM,CAC5C,IAAIvP,EAAQiP,GAAuB,IAAK,CACtC8E,OAAQd,EAAWjG,WACnBtR,SAAUU,EACV4X,QAASA,IAGX,YADAgD,GAAgBnd,EAAKma,EAAShU,EAEhC,CAEA,IAAI4Z,EAAkB9e,EAAMkV,SAAStF,IAAI7Q,GACrCsb,EAm8DR,SAA8BlC,EAAY2G,GACxC,IAAIzE,EAAU,CACZra,MAAO,aACPkS,WAAYiG,EAAWjG,WACvBC,WAAYgG,EAAWhG,WACvBC,YAAa+F,EAAW/F,YACxBC,SAAU8F,EAAW9F,SACrB7E,KAAM2K,EAAW3K,KACjB8E,KAAM6F,EAAW7F,KACjB1K,KAAMkX,EAAkBA,EAAgBlX,UAAO3H,GAEjD,OAAOoa,CACT,CA/8DkB0E,CAAqB5G,EAAY2G,GAC/C9e,EAAMkV,SAASnH,IAAIhP,EAAKsb,GACxB9D,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,YAG1B,IAAI8J,EAAkB,IAAIlQ,gBACtBmQ,EAAe1G,GAAwB9K,EAAKhJ,QAASnD,EAAM0d,EAAgB/P,OAAQkJ,GACvFrC,EAAiB/H,IAAIhP,EAAKigB,GAC1B,IAAIE,EAAoBnJ,EACpBoJ,QAAqBrG,GAAmB,SAAUmG,EAAcxX,EAAOoX,EAAgBjZ,EAAUF,EAAoBY,GACzH,GAAI2Y,EAAahQ,OAAOY,QAMtB,YAHIiG,EAAiBlG,IAAI7Q,KAASigB,GAChClJ,EAAiBhG,OAAO/Q,IAI5B,GAAIoa,GAAiBgG,GAAe,CAElC,GADArJ,EAAiBhG,OAAO/Q,GACpBiX,EAA0BkJ,EAAmB,CAK/C,IAAI7C,EAAcC,QAAerc,GAKjC,OAJAD,EAAMkV,SAASnH,IAAIhP,EAAKsd,QACxB9F,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,WAG5B,CAAO,CACLgB,EAAiB7G,IAAItQ,GACrB,IAAIqgB,EAAiB7E,GAAkBpC,GAKvC,OAJAnY,EAAMkV,SAASnH,IAAIhP,EAAKqgB,GACxB7I,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,YAEnBkE,GAAwBpZ,EAAOmf,EAAc,CAClDvF,kBAAmBzB,GAEvB,CACF,CAEA,GAAIkB,GAAc8F,GAEhB,YADAjD,GAAgBnd,EAAKma,EAASiG,EAAaja,OAG7C,GAAIsU,GAAiB2F,GACnB,MAAMhL,GAAuB,IAAK,CAChC6E,KAAM,iBAKV,IAAIpX,EAAe5B,EAAM4U,WAAWlU,UAAYV,EAAMU,SAClD2e,EAAsB9G,GAAwB9K,EAAKhJ,QAAS7C,EAAcod,EAAgB/P,QAC1F4I,EAAcvE,GAAsBC,EACpClM,EAAqC,SAA3BrH,EAAM4U,WAAW5U,MAAmBoG,EAAYyR,EAAa7X,EAAM4U,WAAWlU,SAAU4F,GAAYtG,EAAMqH,QACxH/D,EAAU+D,EAAS,gDACnB,IAAIiY,IAAWvJ,EACfE,EAAelI,IAAIhP,EAAKugB,GACxB,IAAIC,EAAchF,GAAkBpC,EAAYgH,EAAavX,MAC7D5H,EAAMkV,SAASnH,IAAIhP,EAAKwgB,GACxB,IAAKxF,EAAeC,GAAwBC,GAAiBxM,EAAKhJ,QAASzE,EAAOqH,EAAS8Q,EAAYvW,EAAc+T,EAAwBC,EAAyBC,EAAuBM,EAAkBD,EAAkB2B,EAAavR,EAAU,CACtP,CAACmB,EAAM5B,MAAME,IAAKoZ,EAAavX,WAC9B3H,GAKH+Z,EAAqBrQ,QAAOyQ,GAAMA,EAAGrb,MAAQA,IAAKhB,SAAQqc,IACxD,IAAIoF,EAAWpF,EAAGrb,IACd+f,EAAkB9e,EAAMkV,SAAStF,IAAI4P,GACrClF,EAAsBC,QAAkBta,EAAW6e,EAAkBA,EAAgBlX,UAAO3H,GAChGD,EAAMkV,SAASnH,IAAIyR,EAAUlF,GACzBxE,EAAiBhI,IAAI0R,IACvBhF,GAAagF,GAEXpF,EAAGvL,YACLiH,EAAiB/H,IAAIyR,EAAUpF,EAAGvL,WACpC,IAEF0H,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,YAE1B,IAAIuF,EAAiC,IAAMT,EAAqBjc,SAAQqc,GAAMI,GAAaJ,EAAGrb,OAC9FigB,EAAgB/P,OAAOnK,iBAAiB,QAAS2V,GACjD,IAAI,QACFE,EAAO,cACPC,EAAa,eACbC,SACQC,GAA+B9a,EAAMqH,QAASA,EAAS0S,EAAeC,EAAsBqF,GACtG,GAAIL,EAAgB/P,OAAOY,QACzB,OAEFmP,EAAgB/P,OAAOlK,oBAAoB,QAAS0V,GACpDxE,EAAenG,OAAO/Q,GACtB+W,EAAiBhG,OAAO/Q,GACxBib,EAAqBjc,SAAQ6Q,GAAKkH,EAAiBhG,OAAOlB,EAAE7P,OAC5D,IAAIqS,EAAW2J,GAAaJ,GAC5B,GAAIvJ,EAAU,CACZ,GAAIA,EAASrN,KAAOgW,EAAcjb,OAAQ,CAIxC,IAAIkc,EAAahB,EAAqB5I,EAASrN,IAAMgW,EAAcjb,QAAQC,IAC3EmX,EAAiB7G,IAAI2L,EACvB,CACA,OAAO5B,GAAwBpZ,EAAOoR,EAASpI,OACjD,CAEA,IAAI,WACFtB,EAAU,OACVuN,GACEgG,GAAkBjb,EAAOA,EAAMqH,QAAS0S,EAAea,OAAe3a,EAAW+Z,EAAsBa,EAAgBzE,GAG3H,GAAIpW,EAAMkV,SAASpH,IAAI/O,GAAM,CAC3B,IAAIsd,EAAcC,GAAe6C,EAAavX,MAC9C5H,EAAMkV,SAASnH,IAAIhP,EAAKsd,EAC1B,CACA,IAAIlB,EAAqBC,GAAqBkE,GAIf,YAA3Btf,EAAM4U,WAAW5U,OAAuBsf,EAAStJ,GACnD1S,EAAU+R,EAAe,2BACzBf,GAA+BA,EAA4BjE,QAC3DsG,EAAmB3W,EAAM4U,WAAWlU,SAAU,CAC5C2G,UACAK,aACAuN,SACAC,SAAU,IAAIC,IAAInV,EAAMkV,cAM1BqB,EAAYrX,EAAS,CACnB+V,SACAvN,WAAYuP,GAAgBjX,EAAM0H,WAAYA,EAAYL,EAAS4N,IAClEkG,GAAsBnB,EAAqBlb,OAAS,EAAI,CACzDoW,SAAU,IAAIC,IAAInV,EAAMkV,WACtB,CAAC,IACLS,GAAyB,EAE7B,CA/KI8J,CAAoB1gB,EAAKma,EAAS5X,EAAMmG,EAAOJ,EAAS8Q,IAK1DhC,EAAiBpI,IAAIhP,EAAK,CACxBma,UACA5X,SA0KJgW,eAAmCvY,EAAKma,EAAS5X,EAAMmG,EAAOJ,EAAS8Q,GACrE,IAAI2G,EAAkB9e,EAAMkV,SAAStF,IAAI7Q,GAErCqgB,EAAiB7E,GAAkBpC,EAAY2G,EAAkBA,EAAgBlX,UAAO3H,GAC5FD,EAAMkV,SAASnH,IAAIhP,EAAKqgB,GACxB7I,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,YAG1B,IAAI8J,EAAkB,IAAIlQ,gBACtBmQ,EAAe1G,GAAwB9K,EAAKhJ,QAASnD,EAAM0d,EAAgB/P,QAC/E6G,EAAiB/H,IAAIhP,EAAKigB,GAC1B,IAAIE,EAAoBnJ,EACpB/M,QAAe8P,GAAmB,SAAUmG,EAAcxX,EAAOJ,EAASzB,EAAUF,EAAoBY,GAKxGkT,GAAiBxQ,KACnBA,QAAgB0W,GAAoB1W,EAAQiW,EAAahQ,QAAQ,IAAUjG,GAIzE8M,EAAiBlG,IAAI7Q,KAASigB,GAChClJ,EAAiBhG,OAAO/Q,GAE1B,GAAIkgB,EAAahQ,OAAOY,QACtB,OAGF,GAAIsJ,GAAiBnQ,GAAS,CAC5B,GAAIgN,EAA0BkJ,EAAmB,CAG/C,IAAI7C,EAAcC,QAAerc,GAKjC,OAJAD,EAAMkV,SAASnH,IAAIhP,EAAKsd,QACxB9F,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,WAG5B,CAGE,OAFAgB,EAAiB7G,IAAItQ,cACfqa,GAAwBpZ,EAAOgJ,EAGzC,CAEA,GAAIqQ,GAAcrQ,GAAS,CACzB,IAAIsQ,EAAgBd,GAAoBxY,EAAMqH,QAAS6R,GAWvD,OAVAlZ,EAAMkV,SAASpF,OAAO/Q,QAItBwX,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,UACxBD,OAAQ,CACN,CAACqE,EAAczT,MAAME,IAAKiD,EAAO9D,QAIvC,CACA5B,GAAWkW,GAAiBxQ,GAAS,mCAErC,IAAIqT,EAAcC,GAAetT,EAAOpB,MACxC5H,EAAMkV,SAASnH,IAAIhP,EAAKsd,GACxB9F,EAAY,CACVrB,SAAU,IAAIC,IAAInV,EAAMkV,WAE5B,CA5OEyK,CAAoB5gB,EAAKma,EAAS5X,EAAMmG,EAAOJ,EAAS8Q,GAC1D,EA8jBEsD,WAv7BF,WACE/C,KACAnC,EAAY,CACVxB,aAAc,YAIe,eAA3B/U,EAAM4U,WAAW5U,QAMU,SAA3BA,EAAM4U,WAAW5U,MASrBuX,EAAgBlC,GAAiBrV,EAAM2U,cAAe3U,EAAM4U,WAAWlU,SAAU,CAC/EqX,mBAAoB/X,EAAM4U,aAT1B2C,EAAgBvX,EAAM2U,cAAe3U,EAAMU,SAAU,CACnD+W,gCAAgC,IAUtC,EAi6BExW,WAAYzC,GAAMiP,EAAKhJ,QAAQxD,WAAWzC,GAC1C6C,eAAgB7C,GAAMiP,EAAKhJ,QAAQpD,eAAe7C,GAClD+c,aACAY,iBACAyD,QAxoCF,WACMjM,GACFA,IAEE8B,GACFA,IAEFnH,EAAYuR,QACZvL,GAA+BA,EAA4BjE,QAC3DrQ,EAAMkV,SAASnX,SAAQ,CAACoN,EAAGpM,IAAQod,GAAcpd,KACjDiB,EAAMoV,SAASrX,SAAQ,CAACoN,EAAGpM,IAAQ2d,GAAc3d,IACnD,EA8nCE+gB,WAlJF,SAAoB/gB,EAAKqD,GACvB,IAAIya,EAAU7c,EAAMoV,SAASxF,IAAI7Q,IAAQyT,GAIzC,OAHI6D,EAAiBzG,IAAI7Q,KAASqD,GAChCiU,EAAiBtI,IAAIhP,EAAKqD,GAErBya,CACT,EA6IEH,iBACAqD,0BAA2BjK,EAC3BkK,yBAA0B5J,EAG1B6J,mBApCF,SAA4BC,GAC1Bta,EAAW,CAAC,EACZ0N,EAAqB9N,EAA0B0a,EAAWxa,OAAoBzF,EAAW2F,EAC3F,GAmCOyO,CACT,CAK+B8L,OAAO,YAuYtC,SAAS7B,GAAY5d,EAAU2G,EAASf,EAAU8Z,EAAiB5hB,EAAI+f,EAAaC,GAClF,IAAI6B,EACAC,EACJ,GAAmB,MAAf/B,GAAoC,SAAbC,EAAqB,CAK9C6B,EAAoB,GACpB,IAAK,IAAI5Y,KAASJ,EAEhB,GADAgZ,EAAkB3e,KAAK+F,GACnBA,EAAM5B,MAAME,KAAOwY,EAAa,CAClC+B,EAAmB7Y,EACnB,KACF,CAEJ,MACE4Y,EAAoBhZ,EACpBiZ,EAAmBjZ,EAAQA,EAAQvI,OAAS,GAG9C,IAAIwC,EAAOsL,EAAUpO,GAAU,IAAKmO,EAA2B0T,GAAmB3iB,KAAI8W,GAAKA,EAAEnK,eAAe9D,EAAc7F,EAASE,SAAU0F,IAAa5F,EAASE,SAAuB,SAAb4d,GAmB7K,OAfU,MAANhgB,IACF8C,EAAKE,OAASd,EAASc,OACvBF,EAAKG,KAAOf,EAASe,MAGZ,MAANjD,GAAqB,KAAPA,GAAoB,MAAPA,IAAe8hB,IAAoBA,EAAiBza,MAAM/F,OAAUygB,GAAmBjf,EAAKE,UAC1HF,EAAKE,OAASF,EAAKE,OAASF,EAAKE,OAAOO,QAAQ,MAAO,WAAa,UAMlEqe,GAAgC,MAAb9Z,IACrBhF,EAAKV,SAA6B,MAAlBU,EAAKV,SAAmB0F,EAAW4B,EAAU,CAAC5B,EAAUhF,EAAKV,YAExEM,EAAWI,EACpB,CAGA,SAASmd,GAAyB+B,EAAqBC,EAAWnf,EAAMkW,GAEtE,IAAKA,IAjDP,SAAgCA,GAC9B,OAAe,MAARA,IAAiB,aAAcA,GAAyB,MAAjBA,EAAKnF,UAAoB,SAAUmF,QAAsBvX,IAAduX,EAAKkJ,KAChG,CA+CgBC,CAAuBnJ,GACnC,MAAO,CACLlW,QAGJ,GAAIkW,EAAKtF,aAAe0O,GAAcpJ,EAAKtF,YACzC,MAAO,CACL5Q,OACA4D,MAAOiP,GAAuB,IAAK,CACjC8E,OAAQzB,EAAKtF,cAInB,IAyDI2O,EACAxO,EA1DAyO,EAAsB,KAAM,CAC9Bxf,OACA4D,MAAOiP,GAAuB,IAAK,CACjC6E,KAAM,mBAIN+H,EAAgBvJ,EAAKtF,YAAc,MACnCA,EAAasO,EAAsBO,EAAcC,cAAgBD,EAAclV,cAC/EsG,EAAa8O,GAAkB3f,GACnC,QAAkBrB,IAAduX,EAAKkJ,KAAoB,CAC3B,GAAyB,eAArBlJ,EAAKpF,YAA8B,CAErC,IAAK2E,GAAiB7E,GACpB,OAAO4O,IAET,IAAIxO,EAA4B,iBAAdkF,EAAKkJ,KAAoBlJ,EAAKkJ,KAAOlJ,EAAKkJ,gBAAgBQ,UAAY1J,EAAKkJ,gBAAgBS,gBAE7G3S,MAAMlQ,KAAKkZ,EAAKkJ,KAAKjhB,WAAWmK,QAAO,CAACsF,EAAKkS,KAC3C,IAAKhc,EAAM7B,GAAS6d,EACpB,MAAO,GAAKlS,EAAM9J,EAAO,IAAM7B,EAAQ,IAAI,GAC1C,IAAMlG,OAAOma,EAAKkJ,MACrB,MAAO,CACLpf,OACA6W,WAAY,CACVjG,aACAC,aACAC,YAAaoF,EAAKpF,YAClBC,cAAUpS,EACVuN,UAAMvN,EACNqS,QAGN,CAAO,GAAyB,qBAArBkF,EAAKpF,YAAoC,CAElD,IAAK2E,GAAiB7E,GACpB,OAAO4O,IAET,IACE,IAAItT,EAA4B,iBAAdgK,EAAKkJ,KAAoB3f,KAAK4c,MAAMnG,EAAKkJ,MAAQlJ,EAAKkJ,KACxE,MAAO,CACLpf,OACA6W,WAAY,CACVjG,aACAC,aACAC,YAAaoF,EAAKpF,YAClBC,cAAUpS,EACVuN,OACA8E,UAAMrS,GAGZ,CAAE,MAAO4D,GACP,OAAOid,GACT,CACF,CACF,CAIA,GAHAxd,EAA8B,mBAAb4d,SAAyB,iDAGtC1J,EAAKnF,SACPwO,EAAeQ,GAA8B7J,EAAKnF,UAClDA,EAAWmF,EAAKnF,cACX,GAAImF,EAAKkJ,gBAAgBQ,SAC9BL,EAAeQ,GAA8B7J,EAAKkJ,MAClDrO,EAAWmF,EAAKkJ,UACX,GAAIlJ,EAAKkJ,gBAAgBS,gBAC9BN,EAAerJ,EAAKkJ,KACpBrO,EAAWiP,GAA8BT,QACpC,GAAiB,MAAbrJ,EAAKkJ,KACdG,EAAe,IAAIM,gBACnB9O,EAAW,IAAI6O,cAEf,IACEL,EAAe,IAAIM,gBAAgB3J,EAAKkJ,MACxCrO,EAAWiP,GAA8BT,EAC3C,CAAE,MAAOhd,GACP,OAAOid,GACT,CAEF,IAAI3I,EAAa,CACfjG,aACAC,aACAC,YAAaoF,GAAQA,EAAKpF,aAAe,oCACzCC,WACA7E,UAAMvN,EACNqS,UAAMrS,GAER,GAAI8W,GAAiBoB,EAAWjG,YAC9B,MAAO,CACL5Q,OACA6W,cAIJ,IAAI/T,EAAa7C,EAAUD,GAQ3B,OAJImf,GAAarc,EAAW5C,QAAU+e,GAAmBnc,EAAW5C,SAClEqf,EAAaU,OAAO,QAAS,IAE/Bnd,EAAW5C,OAAS,IAAMqf,EACnB,CACLvf,KAAMJ,EAAWkD,GACjB+T,aAEJ,CAGA,SAASqJ,GAA8Bna,EAASoa,GAC9C,IAAIC,EAAkBra,EACtB,GAAIoa,EAAY,CACd,IAAI3hB,EAAQuH,EAAQsa,WAAUnN,GAAKA,EAAE3O,MAAME,KAAO0b,IAC9C3hB,GAAS,IACX4hB,EAAkBra,EAAQhE,MAAM,EAAGvD,GAEvC,CACA,OAAO4hB,CACT,CACA,SAASzH,GAAiBxV,EAASzE,EAAOqH,EAAS8Q,EAAYzX,EAAUiV,EAAwBC,EAAyBC,EAAuBM,EAAkBD,EAAkB2B,EAAavR,EAAU8R,EAAmBC,GAC7N,IAAI8G,EAAe9G,EAAezb,OAAOglB,OAAOvJ,GAAc,GAAKD,EAAoBxb,OAAOglB,OAAOxJ,GAAmB,QAAKnY,EACzH4hB,EAAapd,EAAQtD,UAAUnB,EAAMU,UACrCohB,EAAUrd,EAAQtD,UAAUT,GAE5B+gB,EAAapJ,EAAezb,OAAOqB,KAAKoa,GAAc,QAAKpY,EAE3D8hB,EADkBP,GAA8Bna,EAASoa,GACrB9X,QAAO,CAAClC,EAAO3H,KACrD,GAAI2H,EAAM5B,MAAM4O,KAEd,OAAO,EAET,GAA0B,MAAtBhN,EAAM5B,MAAM6O,OACd,OAAO,EAGT,GA2FJ,SAAqBsN,EAAmBC,EAAcxa,GACpD,IAAIya,GAEHD,GAEDxa,EAAM5B,MAAME,KAAOkc,EAAapc,MAAME,GAGlCoc,OAAsDliB,IAAtC+hB,EAAkBva,EAAM5B,MAAME,IAElD,OAAOmc,GAASC,CAClB,CAtGQC,CAAYpiB,EAAM0H,WAAY1H,EAAMqH,QAAQvH,GAAQ2H,IAAUmO,EAAwBlM,MAAK3D,GAAMA,IAAO0B,EAAM5B,MAAME,KACtH,OAAO,EAMT,IAAIsc,EAAoBriB,EAAMqH,QAAQvH,GAClCwiB,EAAiB7a,EACrB,OAAO8a,GAAuB9a,EAAOvI,EAAS,CAC5C2iB,aACAW,cAAeH,EAAkB1a,OACjCma,UACAW,WAAYH,EAAe3a,QAC1BwQ,EAAY,CACbgH,eACAuD,wBAEA/M,GAEAkM,EAAWjhB,SAAWihB,EAAWrgB,SAAWsgB,EAAQlhB,SAAWkhB,EAAQtgB,QAEvEqgB,EAAWrgB,SAAWsgB,EAAQtgB,QAAUmhB,GAAmBN,EAAmBC,KAC7E,IAGDtI,EAAuB,GA+D3B,OA9DA7D,EAAiBpY,SAAQ,CAAC2c,EAAG3b,KAE3B,IAAKsI,EAAQqC,MAAK8K,GAAKA,EAAE3O,MAAME,KAAO2U,EAAExB,UACtC,OAEF,IAAI0J,EAAiBxc,EAAYyR,EAAa6C,EAAEpZ,KAAMgF,GAKtD,IAAKsc,EASH,YARA5I,EAAqBtY,KAAK,CACxB3C,MACAma,QAASwB,EAAExB,QACX5X,KAAMoZ,EAAEpZ,KACR+F,QAAS,KACTI,MAAO,KACPoH,WAAY,OAOhB,IAAIwL,EAAUra,EAAMkV,SAAStF,IAAI7Q,GAC7B8jB,EAAehK,GAAe+J,EAAgBlI,EAAEpZ,MAChDwhB,GAAmB,EAGrBA,GAFE5M,EAAiBpI,IAAI/O,OAGd8W,EAAsBvN,SAASvJ,KAG/Bsb,GAA6B,SAAlBA,EAAQra,YAAqCC,IAAjBoa,EAAQzS,KAIrC+N,EAIA4M,GAAuBM,EAAc3jB,EAAS,CAC/D2iB,aACAW,cAAexiB,EAAMqH,QAAQrH,EAAMqH,QAAQvI,OAAS,GAAG6I,OACvDma,UACAW,WAAYpb,EAAQA,EAAQvI,OAAS,GAAG6I,QACvCwQ,EAAY,CACbgH,eACAuD,wBAAyB/M,OAGzBmN,GACF9I,EAAqBtY,KAAK,CACxB3C,MACAma,QAASwB,EAAExB,QACX5X,KAAMoZ,EAAEpZ,KACR+F,QAASub,EACTnb,MAAOob,EACPhU,WAAY,IAAIC,iBAEpB,IAEK,CAACiT,EAAmB/H,EAC7B,CAaA,SAAS2I,GAAmBV,EAAcxa,GACxC,IAAIsb,EAAcd,EAAapc,MAAMvE,KACrC,OAEE2gB,EAAarhB,WAAa6G,EAAM7G,UAGjB,MAAfmiB,GAAuBA,EAAYla,SAAS,MAAQoZ,EAAata,OAAO,OAASF,EAAME,OAAO,IAElG,CACA,SAAS4a,GAAuBS,EAAaC,GAC3C,GAAID,EAAYnd,MAAMid,iBAAkB,CACtC,IAAII,EAAcF,EAAYnd,MAAMid,iBAAiBG,GACrD,GAA2B,kBAAhBC,EACT,OAAOA,CAEX,CACA,OAAOD,EAAIP,uBACb,CAMApL,eAAe6L,GAAoBtd,EAAOH,EAAoBE,GAC5D,IAAKC,EAAM4O,KACT,OAEF,IAAI2O,QAAkBvd,EAAM4O,OAI5B,IAAK5O,EAAM4O,KACT,OAEF,IAAI4O,EAAgBzd,EAASC,EAAME,IACnCzC,EAAU+f,EAAe,8BASzB,IAAIC,EAAe,CAAC,EACpB,IAAK,IAAIC,KAAqBH,EAAW,CACvC,IACII,OAAmDvjB,IADhCojB,EAAcE,IAIf,qBAAtBA,EACA1iB,GAAS2iB,EAA6B,UAAaH,EAActd,GAAK,4BAAgCwd,EAAhE,yGAA4MA,EAAoB,sBACjQC,GAAgCle,EAAmBwI,IAAIyV,KAC1DD,EAAaC,GAAqBH,EAAUG,GAEhD,CAGA3mB,OAAOO,OAAOkmB,EAAeC,GAI7B1mB,OAAOO,OAAOkmB,EAAenkB,EAAS,CAAC,EAAGwG,EAAmB2d,GAAgB,CAC3E5O,UAAMxU,IAEV,CACAqX,eAAewB,GAAmBE,EAAMV,EAAS7Q,EAAOJ,EAASzB,EAAUF,EAAoBY,EAAUkR,GAIvG,IAAIiM,EACAza,EACA0a,OALS,IAATlM,IACFA,EAAO,CAAC,GAKV,IAAImM,EAAaC,IAEf,IAAIxV,EACAM,EAAe,IAAIC,SAAQ,CAACxD,EAAGyD,IAAMR,EAASQ,IAGlD,OAFA8U,EAAW,IAAMtV,IACjBkK,EAAQrJ,OAAOnK,iBAAiB,QAAS4e,GAClC/U,QAAQY,KAAK,CAACqU,EAAQ,CAC3BtL,UACA3Q,OAAQF,EAAME,OACdkc,QAASrM,EAAKsM,iBACZpV,GAAc,EAEpB,IACE,IAAIkV,EAAUnc,EAAM5B,MAAMmT,GAC1B,GAAIvR,EAAM5B,MAAM4O,KACd,GAAImP,EAAS,CAEX,IAAIG,EACAnC,QAAejT,QAAQqN,IAAI,CAI/B2H,EAAWC,GAASlU,OAAM7L,IACxBkgB,EAAelgB,CAAC,IACdsf,GAAoB1b,EAAM5B,MAAOH,EAAoBE,KACzD,GAAIme,EACF,MAAMA,EAER/a,EAAS4Y,EAAO,EAClB,KAAO,CAIL,SAFMuB,GAAoB1b,EAAM5B,MAAOH,EAAoBE,GAC3Dge,EAAUnc,EAAM5B,MAAMmT,IAClB4K,EAKG,IAAa,WAAT5K,EAAmB,CAC5B,IAAI9V,EAAM,IAAI9B,IAAIkX,EAAQpV,KACtBtC,EAAWsC,EAAItC,SAAWsC,EAAI1B,OAClC,MAAM2S,GAAuB,IAAK,CAChC8E,OAAQX,EAAQW,OAChBrY,WACAsY,QAASzR,EAAM5B,MAAME,IAEzB,CAGE,MAAO,CACLiT,KAAM3T,EAAWuC,KACjBA,UAAM3H,EAEV,CAhBE+I,QAAe2a,EAAWC,EAiB9B,KACK,KAAKA,EAAS,CACnB,IAAI1gB,EAAM,IAAI9B,IAAIkX,EAAQpV,KAE1B,MAAMiR,GAAuB,IAAK,CAChCvT,SAFasC,EAAItC,SAAWsC,EAAI1B,QAIpC,CACEwH,QAAe2a,EAAWC,EAC5B,CACAtgB,OAAqBrD,IAAX+I,EAAsB,gBAA2B,WAATgQ,EAAoB,YAAc,YAApD,eAA0FvR,EAAM5B,MAAME,GAAK,4CAA8CiT,EAAzJ,+CAClC,CAAE,MAAOnV,GACP4f,EAAape,EAAWH,MACxB8D,EAASnF,CACX,CAAE,QACI6f,GACFpL,EAAQrJ,OAAOlK,oBAAoB,QAAS2e,EAEhD,CACA,GAAIM,GAAWhb,GAAS,CACtB,IA6CIpB,EA7CA+F,EAAS3E,EAAO2E,OAEpB,GAAIoE,GAAoBjE,IAAIH,GAAS,CACnC,IAAIjN,EAAWsI,EAAO4E,QAAQgC,IAAI,YAGlC,GAFAtM,EAAU5C,EAAU,8EAEfiS,GAAmB7I,KAAKpJ,IAEtB,IAAK8W,EAAKyM,gBAAiB,CAIhC,IAAIpC,EAAa,IAAIzgB,IAAIkX,EAAQpV,KAC7BA,EAAMxC,EAASkC,WAAW,MAAQ,IAAIxB,IAAIygB,EAAWqC,SAAWxjB,GAAY,IAAIU,IAAIV,GACpFyjB,EAA0D,MAAzC5d,EAAcrD,EAAItC,SAAU0F,GAC7CpD,EAAI0B,SAAWid,EAAWjd,QAAUuf,IACtCzjB,EAAWwC,EAAItC,SAAWsC,EAAI1B,OAAS0B,EAAIzB,KAE/C,OAXEf,EAAW4d,GAAY,IAAIld,IAAIkX,EAAQpV,KAAMmE,EAAQhE,MAAM,EAAGgE,EAAQjE,QAAQqE,GAAS,GAAInB,GAAU,EAAM5F,GAgB7G,GAAI8W,EAAKyM,gBAEP,MADAjb,EAAO4E,QAAQG,IAAI,WAAYrN,GACzBsI,EAER,MAAO,CACLgQ,KAAM3T,EAAW+L,SACjBzD,SACAjN,WACA+a,WAAyD,OAA7CzS,EAAO4E,QAAQgC,IAAI,sBAC/BgM,eAAkE,OAAlD5S,EAAO4E,QAAQgC,IAAI,2BAEvC,CAIA,GAAI4H,EAAK4M,eAAgB,CAKvB,KAJyB,CACvBpL,KAAMyK,IAAepe,EAAWH,MAAQG,EAAWH,MAAQG,EAAWuC,KACtE0J,SAAUtI,EAGd,CAEA,IAAIqb,EAAcrb,EAAO4E,QAAQgC,IAAI,gBAQrC,OAJEhI,EADEyc,GAAe,wBAAwBva,KAAKua,SACjCrb,EAAOwE,aAEPxE,EAAOsJ,OAElBmR,IAAepe,EAAWH,MACrB,CACL8T,KAAMyK,EACNve,MAAO,IAAIqM,EAAkB5D,EAAQ3E,EAAOwI,WAAY5J,GACxDgG,QAAS5E,EAAO4E,SAGb,CACLoL,KAAM3T,EAAWuC,KACjBA,OACA0c,WAAYtb,EAAO2E,OACnBC,QAAS5E,EAAO4E,QAEpB,CACA,OAAI6V,IAAepe,EAAWH,MACrB,CACL8T,KAAMyK,EACNve,MAAO8D,GA8Sb,SAAwBzF,GACtB,IAAI/G,EAAW+G,EACf,OAAO/G,GAAgC,iBAAbA,GAAkD,iBAAlBA,EAASoL,MAAmD,mBAAvBpL,EAAS2T,WAAuD,mBAApB3T,EAAS4T,QAAyD,mBAAzB5T,EAASgU,WAC/L,CA9SM+T,CAAevb,GAEV,CACLgQ,KAAM3T,EAAW7I,SACjB0e,aAAclS,EACdsb,WAA4C,OAA/BE,EAAexb,EAAOyE,WAAgB,EAAS+W,EAAa7W,OACzEC,SAA2C,OAAhC6W,EAAgBzb,EAAOyE,WAAgB,EAASgX,EAAc7W,UAAY,IAAIC,QAAQ7E,EAAOyE,KAAKG,UAG1G,CACLoL,KAAM3T,EAAWuC,KACjBA,KAAMoB,GAVN,IAAIwb,EAAcC,CAYtB,CAIA,SAASlM,GAAwB9T,EAAS/D,EAAUuO,EAAQkJ,GAC1D,IAAIjV,EAAMuB,EAAQtD,UAAU8f,GAAkBvgB,IAAWwD,WACrDuJ,EAAO,CACTwB,UAEF,GAAIkJ,GAAcpB,GAAiBoB,EAAWjG,YAAa,CACzD,IAAI,WACFA,EAAU,YACVE,GACE+F,EAIJ1K,EAAKwL,OAAS/G,EAAW8O,cACL,qBAAhB5O,GACF3E,EAAKG,QAAU,IAAIC,QAAQ,CACzB,eAAgBuE,IAElB3E,EAAKiT,KAAO3f,KAAKC,UAAUmX,EAAW3K,OACb,eAAhB4E,EAET3E,EAAKiT,KAAOvI,EAAW7F,KACE,sCAAhBF,GAAuD+F,EAAW9F,SAE3E5E,EAAKiT,KAAOW,GAA8BlJ,EAAW9F,UAGrD5E,EAAKiT,KAAOvI,EAAW9F,QAE3B,CACA,OAAO,IAAIsH,QAAQzW,EAAKuK,EAC1B,CACA,SAAS4T,GAA8BhP,GACrC,IAAIwO,EAAe,IAAIM,gBACvB,IAAK,IAAKpiB,EAAKwE,KAAU8O,EAAS5S,UAEhCohB,EAAaU,OAAOxiB,EAAsB,iBAAVwE,EAAqBA,EAAQA,EAAM6B,MAErE,OAAOyb,CACT,CACA,SAASS,GAA8BT,GACrC,IAAIxO,EAAW,IAAI6O,SACnB,IAAK,IAAKniB,EAAKwE,KAAUsd,EAAaphB,UACpC4S,EAASkP,OAAOxiB,EAAKwE,GAEvB,OAAO8O,CACT,CACA,SAASqS,GAAuBrd,EAAS0S,EAAeY,EAAStC,EAAcjC,GAE7E,IAEIkO,EAFA5c,EAAa,CAAC,EACduN,EAAS,KAET0P,GAAa,EACbC,EAAgB,CAAC,EAyDrB,OAvDAjK,EAAQ5c,SAAQ,CAACiL,EAAQlJ,KACvB,IAAIiG,EAAKgU,EAAcja,GAAO+F,MAAME,GAEpC,GADAzC,GAAW6V,GAAiBnQ,GAAS,uDACjCqQ,GAAcrQ,GAAS,CAGzB,IAAIsQ,EAAgBd,GAAoBnR,EAAStB,GAC7Cb,EAAQ8D,EAAO9D,MAIfmT,IACFnT,EAAQtI,OAAOglB,OAAOvJ,GAAc,GACpCA,OAAepY,GAEjBgV,EAASA,GAAU,CAAC,EAEkB,MAAlCA,EAAOqE,EAAczT,MAAME,MAC7BkP,EAAOqE,EAAczT,MAAME,IAAMb,GAGnCwC,EAAW3B,QAAM9F,EAGZ0kB,IACHA,GAAa,EACbL,EAAa5S,GAAqB1I,EAAO9D,OAAS8D,EAAO9D,MAAMyI,OAAS,KAEtE3E,EAAO4E,UACTgX,EAAc7e,GAAMiD,EAAO4E,QAE/B,MACM4L,GAAiBxQ,IACnBoN,EAAgBrI,IAAIhI,EAAIiD,EAAOkS,cAC/BxT,EAAW3B,GAAMiD,EAAOkS,aAAatT,MAErCF,EAAW3B,GAAMiD,EAAOpB,KAID,MAArBoB,EAAOsb,YAA4C,MAAtBtb,EAAOsb,YAAuBK,IAC7DL,EAAatb,EAAOsb,YAElBtb,EAAO4E,UACTgX,EAAc7e,GAAMiD,EAAO4E,QAE/B,IAKEyK,IACFpD,EAASoD,EACT3Q,EAAW9K,OAAOqB,KAAKoa,GAAc,SAAMpY,GAEtC,CACLyH,aACAuN,SACAqP,WAAYA,GAAc,IAC1BM,gBAEJ,CACA,SAAS3J,GAAkBjb,EAAOqH,EAAS0S,EAAeY,EAAStC,EAAc2B,EAAsBa,EAAgBzE,GACrH,IAAI,WACF1O,EAAU,OACVuN,GACEyP,GAAuBrd,EAAS0S,EAAeY,EAAStC,EAAcjC,GAE1E,IAAK,IAAItW,EAAQ,EAAGA,EAAQka,EAAqBlb,OAAQgB,IAAS,CAChE,IAAI,IACFf,EAAG,MACH0I,EAAK,WACLoH,GACEmL,EAAqBla,GACzBwD,OAA6BrD,IAAnB4a,QAA0D5a,IAA1B4a,EAAe/a,GAAsB,6CAC/E,IAAIkJ,EAAS6R,EAAe/a,GAE5B,IAAI+O,IAAcA,EAAWI,OAAOY,QAG7B,GAAIwJ,GAAcrQ,GAAS,CAChC,IAAIsQ,EAAgBd,GAAoBxY,EAAMqH,QAAkB,MAATI,OAAgB,EAASA,EAAM5B,MAAME,IACtFkP,GAAUA,EAAOqE,EAAczT,MAAME,MACzCkP,EAAS/V,EAAS,CAAC,EAAG+V,EAAQ,CAC5B,CAACqE,EAAczT,MAAME,IAAKiD,EAAO9D,SAGrClF,EAAMkV,SAASpF,OAAO/Q,EACxB,MAAO,GAAIoa,GAAiBnQ,GAG1B1F,GAAU,EAAO,gDACZ,GAAIkW,GAAiBxQ,GAG1B1F,GAAU,EAAO,uCACZ,CACL,IAAI+Y,EAAcC,GAAetT,EAAOpB,MACxC5H,EAAMkV,SAASnH,IAAIhP,EAAKsd,EAC1B,CACF,CACA,MAAO,CACL3U,aACAuN,SAEJ,CACA,SAASgC,GAAgBvP,EAAYmd,EAAexd,EAAS4N,GAC3D,IAAI6P,EAAmB5lB,EAAS,CAAC,EAAG2lB,GACpC,IAAK,IAAIpd,KAASJ,EAAS,CACzB,IAAItB,EAAK0B,EAAM5B,MAAME,GAUrB,GATI8e,EAAchoB,eAAekJ,QACL9F,IAAtB4kB,EAAc9e,KAChB+e,EAAiB/e,GAAM8e,EAAc9e,SAEX9F,IAAnByH,EAAW3B,IAAqB0B,EAAM5B,MAAM6O,SAGrDoQ,EAAiB/e,GAAM2B,EAAW3B,IAEhCkP,GAAUA,EAAOpY,eAAekJ,GAElC,KAEJ,CACA,OAAO+e,CACT,CAIA,SAAStM,GAAoBnR,EAAS6R,GAEpC,OADsBA,EAAU7R,EAAQhE,MAAM,EAAGgE,EAAQsa,WAAUnN,GAAKA,EAAE3O,MAAME,KAAOmT,IAAW,GAAK,IAAI7R,IACpF0d,UAAUC,MAAKxQ,IAAkC,IAA7BA,EAAE3O,MAAMgN,oBAA8BxL,EAAQ,EAC3F,CACA,SAAS+M,GAAuB3O,GAE9B,IAAII,EAA0B,IAAlBJ,EAAO3G,OAAe2G,EAAO,GAAKA,EAAOuf,MAAKpW,GAAKA,EAAE9O,QAAU8O,EAAEtN,MAAmB,MAAXsN,EAAEtN,QAAiB,CACtGyE,GAAI,wBAEN,MAAO,CACLsB,QAAS,CAAC,CACRM,OAAQ,CAAC,EACT/G,SAAU,GACVyJ,aAAc,GACdxE,UAEFA,QAEJ,CACA,SAASsO,GAAuBxG,EAAQsX,GACtC,IAAI,SACFrkB,EAAQ,QACRsY,EAAO,OACPD,EAAM,KACND,QACa,IAAXiM,EAAoB,CAAC,EAAIA,EACzBzT,EAAa,uBACb0T,EAAe,kCAwBnB,OAvBe,MAAXvX,GACF6D,EAAa,cACTyH,GAAUrY,GAAYsY,EACxBgM,EAAe,cAAgBjM,EAAS,gBAAmBrY,EAA5C,+CAAgHsY,EAAhH,+CACG,iBAATF,EACTkM,EAAe,sCACG,iBAATlM,IACTkM,EAAe,qCAEG,MAAXvX,GACT6D,EAAa,YACb0T,EAAe,UAAahM,EAAU,yBAA6BtY,EAAW,KAC1D,MAAX+M,GACT6D,EAAa,YACb0T,EAAe,yBAA4BtkB,EAAW,KAClC,MAAX+M,IACT6D,EAAa,qBACTyH,GAAUrY,GAAYsY,EACxBgM,EAAe,cAAgBjM,EAAO+H,cAAgB,gBAAmBpgB,EAA1D,gDAA+HsY,EAA/H,+CACND,IACTiM,EAAe,2BAA8BjM,EAAO+H,cAAgB,MAGjE,IAAIzP,EAAkB5D,GAAU,IAAK6D,EAAY,IAAI/N,MAAMyhB,IAAe,EACnF,CAEA,SAASnK,GAAaJ,GACpB,IAAK,IAAInd,EAAImd,EAAQ7b,OAAS,EAAGtB,GAAK,EAAGA,IAAK,CAC5C,IAAIwL,EAAS2R,EAAQnd,GACrB,GAAI2b,GAAiBnQ,GACnB,MAAO,CACLA,SACAjF,IAAKvG,EAGX,CACF,CACA,SAASyjB,GAAkB3f,GAEzB,OAAOJ,EAAWhC,EAAS,CAAC,EADK,iBAAToC,EAAoBC,EAAUD,GAAQA,EACnB,CACzCG,KAAM,KAEV,CAmBA,SAAS+X,GAAiBxQ,GACxB,OAAOA,EAAOgQ,OAAS3T,EAAW7I,QACpC,CACA,SAAS6c,GAAcrQ,GACrB,OAAOA,EAAOgQ,OAAS3T,EAAWH,KACpC,CACA,SAASiU,GAAiBnQ,GACxB,OAAQA,GAAUA,EAAOgQ,QAAU3T,EAAW+L,QAChD,CAKA,SAAS4S,GAAWzgB,GAClB,OAAgB,MAATA,GAAyC,iBAAjBA,EAAMoK,QAAmD,iBAArBpK,EAAMiO,YAAoD,iBAAlBjO,EAAMqK,cAA8C,IAAfrK,EAAMmd,IACxJ,CAYA,SAASE,GAAc3H,GACrB,OAAOnH,GAAoBhE,IAAImL,EAAOpN,cACxC,CACA,SAASkL,GAAiBkC,GACxB,OAAOrH,GAAqB9D,IAAImL,EAAOpN,cACzC,CACAyL,eAAe2E,GAAuBH,EAAgB/B,EAAeY,EAASwK,EAAS1E,EAAWuB,GAChG,IAAK,IAAIliB,EAAQ,EAAGA,EAAQ6a,EAAQ7b,OAAQgB,IAAS,CACnD,IAAIkJ,EAAS2R,EAAQ7a,GACjB2H,EAAQsS,EAAcja,GAI1B,IAAK2H,EACH,SAEF,IAAIwa,EAAenG,EAAekJ,MAAKxQ,GAAKA,EAAE3O,MAAME,KAAO0B,EAAM5B,MAAME,KACnEqf,EAAuC,MAAhBnD,IAAyBU,GAAmBV,EAAcxa,SAAuExH,KAA5D+hB,GAAqBA,EAAkBva,EAAM5B,MAAME,KACnJ,GAAIyT,GAAiBxQ,KAAYyX,GAAa2E,GAAuB,CAInE,IAAInW,EAASkW,EAAQrlB,GACrBwD,EAAU2L,EAAQ,0EACZyQ,GAAoB1W,EAAQiG,EAAQwR,GAAWjR,MAAKxG,IACpDA,IACF2R,EAAQ7a,GAASkJ,GAAU2R,EAAQ7a,GACrC,GAEJ,CACF,CACF,CACAwX,eAAeoI,GAAoB1W,EAAQiG,EAAQoW,GAKjD,QAJe,IAAXA,IACFA,GAAS,UAESrc,EAAOkS,aAAa1K,YAAYvB,GACpD,CAGA,GAAIoW,EACF,IACE,MAAO,CACLrM,KAAM3T,EAAWuC,KACjBA,KAAMoB,EAAOkS,aAAavK,cAE9B,CAAE,MAAO9M,GAEP,MAAO,CACLmV,KAAM3T,EAAWH,MACjBA,MAAOrB,EAEX,CAEF,MAAO,CACLmV,KAAM3T,EAAWuC,KACjBA,KAAMoB,EAAOkS,aAAatT,KAjB5B,CAmBF,CACA,SAAS2Y,GAAmB/e,GAC1B,OAAO,IAAI2f,gBAAgB3f,GAAQ8jB,OAAO,SAAS5b,MAAK4G,GAAW,KAANA,GAC/D,CACA,SAASuI,GAAexR,EAAS3G,GAC/B,IAAIc,EAA6B,iBAAbd,EAAwBa,EAAUb,GAAUc,OAASd,EAASc,OAClF,GAAI6F,EAAQA,EAAQvI,OAAS,GAAG+G,MAAM/F,OAASygB,GAAmB/e,GAAU,IAE1E,OAAO6F,EAAQA,EAAQvI,OAAS,GAIlC,IAAIymB,EAAc5Y,EAA2BtF,GAC7C,OAAOke,EAAYA,EAAYzmB,OAAS,EAC1C,CACA,SAASgb,GAA4BlF,GACnC,IAAI,WACF1C,EAAU,WACVC,EAAU,YACVC,EAAW,KACXE,EAAI,SACJD,EAAQ,KACR7E,GACEoH,EACJ,GAAK1C,GAAeC,GAAeC,EAGnC,OAAY,MAARE,EACK,CACLJ,aACAC,aACAC,cACAC,cAAUpS,EACVuN,UAAMvN,EACNqS,QAEmB,MAAZD,EACF,CACLH,aACAC,aACAC,cACAC,WACA7E,UAAMvN,EACNqS,UAAMrS,QAEUA,IAATuN,EACF,CACL0E,aACAC,aACAC,cACAC,cAAUpS,EACVuN,OACA8E,UAAMrS,QAPH,CAUT,CACA,SAASyZ,GAAqBhZ,EAAUyX,GACtC,GAAIA,EAAY,CAWd,MAViB,CACfnY,MAAO,UACPU,WACAwR,WAAYiG,EAAWjG,WACvBC,WAAYgG,EAAWhG,WACvBC,YAAa+F,EAAW/F,YACxBC,SAAU8F,EAAW9F,SACrB7E,KAAM2K,EAAW3K,KACjB8E,KAAM6F,EAAW7F,KAGrB,CAWE,MAViB,CACftS,MAAO,UACPU,WACAwR,gBAAYjS,EACZkS,gBAAYlS,EACZmS,iBAAanS,EACboS,cAAUpS,EACVuN,UAAMvN,EACNqS,UAAMrS,EAIZ,CAcA,SAASsa,GAAkBpC,EAAYvQ,GACrC,GAAIuQ,EAAY,CAWd,MAVc,CACZnY,MAAO,UACPkS,WAAYiG,EAAWjG,WACvBC,WAAYgG,EAAWhG,WACvBC,YAAa+F,EAAW/F,YACxBC,SAAU8F,EAAW9F,SACrB7E,KAAM2K,EAAW3K,KACjB8E,KAAM6F,EAAW7F,KACjB1K,OAGJ,CAWE,MAVc,CACZ5H,MAAO,UACPkS,gBAAYjS,EACZkS,gBAAYlS,EACZmS,iBAAanS,EACboS,cAAUpS,EACVuN,UAAMvN,EACNqS,UAAMrS,EACN2H,OAIN,CAcA,SAAS0U,GAAe1U,GAWtB,MAVc,CACZ5H,MAAO,OACPkS,gBAAYjS,EACZkS,gBAAYlS,EACZmS,iBAAanS,EACboS,cAAUpS,EACVuN,UAAMvN,EACNqS,UAAMrS,EACN2H,OAGJ,CCn/HA,SAAS,KAYP,OAXA,GAAWhL,OAAOO,OAASP,OAAOO,OAAOgC,OAAS,SAAUf,GAC1D,IAAK,IAAIZ,EAAI,EAAGA,EAAIqB,UAAUC,OAAQtB,IAAK,CACzC,IAAIa,EAASQ,UAAUrB,GACvB,IAAK,IAAIuB,KAAOV,EACVzB,OAAOE,UAAUD,eAAemC,KAAKX,EAAQU,KAC/CX,EAAOW,GAAOV,EAAOU,GAG3B,CACA,OAAOX,CACT,EACO,GAASgB,MAAMC,KAAMR,UAC9B,CAIA,MAAM2mB,GAAiC,gBAAoB,MAI3D,MAAMC,GAAsC,gBAAoB,MAIhE,MAAMC,GAA4B,gBAAoB,MAetD,MAAMC,GAAiC,gBAAoB,MAI3D,MAAMC,GAA+B,gBAAoB,MAIzD,MAAMC,GAA4B,gBAAoB,CACpDC,OAAQ,KACRze,QAAS,GACT0e,aAAa,IAKf,MAAMC,GAAiC,gBAAoB,MAW3D,SAASC,GAAQznB,EAAIgd,GACnB,IAAI,SACFgD,QACY,IAAVhD,EAAmB,CAAC,EAAIA,EAC3B0K,MAEuE,GAAiB,GACzF,IAAI,SACF5f,EAAQ,UACR6f,GACE,aAAiBR,KACjB,KACFlkB,EAAI,SACJb,EAAQ,OACRY,GACE4kB,GAAgB5nB,EAAI,CACtBggB,aAEE6H,EAAiBzlB,EASrB,MAHiB,MAAb0F,IACF+f,EAA8B,MAAbzlB,EAAmB0F,EAAW4B,EAAU,CAAC5B,EAAU1F,KAE/DulB,EAAUllB,WAAW,CAC1BL,SAAUylB,EACV7kB,SACAC,QAEJ,CAOA,SAASykB,KACP,OAA4C,MAArC,aAAiBN,GAC1B,CAYA,SAASU,KAIP,OAHCJ,MAE2E,GAAiB,GACtF,aAAiBN,IAAiBllB,QAC3C,CAQA,SAAS6lB,KACP,OAAO,aAAiBX,IAAiBY,cAC3C,CASA,SAASC,GAAS1b,GACfmb,MAEwE,GAAiB,GAC1F,IAAI,SACFtlB,GACE0lB,KACJ,OAAO,WAAc,IAAMlc,EAAUW,EAASnK,IAAW,CAACA,EAAUmK,GACtE,CASA,SAAS2b,GAA0BC,GAClB,aAAiBhB,IAAmBiB,QAKjD,kBAAsBD,EAE1B,CAQA,SAASE,KACP,IAAI,YACFd,GACE,aAAiBF,IAGrB,OAAOE,EAqmBT,WACE,IAAI,OACF1R,GACEyS,GAAqBC,GAAeC,mBACpCjhB,EAAKkhB,GAAkBC,GAAoBF,mBAC3CG,EAAY,UAAa,GAqB7B,OApBAT,IAA0B,KACxBS,EAAUnjB,SAAU,CAAI,IAEX,eAAkB,SAAUxF,EAAIgB,QAC7B,IAAZA,IACFA,EAAU,CAAC,GAMR2nB,EAAUnjB,UACG,iBAAPxF,EACT6V,EAAO+J,SAAS5f,GAEhB6V,EAAO+J,SAAS5f,EAAI,GAAS,CAC3B+f,YAAaxY,GACZvG,IAEP,GAAG,CAAC6U,EAAQtO,GAEd,CAhoBuBqhB,GAEvB,WACGlB,MAE2E,GAAiB,GAC7F,IAAImB,EAAoB,aAAiB7B,KACrC,SACFlf,EAAQ,UACR6f,GACE,aAAiBR,KACjB,QACFte,GACE,aAAiBwe,KAEnBjlB,SAAUmM,GACRuZ,KACAgB,EAAqBvmB,KAAKC,UAAU,EAAkCqG,GAAS3J,KAAI+J,GAASA,EAAM4C,gBAClG8c,EAAY,UAAa,GA8B7B,OA7BAT,IAA0B,KACxBS,EAAUnjB,SAAU,CAAI,IAEX,eAAkB,SAAUxF,EAAIgB,GAQ7C,QAPgB,IAAZA,IACFA,EAAU,CAAC,IAMR2nB,EAAUnjB,QAAS,OACxB,GAAkB,iBAAPxF,EAET,YADA2nB,EAAUlkB,GAAGzD,GAGf,IAAI8C,EAAOsL,EAAUpO,EAAIuC,KAAK4c,MAAM2J,GAAqBva,EAAuC,SAArBvN,EAAQgf,UAQ1D,MAArB6I,GAA0C,MAAb/gB,IAC/BhF,EAAKV,SAA6B,MAAlBU,EAAKV,SAAmB0F,EAAW4B,EAAU,CAAC5B,EAAUhF,EAAKV,aAE5EpB,EAAQuC,QAAUokB,EAAUpkB,QAAUokB,EAAUzkB,MAAMJ,EAAM9B,EAAQQ,MAAOR,EAChF,GAAG,CAAC8G,EAAU6f,EAAWmB,EAAoBva,EAAkBsa,GAEjE,CAjD6CE,EAC7C,CAiDA,MAAMC,GAA6B,gBAAoB,MAOvD,SAASC,KACP,OAAO,aAAiBD,GAC1B,CAQA,SAASE,GAAU7D,GACjB,IAAIiC,EAAS,aAAiBD,IAAcC,OAC5C,OAAIA,EACkB,gBAAoB0B,GAAcG,SAAU,CAC9DpkB,MAAOsgB,GACNiC,GAEEA,CACT,CAQA,SAAS8B,KACP,IAAI,QACFvgB,GACE,aAAiBwe,IACjBgC,EAAaxgB,EAAQA,EAAQvI,OAAS,GAC1C,OAAO+oB,EAAaA,EAAWlgB,OAAS,CAAC,CAC3C,CAOA,SAASye,GAAgB5nB,EAAIspB,GAC3B,IAAI,SACFtJ,QACa,IAAXsJ,EAAoB,CAAC,EAAIA,GACzB,QACFzgB,GACE,aAAiBwe,KAEnBjlB,SAAUmM,GACRuZ,KACAgB,EAAqBvmB,KAAKC,UAAU,EAAkCqG,GAAS3J,KAAI+J,GAASA,EAAM4C,gBACtG,OAAO,WAAc,IAAMuC,EAAUpO,EAAIuC,KAAK4c,MAAM2J,GAAqBva,EAA+B,SAAbyR,IAAsB,CAAChgB,EAAI8oB,EAAoBva,EAAkByR,GAC9J,CAUA,SAASuJ,GAAUtiB,EAAQY,GACzB,OAAO2hB,GAAcviB,EAAQY,EAC/B,CAGA,SAAS2hB,GAAcviB,EAAQY,EAAa4hB,GACzC/B,MAEyE,GAAiB,GAC3F,IAAI,UACFC,GACE,aAAiBR,KAEnBte,QAAS6gB,GACP,aAAiBrC,IACjBgC,EAAaK,EAAcA,EAAcppB,OAAS,GAClDqpB,EAAeN,EAAaA,EAAWlgB,OAAS,CAAC,EAEjDygB,GADiBP,GAAaA,EAAWjnB,SACpBinB,EAAaA,EAAWxd,aAAe,KAC9Cwd,GAAcA,EAAWhiB,MAyB3C,IACInF,EADA2nB,EAAsB/B,KAE1B,GAAIjgB,EAAa,CACf,IAAIiiB,EACJ,IAAIC,EAA2C,iBAAhBliB,EAA2B9E,EAAU8E,GAAeA,EAC1D,MAAvB+hB,IAAuF,OAAvDE,EAAwBC,EAAkB3nB,eAAoB,EAAS0nB,EAAsB1lB,WAAWwlB,KAAwc,GAAiB,GACnmB1nB,EAAW6nB,CACb,MACE7nB,EAAW2nB,EAEb,IAAIznB,EAAWF,EAASE,UAAY,IAEhCyG,EAAUjB,EAAYX,EAAQ,CAChC7E,SAF6C,MAAvBwnB,EAA6BxnB,EAAWA,EAASyC,MAAM+kB,EAAmBtpB,SAAW,MAQ7G,IAAI0pB,EAAkBC,GAAephB,GAAWA,EAAQ3J,KAAI+J,GAAS7K,OAAOO,OAAO,CAAC,EAAGsK,EAAO,CAC5FE,OAAQ/K,OAAOO,OAAO,CAAC,EAAGgrB,EAAc1gB,EAAME,QAC9C/G,SAAUsH,EAAU,CAACkgB,EAErBjC,EAAU9kB,eAAiB8kB,EAAU9kB,eAAeoG,EAAM7G,UAAUA,SAAW6G,EAAM7G,WACrFyJ,aAAqC,MAAvB5C,EAAM4C,aAAuB+d,EAAqBlgB,EAAU,CAACkgB,EAE3EjC,EAAU9kB,eAAiB8kB,EAAU9kB,eAAeoG,EAAM4C,cAAczJ,SAAW6G,EAAM4C,mBACtF6d,EAAeD,GAKpB,OAAI5hB,GAAemiB,EACG,gBAAoB5C,GAAgB+B,SAAU,CAChEpkB,MAAO,CACL7C,SAAU,GAAS,CACjBE,SAAU,IACVY,OAAQ,GACRC,KAAM,GACNzB,MAAO,KACPjB,IAAK,WACJ2B,GACH8lB,eAAgBvnB,EAAOmB,MAExBooB,GAEEA,CACT,CACA,SAASE,KACP,IAAIxjB,EAAQyjB,KACRnlB,EAAUkO,GAAqBxM,GAASA,EAAMyI,OAAS,IAAMzI,EAAMsM,WAAatM,aAAiBzB,MAAQyB,EAAM1B,QAAUzC,KAAKC,UAAUkE,GACxI0jB,EAAQ1jB,aAAiBzB,MAAQyB,EAAM0jB,MAAQ,KAC/CC,EAAY,yBACZC,EAAY,CACdC,QAAS,SACTC,gBAAiBH,GAenB,OAAoB,gBAAoB,WAAgB,KAAmB,gBAAoB,KAAM,KAAM,iCAA+C,gBAAoB,KAAM,CAClLI,MAAO,CACLC,UAAW,WAEZ1lB,GAAUolB,EAAqB,gBAAoB,MAAO,CAC3DK,MAAOH,GACNF,GAAS,KAfE,KAgBhB,CACA,MAAMO,GAAmC,gBAAoBT,GAAuB,MACpF,MAAMU,WAA4B,YAChC,WAAAjb,CAAYkb,GACVC,MAAMD,GACNhqB,KAAKW,MAAQ,CACXU,SAAU2oB,EAAM3oB,SAChBqU,aAAcsU,EAAMtU,aACpB7P,MAAOmkB,EAAMnkB,MAEjB,CACA,+BAAOqkB,CAAyBrkB,GAC9B,MAAO,CACLA,MAAOA,EAEX,CACA,+BAAOskB,CAAyBH,EAAOrpB,GASrC,OAAIA,EAAMU,WAAa2oB,EAAM3oB,UAAmC,SAAvBV,EAAM+U,cAAkD,SAAvBsU,EAAMtU,aACvE,CACL7P,MAAOmkB,EAAMnkB,MACbxE,SAAU2oB,EAAM3oB,SAChBqU,aAAcsU,EAAMtU,cAQjB,CACL7P,MAAOmkB,EAAMnkB,OAASlF,EAAMkF,MAC5BxE,SAAUV,EAAMU,SAChBqU,aAAcsU,EAAMtU,cAAgB/U,EAAM+U,aAE9C,CACA,iBAAA0U,CAAkBvkB,EAAOwkB,GACvB/lB,QAAQuB,MAAM,wDAAyDA,EAAOwkB,EAChF,CACA,MAAAC,GACE,OAAOtqB,KAAKW,MAAMkF,MAAqB,gBAAoB2gB,GAAa8B,SAAU,CAChFpkB,MAAOlE,KAAKgqB,MAAMO,cACJ,gBAAoB5D,GAAkB2B,SAAU,CAC9DpkB,MAAOlE,KAAKW,MAAMkF,MAClBc,SAAU3G,KAAKgqB,MAAMQ,aACjBxqB,KAAKgqB,MAAMrjB,QACnB,EAEF,SAAS8jB,GAAc3lB,GACrB,IAAI,aACFylB,EAAY,MACZniB,EAAK,SACLzB,GACE7B,EACAkjB,EAAoB,aAAiB7B,IAOzC,OAHI6B,GAAqBA,EAAkBT,QAAUS,EAAkB0C,gBAAkBtiB,EAAM5B,MAAMmkB,cAAgBviB,EAAM5B,MAAMokB,iBAC/H5C,EAAkB0C,cAAcG,2BAA6BziB,EAAM5B,MAAME,IAEvD,gBAAoB8f,GAAa8B,SAAU,CAC7DpkB,MAAOqmB,GACN5jB,EACL,CACA,SAASyiB,GAAephB,EAAS6gB,EAAeD,GAC9C,IAAIkC,EAOJ,QANsB,IAAlBjC,IACFA,EAAgB,SAEM,IAApBD,IACFA,EAAkB,MAEL,MAAX5gB,EAAiB,CACnB,IAAI+iB,EACJ,GAA4C,OAAvCA,EAAmBnC,KAA4BmC,EAAiBnV,OAKnE,OAAO,KAFP5N,EAAU4gB,EAAgB5gB,OAI9B,CACA,IAAImhB,EAAkBnhB,EAGlB4N,EAAkD,OAAxCkV,EAAoBlC,QAA2B,EAASkC,EAAkBlV,OACxF,GAAc,MAAVA,EAAgB,CAClB,IAAIoV,EAAa7B,EAAgB7G,WAAUnN,GAAKA,EAAE3O,MAAME,KAAiB,MAAVkP,OAAiB,EAASA,EAAOT,EAAE3O,MAAME,OACtGskB,GAAc,GAAoK,GAAiB,GACrM7B,EAAkBA,EAAgBnlB,MAAM,EAAG/C,KAAKC,IAAIioB,EAAgB1pB,OAAQurB,EAAa,GAC3F,CACA,OAAO7B,EAAgB8B,aAAY,CAACxE,EAAQre,EAAO3H,KACjD,IAAIoF,EAAQuC,EAAM5B,MAAME,GAAe,MAAVkP,OAAiB,EAASA,EAAOxN,EAAM5B,MAAME,IAAM,KAE5EikB,EAAe,KACf/B,IACF+B,EAAeviB,EAAM5B,MAAMmkB,cAAgBb,IAE7C,IAAI9hB,EAAU6gB,EAAc/f,OAAOqgB,EAAgBnlB,MAAM,EAAGvD,EAAQ,IAChEyqB,EAAc,KAChB,IAAIvkB,EAgBJ,OAdEA,EADEd,EACS8kB,EACFviB,EAAM5B,MAAM2kB,UAOG,gBAAoB/iB,EAAM5B,MAAM2kB,UAAW,MAC1D/iB,EAAM5B,MAAM4kB,QACVhjB,EAAM5B,MAAM4kB,QAEZ3E,EAEO,gBAAoBgE,GAAe,CACrDriB,MAAOA,EACPmiB,aAAc,CACZ9D,SACAze,UACA0e,YAAgC,MAAnBkC,GAEfjiB,SAAUA,GACV,EAKJ,OAAOiiB,IAAoBxgB,EAAM5B,MAAMokB,eAAiBxiB,EAAM5B,MAAMmkB,cAA0B,IAAVlqB,GAA4B,gBAAoBspB,GAAqB,CACvJ1oB,SAAUunB,EAAgBvnB,SAC1BqU,aAAckT,EAAgBlT,aAC9B8U,UAAWG,EACX9kB,MAAOA,EACPc,SAAUukB,IACVX,aAAc,CACZ9D,OAAQ,KACRze,UACA0e,aAAa,KAEZwE,GAAa,GACjB,KACL,CACA,IAAIxD,GAA8B,SAAUA,GAI1C,OAHAA,EAA2B,WAAI,aAC/BA,EAA+B,eAAI,iBACnCA,EAAkC,kBAAI,cAC/BA,CACT,CALkC,CAKhCA,IAAkB,CAAC,GACjBG,GAAmC,SAAUA,GAW/C,OAVAA,EAAgC,WAAI,aACpCA,EAAmC,cAAI,gBACvCA,EAAmC,cAAI,gBACvCA,EAAmC,cAAI,gBACvCA,EAAmC,cAAI,gBACvCA,EAAwC,mBAAI,qBAC5CA,EAAgC,WAAI,aACpCA,EAAoC,eAAI,iBACxCA,EAAuC,kBAAI,cAC3CA,EAAgC,WAAI,aAC7BA,CACT,CAZuC,CAYrCA,IAAuB,CAAC,GAI1B,SAASJ,GAAqB4D,GAC5B,IAAIC,EAAM,aAAiBnF,IAE3B,OADCmF,GAA6G,GAAiB,GACxHA,CACT,CACA,SAASC,GAAmBF,GAC1B,IAAI1qB,EAAQ,aAAiBylB,IAE7B,OADCzlB,GAA+G,GAAiB,GAC1HA,CACT,CAQA,SAASinB,GAAkByD,GACzB,IAAI7kB,EARN,SAAyB6kB,GACvB,IAAI7kB,EAAQ,aAAiBggB,IAE7B,OADChgB,GAA+G,GAAiB,GAC1HA,CACT,CAIcglB,GACRC,EAAYjlB,EAAMwB,QAAQxB,EAAMwB,QAAQvI,OAAS,GAErD,OADCgsB,EAAUjlB,MAAME,IAA8I,GAAiB,GACzK+kB,EAAUjlB,MAAME,EACzB,CAKA,SAASglB,KACP,OAAO9D,GAAkBC,GAAoB8D,WAC/C,CAMA,SAASC,KAEP,OADYL,GAAmB1D,GAAoBgE,eACtCtW,UACf,CAMA,SAASuW,KACP,IAAI9D,EAAoBP,GAAqBC,GAAeqE,gBACxDprB,EAAQ4qB,GAAmB1D,GAAoBkE,gBACnD,OAAO,WAAc,KAAM,CACzB3P,WAAY4L,EAAkBhT,OAAOoH,WACrCzb,MAAOA,EAAM+U,gBACX,CAACsS,EAAkBhT,OAAOoH,WAAYzb,EAAM+U,cAClD,CAMA,SAASsW,KACP,IAAI,QACFhkB,EAAO,WACPK,GACEkjB,GAAmB1D,GAAoBoE,YAC3C,OAAO,WAAc,IAAMjkB,EAAQ3J,KAAI8W,GAAK,EAAkCA,EAAG9M,MAAc,CAACL,EAASK,GAC3G,CAKA,SAAS6jB,KACP,IAAIvrB,EAAQ4qB,GAAmB1D,GAAoBsE,eAC/CtS,EAAU+N,GAAkBC,GAAoBsE,eACpD,IAAIxrB,EAAMiV,QAAmC,MAAzBjV,EAAMiV,OAAOiE,GAIjC,OAAOlZ,EAAM0H,WAAWwR,GAHtBvV,QAAQuB,MAAM,2DAA6DgU,EAAU,IAIzF,CAKA,SAASuS,GAAmBvS,GAE1B,OADY0R,GAAmB1D,GAAoBwE,oBACtChkB,WAAWwR,EAC1B,CAKA,SAASyS,KACP,IAAI3rB,EAAQ4qB,GAAmB1D,GAAoB0E,eAGnD,OAFY,aAAiB/F,KACkG,GAAiB,GACzIjpB,OAAOglB,QAAiB,MAAT5hB,OAAgB,EAASA,EAAMgV,aAAe,CAAC,GAAG,EAC1E,CAOA,SAAS2T,KACP,IAAIkD,EACJ,IAAI3mB,EAAQ,aAAiB8gB,IACzBhmB,EAAQ4qB,GAAmB1D,GAAoB4E,eAC/C5S,EAAU+N,GAAkBC,GAAoB4E,eAIpD,OAAI5mB,IAKqC,OAAjC2mB,EAAgB7rB,EAAMiV,aAAkB,EAAS4W,EAAc3S,GACzE,CAKA,SAAS6S,KACP,IAAIxoB,EAAQ,aAAiBmiB,IAC7B,OAAgB,MAATniB,OAAgB,EAASA,EAAM2N,KACxC,CAKA,SAAS8a,KACP,IAAIzoB,EAAQ,aAAiBmiB,IAC7B,OAAgB,MAATniB,OAAgB,EAASA,EAAM0N,MACxC,CACA,IAAIgb,GAAY,EAQhB,SAASC,GAAWC,GAClB,IAAI,OACF9X,EAAM,SACN/N,GACEwgB,GAAqBC,GAAeqF,YACpCpsB,EAAQ4qB,GAAmB1D,GAAoBkF,aAC9CrP,EAAYsP,GAAiB,WAAe,IAC7CrP,EAAkB,eAAkBiG,IACtC,GAA2B,mBAAhBkJ,EACT,QAASA,EAEX,GAAiB,MAAb7lB,EACF,OAAO6lB,EAAYlJ,GAMrB,IAAI,gBACF9L,EAAe,aACfvV,EAAY,cACZ+S,GACEsO,EACJ,OAAOkJ,EAAY,CACjBhV,gBAAiB,GAAS,CAAC,EAAGA,EAAiB,CAC7CvW,SAAU2F,EAAc4Q,EAAgBvW,SAAU0F,IAAa6Q,EAAgBvW,WAEjFgB,aAAc,GAAS,CAAC,EAAGA,EAAc,CACvChB,SAAU2F,EAAc3E,EAAahB,SAAU0F,IAAa1E,EAAahB,WAE3E+T,iBACA,GACD,CAACrO,EAAU6lB,IAsBd,OAlBA,aAAgB,KACd,IAAIptB,EAAM1B,SAAS4uB,IAEnB,OADAI,EAActtB,GACP,IAAMsV,EAAOqI,cAAc3d,EAAI,GACrC,CAACsV,IAMJ,aAAgB,KACK,KAAf0I,GACF1I,EAAOyL,WAAW/C,EAAYC,EAChC,GACC,CAAC3I,EAAQ0I,EAAYC,IAIjBD,GAAc/c,EAAMoV,SAAStH,IAAIiP,GAAc/c,EAAMoV,SAASxF,IAAImN,GAAcvK,EACzF,CA+DA,MACM8Z,GAAsB,EAAsB,gBAkFlD,SAASC,GAAanL,GACpB,IAAI,SACF9a,EAAQ,SACRN,EAAQ,eACRtG,EAAc,aACdC,EAAY,OACZ6T,GACE4N,EACAoL,EAAa,WACS,MAAtBA,EAAWxoB,UACbwoB,EAAWxoB,QAAUzE,EAAoB,CACvCG,iBACAC,eACAC,UAAU,KAGd,IAAI6E,EAAU+nB,EAAWxoB,SACpBhE,EAAOysB,GAAgB,WAAe,CACzCtsB,OAAQsE,EAAQtE,OAChBO,SAAU+D,EAAQ/D,YAEhB,mBACFgsB,GACElZ,GAAU,CAAC,EACXmZ,EAAW,eAAkBnW,IAC/BkW,GAAsBJ,GAAsBA,IAAoB,IAAMG,EAAajW,KAAaiW,EAAajW,EAAS,GACrH,CAACiW,EAAcC,IAElB,OADA,mBAAsB,IAAMjoB,EAAQtC,OAAOwqB,IAAW,CAACloB,EAASkoB,IAC5C,gBAAoBC,GAAQ,CAC9CtmB,SAAUA,EACVN,SAAUA,EACVtF,SAAUV,EAAMU,SAChB8lB,eAAgBxmB,EAAMG,OACtBgmB,UAAW1hB,GAEf,CAUA,SAASooB,GAASC,GAChB,IAAI,GACFtuB,EAAE,QACFuD,EAAO,MACP/B,EAAK,SACLwe,GACEsO,EACH5G,MAEwE,GAAiB,GAE1F,IAAI,QACF7e,GACE,aAAiBwe,KAEnBjlB,SAAUmM,GACRuZ,KACAlI,EAAWyI,KAIXvlB,EAAOsL,EAAUpO,EAAI,EAAkC6I,GAAS3J,KAAI+J,GAASA,EAAM4C,eAAe0C,EAA+B,SAAbyR,GACpHuO,EAAWhsB,KAAKC,UAAUM,GAM9B,OALA,aAAgB,IAAM8c,EAASrd,KAAK4c,MAAMoP,GAAW,CACnDhrB,UACA/B,QACAwe,cACE,CAACJ,EAAU2O,EAAUvO,EAAUzc,EAAS/B,IACrC,IACT,CAMA,SAASgtB,GAAO3D,GACd,OAAO3B,GAAU2B,EAAMxF,QACzB,CAMA,SAASoJ,GAAMC,GACkM,GAAiB,EAClO,CAUA,SAASN,GAAOO,GACd,IACE7mB,SAAU8mB,EAAe,IAAG,SAC5BpnB,EAAW,KACXtF,SAAU2sB,EAAY,eACtB7G,EAAiBvnB,EAAOmB,IAAG,UAC3B+lB,EACAS,OAAQ0G,GAAa,GACnBH,EACFjH,MAAwM,GAAiB,GAI3N,IAAI5f,EAAW8mB,EAAarrB,QAAQ,OAAQ,KACxCwrB,EAAoB,WAAc,KAAM,CAC1CjnB,WACA6f,YACAS,OAAQ0G,KACN,CAAChnB,EAAU6f,EAAWmH,IACE,iBAAjBD,IACTA,EAAe9rB,EAAU8rB,IAE3B,IAAI,SACFzsB,EAAW,IAAG,OACdY,EAAS,GAAE,KACXC,EAAO,GAAE,MACTzB,EAAQ,KAAI,IACZjB,EAAM,WACJsuB,EACAG,EAAkB,WAAc,KAClC,IAAIC,EAAmBlnB,EAAc3F,EAAU0F,GAC/C,OAAwB,MAApBmnB,EACK,KAEF,CACL/sB,SAAU,CACRE,SAAU6sB,EACVjsB,SACAC,OACAzB,QACAjB,OAEFynB,iBACD,GACA,CAAClgB,EAAU1F,EAAUY,EAAQC,EAAMzB,EAAOjB,EAAKynB,IAElD,OAAuB,MAAnBgH,EACK,KAEW,gBAAoB7H,GAAkBgC,SAAU,CAClEpkB,MAAOgqB,GACO,gBAAoB3H,GAAgB+B,SAAU,CAC5D3hB,SAAUA,EACVzC,MAAOiqB,IAEX,CAOA,SAASE,GAAOC,GACd,IAAI,SACF3nB,EAAQ,SACRtF,GACEitB,EACJ,OAAO5F,GAAU6F,GAAyB5nB,GAAWtF,EACvD,CAKA,SAASmtB,GAAMC,GACb,IAAI,SACF9nB,EAAQ,aACRgkB,EAAY,QACZvZ,GACEqd,EACJ,OAAoB,gBAAoBC,GAAoB,CAC1Dtd,QAASA,EACTuZ,aAAcA,GACA,gBAAoBgE,GAAc,KAAMhoB,GAC1D,CACA,IAAIioB,GAAiC,SAAUA,GAI7C,OAHAA,EAAkBA,EAA2B,QAAI,GAAK,UACtDA,EAAkBA,EAA2B,QAAI,GAAK,UACtDA,EAAkBA,EAAyB,MAAI,GAAK,QAC7CA,CACT,CALqC,CAKnCA,IAAqB,CAAC,GACxB,MAAMC,GAAsB,IAAIvf,SAAQ,SACxC,MAAMof,WAA2B,YAC/B,WAAA5f,CAAYkb,GACVC,MAAMD,GACNhqB,KAAKW,MAAQ,CACXkF,MAAO,KAEX,CACA,+BAAOqkB,CAAyBrkB,GAC9B,MAAO,CACLA,QAEJ,CACA,iBAAAukB,CAAkBvkB,EAAOwkB,GACvB/lB,QAAQuB,MAAM,mDAAoDA,EAAOwkB,EAC3E,CACA,MAAAC,GACE,IAAI,SACF3jB,EAAQ,aACRgkB,EAAY,QACZvZ,GACEpR,KAAKgqB,MACL/Z,EAAU,KACV3B,EAASsgB,GAAkBE,QAC/B,GAAM1d,aAAmB9B,QAUlB,GAAItP,KAAKW,MAAMkF,MAAO,CAE3ByI,EAASsgB,GAAkB/oB,MAC3B,IAAIkpB,EAAc/uB,KAAKW,MAAMkF,MAC7BoK,EAAUX,QAAQP,SAASsB,OAAM,SACjC9S,OAAO+S,eAAeL,EAAS,WAAY,CACzCM,IAAK,KAAM,IAEbhT,OAAO+S,eAAeL,EAAS,SAAU,CACvCM,IAAK,IAAMwe,GAEf,MAAW3d,EAAQM,UAEjBzB,EAAUmB,EACV9C,OAA4B1N,IAAnBqP,EAAQ2B,OAAuBgd,GAAkB/oB,WAA0BjF,IAAlBqP,EAAQ4B,MAAsB+c,GAAkBI,QAAUJ,GAAkBE,UAG9IxgB,EAASsgB,GAAkBE,QAC3BvxB,OAAO+S,eAAec,EAAS,WAAY,CACzCb,IAAK,KAAM,IAEbN,EAAUmB,EAAQjB,MAAK5H,GAAQhL,OAAO+S,eAAec,EAAS,QAAS,CACrEb,IAAK,IAAMhI,MACT1C,GAAStI,OAAO+S,eAAec,EAAS,SAAU,CACpDb,IAAK,IAAM1K,YAhCbyI,EAASsgB,GAAkBI,QAC3B/e,EAAUX,QAAQ8B,UAClB7T,OAAO+S,eAAeL,EAAS,WAAY,CACzCM,IAAK,KAAM,IAEbhT,OAAO+S,eAAeL,EAAS,QAAS,CACtCM,IAAK,IAAMa,IA6Bf,GAAI9C,IAAWsgB,GAAkB/oB,OAASoK,EAAQ2B,kBAAkBhD,EAElE,MAAMigB,GAER,GAAIvgB,IAAWsgB,GAAkB/oB,QAAU8kB,EAEzC,MAAM1a,EAAQ2B,OAEhB,GAAItD,IAAWsgB,GAAkB/oB,MAE/B,OAAoB,gBAAoBwgB,GAAaiC,SAAU,CAC7DpkB,MAAO+L,EACPtJ,SAAUgkB,IAGd,GAAIrc,IAAWsgB,GAAkBI,QAE/B,OAAoB,gBAAoB3I,GAAaiC,SAAU,CAC7DpkB,MAAO+L,EACPtJ,SAAUA,IAKd,MAAMsJ,CACR,EAOF,SAAS0e,GAAaM,GACpB,IAAI,SACFtoB,GACEsoB,EACA1mB,EAAOmkB,KACPwC,EAA+B,mBAAbvoB,EAA0BA,EAAS4B,GAAQ5B,EACjE,OAAoB,gBAAoB,WAAgB,KAAMuoB,EAChE,CAaA,SAASX,GAAyB5nB,EAAUL,QACvB,IAAfA,IACFA,EAAa,IAEf,IAAIF,EAAS,GAoCb,OAnCA,WAAe1H,QAAQiI,GAAU,CAACykB,EAAS3qB,KACzC,IAAmB,iBAAqB2qB,GAGtC,OAEF,IAAI3kB,EAAW,IAAIH,EAAY7F,GAC/B,GAAI2qB,EAAQzR,OAAS,WAGnB,YADAvT,EAAO/D,KAAKtC,MAAMqG,EAAQmoB,GAAyBnD,EAAQpB,MAAMrjB,SAAUF,IAG3E2kB,EAAQzR,OAASiU,IAAmQ,GAAiB,GACpSxC,EAAQpB,MAAMvpB,OAAU2qB,EAAQpB,MAAMrjB,UAA0H,GAAiB,GACpL,IAAIH,EAAQ,CACVE,GAAI0kB,EAAQpB,MAAMtjB,IAAMD,EAASlI,KAAK,KACtCqK,cAAewiB,EAAQpB,MAAMphB,cAC7BwiB,QAASA,EAAQpB,MAAMoB,QACvBD,UAAWC,EAAQpB,MAAMmB,UACzB1qB,MAAO2qB,EAAQpB,MAAMvpB,MACrBwB,KAAMmpB,EAAQpB,MAAM/nB,KACpBoT,OAAQ+V,EAAQpB,MAAM3U,OACtBvU,OAAQsqB,EAAQpB,MAAMlpB,OACtB6pB,aAAcS,EAAQpB,MAAMW,aAC5BC,cAAeQ,EAAQpB,MAAMY,cAC7BpX,iBAAiD,MAA/B4X,EAAQpB,MAAMY,eAAuD,MAA9BQ,EAAQpB,MAAMW,aACvElH,iBAAkB2H,EAAQpB,MAAMvG,iBAChCjb,OAAQ4iB,EAAQpB,MAAMxhB,OACtB4M,KAAMgW,EAAQpB,MAAM5U,MAElBgW,EAAQpB,MAAMrjB,WAChBH,EAAMG,SAAW4nB,GAAyBnD,EAAQpB,MAAMrjB,SAAUF,IAEpEL,EAAO/D,KAAKmE,EAAM,IAEbJ,CACT,CAKA,SAAS+oB,GAAcnnB,GACrB,OAAOohB,GAAephB,EACxB,CAEA,SAAS3B,GAAmBG,GAC1B,IAAI4oB,EAAU,CAGZ5b,iBAAyC,MAAvBhN,EAAMokB,eAA+C,MAAtBpkB,EAAMmkB,cAwBzD,OAtBInkB,EAAM2kB,WAMR5tB,OAAOO,OAAOsxB,EAAS,CACrBhE,QAAsB,gBAAoB5kB,EAAM2kB,WAChDA,eAAWvqB,IAGX4F,EAAMokB,eAMRrtB,OAAOO,OAAOsxB,EAAS,CACrBzE,aAA2B,gBAAoBnkB,EAAMokB,eACrDA,mBAAehqB,IAGZwuB,CACT,CACA,SAASC,GAAmBjpB,EAAQ+R,GAClC,OAAOxE,GAAa,CAClB1M,SAAkB,MAARkR,OAAe,EAASA,EAAKlR,SACvCkN,OAAQ,GAAS,CAAC,EAAW,MAARgE,OAAe,EAASA,EAAKhE,OAAQ,CACxDE,oBAAoB,IAEtBjP,QAASlF,EAAoB,CAC3BG,eAAwB,MAAR8X,OAAe,EAASA,EAAK9X,eAC7CC,aAAsB,MAAR6X,OAAe,EAASA,EAAK7X,eAE7CqU,cAAuB,MAARwD,OAAe,EAASA,EAAKxD,cAC5CvO,SACAC,wBACC2X,YACL,CCpzCA,SAAS,KAYP,OAXA,GAAWzgB,OAAOO,OAASP,OAAOO,OAAOgC,OAAS,SAAUf,GAC1D,IAAK,IAAIZ,EAAI,EAAGA,EAAIqB,UAAUC,OAAQtB,IAAK,CACzC,IAAIa,EAASQ,UAAUrB,GACvB,IAAK,IAAIuB,KAAOV,EACVzB,OAAOE,UAAUD,eAAemC,KAAKX,EAAQU,KAC/CX,EAAOW,GAAOV,EAAOU,GAG3B,CACA,OAAOX,CACT,EACO,GAASgB,MAAMC,KAAMR,UAC9B,CACA,SAAS8vB,GAA8BtwB,EAAQuwB,GAC7C,GAAc,MAAVvwB,EAAgB,MAAO,CAAC,EAC5B,IAEIU,EAAKvB,EAFLY,EAAS,CAAC,EACVywB,EAAajyB,OAAOqB,KAAKI,GAE7B,IAAKb,EAAI,EAAGA,EAAIqxB,EAAW/vB,OAAQtB,IACjCuB,EAAM8vB,EAAWrxB,GACboxB,EAASxrB,QAAQrE,IAAQ,IAC7BX,EAAOW,GAAOV,EAAOU,IAEvB,OAAOX,CACT,CAEA,MAAM0wB,GAAgB,MAChBC,GAAiB,oCACvB,SAASC,GAAcC,GACrB,OAAiB,MAAVA,GAA4C,iBAAnBA,EAAOC,OACzC,CA0CA,SAASC,GAAmB1hB,GAI1B,YAHa,IAATA,IACFA,EAAO,IAEF,IAAI0T,gBAAgC,iBAAT1T,GAAqBe,MAAMC,QAAQhB,IAASA,aAAgB0T,gBAAkB1T,EAAO7Q,OAAOqB,KAAKwP,GAAM7D,QAAO,CAAC4B,EAAMzM,KACrJ,IAAIwE,EAAQkK,EAAK1O,GACjB,OAAOyM,EAAKrD,OAAOqG,MAAMC,QAAQlL,GAASA,EAAM7F,KAAI4S,GAAK,CAACvR,EAAKuR,KAAM,CAAC,CAACvR,EAAKwE,IAAQ,GACnF,IACL,CAoBA,IAAI6rB,GAA6B,KAcjC,MAAMC,GAAwB,IAAI9pB,IAAI,CAAC,oCAAqC,sBAAuB,eACnG,SAAS+pB,GAAeC,GACtB,OAAe,MAAXA,GAAoBF,GAAsBvhB,IAAIyhB,GAI3CA,EAFE,IAGX,CACA,SAASC,GAAsBpxB,EAAQkI,GACrC,IAAI2S,EACA9Y,EACAovB,EACAld,EACAqO,EACJ,GA7FOsO,GADcC,EA8FH7wB,IA7F+C,SAAjC6wB,EAAOC,QAAQrjB,cA6FpB,CAIzB,IAAI4jB,EAAOrxB,EAAO6E,aAAa,UAC/B9C,EAASsvB,EAAOlpB,EAAckpB,EAAMnpB,GAAY,KAChD2S,EAAS7a,EAAO6E,aAAa,WAAa6rB,GAC1CS,EAAUD,GAAelxB,EAAO6E,aAAa,aAAe8rB,GAC5D1c,EAAW,IAAI6O,SAAS9iB,EAC1B,MAAO,GA1GT,SAAyB6wB,GACvB,OAAOD,GAAcC,IAA4C,WAAjCA,EAAOC,QAAQrjB,aACjD,CAwGa6jB,CAAgBtxB,IApG7B,SAAwB6wB,GACtB,OAAOD,GAAcC,IAA4C,UAAjCA,EAAOC,QAAQrjB,aACjD,CAkGwC8jB,CAAevxB,KAA4B,WAAhBA,EAAO4a,MAAqC,UAAhB5a,EAAO4a,MAAmB,CACrH,IAAI4W,EAAOxxB,EAAOwxB,KAClB,GAAY,MAARA,EACF,MAAM,IAAInsB,MAAM,sEAMlB,IAAIgsB,EAAOrxB,EAAO6E,aAAa,eAAiB2sB,EAAK3sB,aAAa,UAUlE,GATA9C,EAASsvB,EAAOlpB,EAAckpB,EAAMnpB,GAAY,KAChD2S,EAAS7a,EAAO6E,aAAa,eAAiB2sB,EAAK3sB,aAAa,WAAa6rB,GAC7ES,EAAUD,GAAelxB,EAAO6E,aAAa,iBAAmBqsB,GAAeM,EAAK3sB,aAAa,aAAe8rB,GAEhH1c,EAAW,IAAI6O,SAAS0O,EAAMxxB,IAlDlC,WACE,GAAmC,OAA/BgxB,GACF,IACE,IAAIlO,SAASpe,SAASqQ,cAAc,QAEpC,GACAic,IAA6B,CAC/B,CAAE,MAAOvrB,GACPurB,IAA6B,CAC/B,CAEF,OAAOA,EACT,CA2CSS,GAAgC,CACnC,IAAI,KACFzqB,EAAI,KACJ4T,EAAI,MACJzV,GACEnF,EACJ,GAAa,UAAT4a,EAAkB,CACpB,IAAIvO,EAASrF,EAAOA,EAAO,IAAM,GACjCiN,EAASkP,OAAO9W,EAAS,IAAK,KAC9B4H,EAASkP,OAAO9W,EAAS,IAAK,IAChC,MAAWrF,GACTiN,EAASkP,OAAOnc,EAAM7B,EAE1B,CACF,KAAO,IAAIyrB,GAAc5wB,GACvB,MAAM,IAAIqF,MAAM,sFAEhBwV,EAAS6V,GACT3uB,EAAS,KACTovB,EAAUR,GACVrO,EAAOtiB,CACT,CA/IF,IAAuB6wB,EAqJrB,OAJI5c,GAAwB,eAAZkd,IACd7O,EAAOrO,EACPA,OAAWpS,GAEN,CACLE,SACA8Y,OAAQA,EAAOpN,cACf0jB,UACAld,WACAqO,OAEJ,CAEA,MAAMoP,GAAY,CAAC,UAAW,WAAY,iBAAkB,UAAW,QAAS,SAAU,KAAM,qBAAsB,2BACpHC,GAAa,CAAC,eAAgB,gBAAiB,YAAa,MAAO,QAAS,KAAM,0BAA2B,YAC7GC,GAAa,CAAC,iBAAkB,UAAW,QAAS,SAAU,SAAU,WAAY,SAAU,WAAY,qBAAsB,2BAClI,SAASC,GAAoBxqB,EAAQ+R,GACnC,OAAOxE,GAAa,CAClB1M,SAAkB,MAARkR,OAAe,EAASA,EAAKlR,SACvCkN,OAAQ,GAAS,CAAC,EAAW,MAARgE,OAAe,EAASA,EAAKhE,OAAQ,CACxDE,oBAAoB,IAEtBjP,QAASpC,EAAqB,CAC5BE,OAAgB,MAARiV,OAAe,EAASA,EAAKjV,SAEvCyR,eAAwB,MAARwD,OAAe,EAASA,EAAKxD,gBAAkBkc,KAC/DzqB,SACAC,mBAAoB,GACpBnD,OAAgB,MAARiV,OAAe,EAASA,EAAKjV,SACpC8a,YACL,CACA,SAAS8S,GAAiB1qB,EAAQ+R,GAChC,OAAOxE,GAAa,CAClB1M,SAAkB,MAARkR,OAAe,EAASA,EAAKlR,SACvCkN,OAAQ,GAAS,CAAC,EAAW,MAARgE,OAAe,EAASA,EAAKhE,OAAQ,CACxDE,oBAAoB,IAEtBjP,QAAS/B,EAAkB,CACzBH,OAAgB,MAARiV,OAAe,EAASA,EAAKjV,SAEvCyR,eAAwB,MAARwD,OAAe,EAASA,EAAKxD,gBAAkBkc,KAC/DzqB,SACAC,mBAAoB,GACpBnD,OAAgB,MAARiV,OAAe,EAASA,EAAKjV,SACpC8a,YACL,CACA,SAAS6S,KACP,IAAI5S,EACJ,IAAItd,EAA8B,OAArBsd,EAAU/a,aAAkB,EAAS+a,EAAQ8S,4BAM1D,OALIpwB,GAASA,EAAMiV,SACjBjV,EAAQ,GAAS,CAAC,EAAGA,EAAO,CAC1BiV,OAAQob,GAAkBrwB,EAAMiV,WAG7BjV,CACT,CACA,SAASqwB,GAAkBpb,GACzB,IAAKA,EAAQ,OAAO,KACpB,IAAIxV,EAAU7C,OAAO6C,QAAQwV,GACzBqb,EAAa,CAAC,EAClB,IAAK,IAAKvxB,EAAKN,KAAQgB,EAGrB,GAAIhB,GAAsB,uBAAfA,EAAI8xB,OACbD,EAAWvxB,GAAO,IAAI,EAAyBN,EAAIkP,OAAQlP,EAAI+S,WAAY/S,EAAImJ,MAAuB,IAAjBnJ,EAAIgT,eACpF,GAAIhT,GAAsB,UAAfA,EAAI8xB,OAAoB,CAExC,GAAI9xB,EAAI+xB,UAAW,CACjB,IAAIC,EAAmBluB,OAAO9D,EAAI+xB,WAClC,GAAgC,mBAArBC,EACT,IAEE,IAAIvrB,EAAQ,IAAIurB,EAAiBhyB,EAAI+E,SAGrC0B,EAAM0jB,MAAQ,GACd0H,EAAWvxB,GAAOmG,CACpB,CAAE,MAAOrB,GAET,CAEJ,CACA,GAAuB,MAAnBysB,EAAWvxB,GAAc,CAC3B,IAAImG,EAAQ,IAAIzB,MAAMhF,EAAI+E,SAG1B0B,EAAM0jB,MAAQ,GACd0H,EAAWvxB,GAAOmG,CACpB,CACF,MACEorB,EAAWvxB,GAAON,EAGtB,OAAO6xB,CACT,CACA,MAAMI,GAAqC,gBAAoB,CAC7DC,iBAAiB,IA8BnB,MACM,GAAsB,EAAsB,gBAQlD,MAAMC,GACJ,WAAAziB,GACE9O,KAAKsO,OAAS,UACdtO,KAAKiQ,QAAU,IAAIX,SAAQ,CAAC8B,EAASrC,KACnC/O,KAAKoR,QAAUlN,IACO,YAAhBlE,KAAKsO,SACPtO,KAAKsO,OAAS,WACd8C,EAAQlN,GACV,EAEFlE,KAAK+O,OAASyiB,IACQ,YAAhBxxB,KAAKsO,SACPtO,KAAKsO,OAAS,WACdS,EAAOyiB,GACT,CACD,GAEL,EAKF,SAAS,GAAe1sB,GACtB,IAAI,gBACF2sB,EAAe,OACfzc,EAAM,OACNb,GACErP,GACCnE,EAAOysB,GAAgB,WAAepY,EAAOrU,QAC7C+wB,EAAcC,GAAmB,cACjCC,EAAWC,GAAgB,WAAe,CAC7CP,iBAAiB,KAEdQ,EAAWC,GAAgB,cAC3BC,EAAYC,GAAiB,cAC7BC,EAAcC,GAAmB,cAClC,mBACF9E,GACElZ,GAAU,CAAC,EACXie,EAAuB,eAAkB9K,IACvC+F,EA/CR,SAA6B/F,GACvB,GACF,GAAoBA,GAEpBA,GAEJ,CA0CM+K,CAAoB/K,GAEpBA,GACF,GACC,CAAC+F,IACAC,EAAW,eAAkB,CAACnW,EAAU5F,KAC1C,IACE8F,4BAA6BD,GAC3B7F,EACC6F,GAAuC,MAAjBpC,EAAO9R,QAAwE,mBAA/C8R,EAAO9R,OAAOO,SAAS6uB,oBAGvEN,GAAcF,GAGvBA,EAAU1gB,UACV4gB,EAAWO,iBACXJ,EAAgB,CACdxxB,MAAOwW,EACPW,gBAAiBV,EAAmBU,gBACpCvV,aAAc6U,EAAmB7U,iBAInCovB,EAAgBxa,GAChB0a,EAAa,CACXP,iBAAiB,EACjBxZ,gBAAiBV,EAAmBU,gBACpCvV,aAAc6U,EAAmB7U,gBAjBnC6vB,GAAqB,IAAMhF,EAAajW,IAmB1C,GACC,CAACib,EAAsBJ,EAAYF,EAAW9c,EAAO9R,SAGxD,mBAAsB,IAAM8R,EAAOlE,UAAUwc,IAAW,CAACtY,EAAQsY,IAGjE,aAAgB,KACVsE,EAAUN,iBACZS,EAAa,IAAIR,GACnB,GACC,CAACK,EAAUN,kBAId,aAAgB,KACd,GAAIQ,GAAaJ,GAAgB1c,EAAO9R,OAAQ,CAC9C,IAAIiU,EAAWua,EACXc,EAAgBV,EAAU7hB,QAC1B+hB,EAAahd,EAAO9R,OAAOO,SAAS6uB,qBAAoBra,UAC1Dma,GAAqB,IAAMhF,EAAajW,WAClCqb,CAAa,IAErBR,EAAWS,SAASC,SAAQ,KAC1BX,OAAanxB,GACbqxB,OAAcrxB,GACd+wB,OAAgB/wB,GAChBixB,EAAa,CACXP,iBAAiB,GACjB,IAEJW,EAAcD,EAChB,IACC,CAACI,EAAsBV,EAAcI,EAAW9c,EAAO9R,SAG1D,aAAgB,KACV4uB,GAAaJ,GAAgB/wB,EAAMU,SAAS3B,MAAQgyB,EAAarwB,SAAS3B,KAC5EoyB,EAAU1gB,SACZ,GACC,CAAC0gB,EAAWE,EAAYrxB,EAAMU,SAAUqwB,IAG3C,aAAgB,MACTE,EAAUN,iBAAmBY,IAChCP,EAAgBO,EAAavxB,OAC7BkxB,EAAa,CACXP,iBAAiB,EACjBxZ,gBAAiBoa,EAAapa,gBAC9BvV,aAAc2vB,EAAa3vB,eAE7B4vB,OAAgBvxB,GAClB,GACC,CAACgxB,EAAUN,gBAAiBY,IAC/B,IAAIpL,EAAY,WAAc,KACrB,CACLllB,WAAYoT,EAAOpT,WACnBI,eAAgBgT,EAAOhT,eACvBY,GAAItE,GAAK0W,EAAO+J,SAASzgB,GACzB+D,KAAM,CAAClD,EAAIwB,EAAOwX,IAASnD,EAAO+J,SAAS5f,EAAI,CAC7CwB,QACA8U,mBAA4B,MAAR0C,OAAe,EAASA,EAAK1C,qBAEnD/S,QAAS,CAACvD,EAAIwB,EAAOwX,IAASnD,EAAO+J,SAAS5f,EAAI,CAChDuD,SAAS,EACT/B,QACA8U,mBAA4B,MAAR0C,OAAe,EAASA,EAAK1C,wBAGpD,CAACT,IACA/N,EAAW+N,EAAO/N,UAAY,IAC9B+gB,EAAoB,WAAc,KAAM,CAC1ChT,SACA8R,YACAS,QAAQ,EACRtgB,cACE,CAAC+N,EAAQ8R,EAAW7f,IAOxB,OAAoB,gBAAoB,WAAgB,KAAmB,gBAAoB,GAAyBqhB,SAAU,CAChIpkB,MAAO8jB,GACO,gBAAoB,GAA8BM,SAAU,CAC1EpkB,MAAOvD,GACO,gBAAoB0wB,GAAsB/I,SAAU,CAClEpkB,MAAO0tB,GACO,gBAAoBrE,GAAQ,CAC1CtmB,SAAUA,EACV5F,SAAUV,EAAMU,SAChB8lB,eAAgBxmB,EAAM2U,cACtBwR,UAAWA,GACVnmB,EAAMuU,YAA2B,gBAAoB,GAAY,CAClE9O,OAAQ4O,EAAO5O,OACfzF,MAAOA,IACJ8wB,MAAqB,KAC5B,CACA,SAAS,GAAW1P,GAClB,IAAI,OACF3b,EAAM,MACNzF,GACEohB,EACJ,OAAO,GAAqB3b,OAAQxF,EAAWD,EACjD,CAIA,SAASgyB,GAAclF,GACrB,IAAI,SACFxmB,EAAQ,SACRN,EAAQ,OACRwN,EAAM,OACNjR,GACEuqB,EACAN,EAAa,WACS,MAAtBA,EAAWxoB,UACbwoB,EAAWxoB,QAAU3B,EAAqB,CACxCE,SACA3C,UAAU,KAGd,IAAI6E,EAAU+nB,EAAWxoB,SACpBhE,EAAOysB,GAAgB,WAAe,CACzCtsB,OAAQsE,EAAQtE,OAChBO,SAAU+D,EAAQ/D,YAEhB,mBACFgsB,GACElZ,GAAU,CAAC,EACXmZ,EAAW,eAAkBnW,IAC/BkW,GAAsB,GAAsB,IAAoB,IAAMD,EAAajW,KAAaiW,EAAajW,EAAS,GACrH,CAACiW,EAAcC,IAElB,OADA,mBAAsB,IAAMjoB,EAAQtC,OAAOwqB,IAAW,CAACloB,EAASkoB,IAC5C,gBAAoBC,GAAQ,CAC9CtmB,SAAUA,EACVN,SAAUA,EACVtF,SAAUV,EAAMU,SAChB8lB,eAAgBxmB,EAAMG,OACtBgmB,UAAW1hB,GAEf,CAKA,SAASwtB,GAAW9E,GAClB,IAAI,SACF7mB,EAAQ,SACRN,EAAQ,OACRwN,EAAM,OACNjR,GACE4qB,EACAX,EAAa,WACS,MAAtBA,EAAWxoB,UACbwoB,EAAWxoB,QAAUtB,EAAkB,CACrCH,SACA3C,UAAU,KAGd,IAAI6E,EAAU+nB,EAAWxoB,SACpBhE,EAAOysB,GAAgB,WAAe,CACzCtsB,OAAQsE,EAAQtE,OAChBO,SAAU+D,EAAQ/D,YAEhB,mBACFgsB,GACElZ,GAAU,CAAC,EACXmZ,EAAW,eAAkBnW,IAC/BkW,GAAsB,GAAsB,IAAoB,IAAMD,EAAajW,KAAaiW,EAAajW,EAAS,GACrH,CAACiW,EAAcC,IAElB,OADA,mBAAsB,IAAMjoB,EAAQtC,OAAOwqB,IAAW,CAACloB,EAASkoB,IAC5C,gBAAoBC,GAAQ,CAC9CtmB,SAAUA,EACVN,SAAUA,EACVtF,SAAUV,EAAMU,SAChB8lB,eAAgBxmB,EAAMG,OACtBgmB,UAAW1hB,GAEf,CAOA,SAASytB,GAAcvE,GACrB,IAAI,SACFrnB,EAAQ,SACRN,EAAQ,OACRwN,EAAM,QACN/O,GACEkpB,GACC3tB,EAAOysB,GAAgB,WAAe,CACzCtsB,OAAQsE,EAAQtE,OAChBO,SAAU+D,EAAQ/D,YAEhB,mBACFgsB,GACElZ,GAAU,CAAC,EACXmZ,EAAW,eAAkBnW,IAC/BkW,GAAsB,GAAsB,IAAoB,IAAMD,EAAajW,KAAaiW,EAAajW,EAAS,GACrH,CAACiW,EAAcC,IAElB,OADA,mBAAsB,IAAMjoB,EAAQtC,OAAOwqB,IAAW,CAACloB,EAASkoB,IAC5C,gBAAoBC,GAAQ,CAC9CtmB,SAAUA,EACVN,SAAUA,EACVtF,SAAUV,EAAMU,SAChB8lB,eAAgBxmB,EAAMG,OACtBgmB,UAAW1hB,GAEf,CAIA,MAAMyO,GAA8B,oBAAX3Q,aAAqD,IAApBA,OAAOO,eAAqE,IAAlCP,OAAOO,SAASqQ,cAC9G,GAAqB,gCAIrBgf,GAAoB,cAAiB,SAAqBrE,EAAOsE,GACrE,IAgBIC,GAhBA,QACAC,EAAO,SACP9T,EAAQ,eACR5C,EAAc,QACd7Z,EAAO,MACP/B,EAAK,OACL5B,EAAM,GACNI,EAAE,mBACFsW,EAAkB,wBAClB6J,GACEmP,EACJnlB,EAAOgmB,GAA8Bb,EAAOgC,KAC1C,SACFxpB,GACE,aAAiB,IAGjBisB,GAAa,EACjB,GAAkB,iBAAP/zB,GAAmB,GAAmBsL,KAAKtL,KAEpD6zB,EAAe7zB,EAEX0U,IACF,IACE,IAAI2O,EAAa,IAAIzgB,IAAImB,OAAO7B,SAASsC,MACrCwvB,EAAYh0B,EAAGoE,WAAW,MAAQ,IAAIxB,IAAIygB,EAAWqC,SAAW1lB,GAAM,IAAI4C,IAAI5C,GAC9E8C,EAAOiF,EAAcisB,EAAU5xB,SAAU0F,GACzCksB,EAAU5tB,SAAWid,EAAWjd,QAAkB,MAARtD,EAE5C9C,EAAK8C,EAAOkxB,EAAUhxB,OAASgxB,EAAU/wB,KAEzC8wB,GAAa,CAEjB,CAAE,MAAO1uB,GAGT,CAIJ,IAAIb,EAAOijB,GAAQznB,EAAI,CACrBggB,aAEEiU,EAAkBC,GAAoBl0B,EAAI,CAC5CuD,UACA/B,QACA5B,SACA0W,qBACA0J,WACAG,4BAQF,OAGE,gBAAoB,IAAK,GAAS,CAAC,EAAGhW,EAAM,CAC1C3F,KAAMqvB,GAAgBrvB,EACtBsvB,QAASC,GAAc3W,EAAiB0W,EAX5C,SAAqBK,GACfL,GAASA,EAAQK,GAChBA,EAAMC,kBACTH,EAAgBE,EAEpB,EAOIP,IAAKA,EACLh0B,OAAQA,IAGd,IAOA,MAAMy0B,GAAuB,cAAiB,SAAwBvE,EAAO8D,GAC3E,IACI,eAAgBU,EAAkB,OAAM,cACxC7qB,GAAgB,EAChB8qB,UAAWC,EAAgB,GAAE,IAC7B9oB,GAAM,EACN+e,MAAOgK,EAAS,GAChBz0B,EAAE,wBACFmgB,EAAuB,SACvB3Y,GACEsoB,EACJ3lB,EAAOgmB,GAA8BL,EAAOyB,IAC1CzuB,EAAO8kB,GAAgB5nB,EAAI,CAC7BggB,SAAU7V,EAAK6V,WAEb9d,EAAW4lB,KACX4M,EAAc,aAAiB,KAC/B,UACF/M,GACE,aAAiB,IACjBwK,EAAiC,MAAfuC,GAGtBC,GAAuB7xB,KAAqC,IAA5Bqd,EAC5BzS,EAAaia,EAAU9kB,eAAiB8kB,EAAU9kB,eAAeC,GAAMV,SAAWU,EAAKV,SACvFmM,EAAmBrM,EAASE,SAC5BwyB,EAAuBF,GAAeA,EAAYte,YAAcse,EAAYte,WAAWlU,SAAWwyB,EAAYte,WAAWlU,SAASE,SAAW,KAC5IqH,IACH8E,EAAmBA,EAAiBlB,cACpCunB,EAAuBA,EAAuBA,EAAqBvnB,cAAgB,KACnFK,EAAaA,EAAWL,eAE1B,IAQIknB,EARAM,EAAWtmB,IAAqBb,IAAehC,GAAO6C,EAAiBnK,WAAWsJ,IAA8D,MAA/Ca,EAAiBjM,OAAOoL,EAAWpN,QACpIw0B,EAAoC,MAAxBF,IAAiCA,IAAyBlnB,IAAehC,GAAOkpB,EAAqBxwB,WAAWsJ,IAAkE,MAAnDknB,EAAqBtyB,OAAOoL,EAAWpN,SAClLy0B,EAAc,CAChBF,WACAC,YACA3C,mBAEE6C,EAAcH,EAAWP,OAAkB7yB,EAG7C8yB,EAD2B,mBAAlBC,EACGA,EAAcO,GAOd,CAACP,EAAeK,EAAW,SAAW,KAAMC,EAAY,UAAY,KAAM3C,EAAkB,gBAAkB,MAAMhnB,OAAOmJ,SAASlV,KAAK,KAEvJ,IAAIqrB,EAA6B,mBAAdgK,EAA2BA,EAAUM,GAAeN,EACvE,OAAoB,gBAAoBd,GAAM,GAAS,CAAC,EAAGxpB,EAAM,CAC/D,eAAgB6qB,EAChBT,UAAWA,EACXX,IAAKA,EACLnJ,MAAOA,EACPzqB,GAAIA,EACJmgB,wBAAyBA,IACH,mBAAb3Y,EAA0BA,EAASutB,GAAevtB,EAC/D,IAUA,MAAMytB,GAAoB,cAAiB,CAACpK,EAAO+I,KACjD,IAAIsB,EAASC,KACb,OAAoB,gBAAoBC,GAAU,GAAS,CAAC,EAAGvK,EAAO,CACpEqK,OAAQA,EACRtB,IAAKA,IACJ,IAKL,MAAMwB,GAAwB,cAAiB,CAACC,EAAOC,KACrD,IAAI,eACAlY,EAAc,QACd7Z,EAAO,MACP/B,EAAK,OACLiZ,EAAS6V,GAAa,OACtB3uB,EAAM,SACN4zB,EAAQ,OACRL,EAAM,SACNlV,EAAQ,mBACR1J,EAAkB,wBAClB6J,GACEkV,EACJxK,EAAQsF,GAA8BkF,EAAO7D,IAC3C9d,EAAsC,QAAzB+G,EAAOpN,cAA0B,MAAQ,OACtDsG,EAAa6hB,GAAc7zB,EAAQ,CACrCqe,aAiBF,OAAoB,gBAAoB,OAAQ,GAAS,CACvD4T,IAAK0B,EACL7a,OAAQ/G,EACR/R,OAAQgS,EACR4hB,SAAUnY,EAAiBmY,EAnBTpB,IAElB,GADAoB,GAAYA,EAASpB,GACjBA,EAAMC,iBAAkB,OAC5BD,EAAMsB,iBACN,IAAIC,EAAYvB,EAAMwB,YAAYD,UAC9BE,GAA6B,MAAbF,OAAoB,EAASA,EAAUjxB,aAAa,gBAAkBgW,EAC1Fya,EAAOQ,GAAavB,EAAM0B,cAAe,CACvCpb,OAAQmb,EACRryB,UACA/B,QACAwe,WACA1J,qBACA6J,2BACA,GAOD0K,GAAO,IASZ,SAASiL,GAAkBC,GACzB,IAAI,OACFpW,EAAM,WACNqW,GACED,EAKJ,OAJAE,GAAqB,CACnBtW,SACAqW,eAEK,IACT,CAQA,IAAI,GAQA,GAQJ,SAAS,GAAqB9J,GAC5B,IAAIC,EAAM,aAAiB,IAE3B,OADCA,GAA6G,GAAiB,GACxHA,CACT,CACA,SAAS,GAAmBD,GAC1B,IAAI1qB,EAAQ,aAAiB,IAE7B,OADCA,GAA+G,GAAiB,GAC1HA,CACT,CAMA,SAAS0yB,GAAoBl0B,EAAIgd,GAC/B,IAAI,OACFpd,EACA2D,QAAS2yB,EAAW,MACpB10B,EAAK,mBACL8U,EAAkB,SAClB0J,EAAQ,wBACRG,QACY,IAAVnD,EAAmB,CAAC,EAAIA,EACxB4C,EAAWyI,KACXnmB,EAAW4lB,KACXhlB,EAAO8kB,GAAgB5nB,EAAI,CAC7BggB,aAEF,OAAO,eAAkBmU,IACvB,GA7zBJ,SAAgCA,EAAOv0B,GACrC,QAAwB,IAAjBu0B,EAAMgC,QAEZv2B,GAAqB,UAAXA,GANb,SAAyBu0B,GACvB,SAAUA,EAAMiC,SAAWjC,EAAMkC,QAAUlC,EAAMmC,SAAWnC,EAAMoC,SACpE,CAMGC,CAAgBrC,GAEnB,CAszBQsC,CAAuBtC,EAAOv0B,GAAS,CACzCu0B,EAAMsB,iBAGN,IAAIlyB,OAA0B9B,IAAhBy0B,EAA4BA,EAAcxzB,EAAWR,KAAcQ,EAAWI,GAC5F8c,EAAS5f,EAAI,CACXuD,UACA/B,QACA8U,qBACA0J,WACAG,2BAEJ,IACC,CAACje,EAAU0d,EAAU9c,EAAMozB,EAAa10B,EAAO5B,EAAQI,EAAIsW,EAAoB0J,EAAUG,GAC9F,CAKA,SAASuW,GAAgBC,GAEvB,IAAIC,EAAyB,SAAajG,GAAmBgG,IACzDE,EAAwB,UAAa,GACrC30B,EAAW4lB,KACXzF,EAAe,WAAc,IA/yBnC,SAAoCyU,EAAgBC,GAClD,IAAI1U,EAAesO,GAAmBmG,GAetC,OAdIC,GAMFA,EAAoBx3B,SAAQ,CAACoN,EAAGpM,KACzB8hB,EAAa/S,IAAI/O,IACpBw2B,EAAoBjQ,OAAOvmB,GAAKhB,SAAQwF,IACtCsd,EAAaU,OAAOxiB,EAAKwE,EAAM,GAEnC,IAGGsd,CACT,CAkyBE2U,CAA2B90B,EAASc,OAAQ6zB,EAAsBrxB,QAAU,KAAOoxB,EAAuBpxB,UAAU,CAACtD,EAASc,SAC1H4c,EAAWyI,KACX4O,EAAkB,eAAkB,CAACC,EAAUC,KACjD,MAAMC,EAAkBzG,GAAuC,mBAAbuG,EAA0BA,EAAS7U,GAAgB6U,GACrGL,EAAsBrxB,SAAU,EAChCoa,EAAS,IAAMwX,EAAiBD,EAAgB,GAC/C,CAACvX,EAAUyC,IACd,MAAO,CAACA,EAAc4U,EACxB,CACA,SAASI,KACP,GAAwB,oBAAb/yB,SACT,MAAM,IAAIW,MAAM,gHAEpB,CAKA,SAASkwB,KACP,IAAI,OACFtf,GACE,GAAqB,GAAeyhB,YACpC,SACFxvB,GACE,aAAiB,IACjByvB,EAAiB,KACrB,OAAO,eAAkB,SAAU33B,EAAQoB,QACzB,IAAZA,IACFA,EAAU,CAAC,GAEbq2B,KACA,IAAI,OACF11B,EAAM,OACN8Y,EAAM,QACNsW,EAAO,SACPld,EAAQ,KACRqO,GACE8O,GAAsBpxB,EAAQkI,GAClC+N,EAAO+J,SAAS5e,EAAQW,QAAUA,EAAQ,CACxC2U,mBAAoBtV,EAAQsV,mBAC5BzC,WACAqO,OACAxO,WAAY1S,EAAQyZ,QAAUA,EAC9B7G,YAAa5S,EAAQ+vB,SAAWA,EAChCxtB,QAASvC,EAAQuC,QACjB/B,MAAOR,EAAQQ,MACfue,YAAawX,EACbpX,wBAAyBnf,EAAQmf,yBAErC,GAAG,CAACtK,EAAQ/N,EAAUyvB,GACxB,CAIA,SAASC,GAAiBhb,EAAYib,GACpC,IAAI,OACF5hB,GACE,GAAqB,GAAe6hB,mBACpC,SACF5vB,GACE,aAAiB,IACrB,OAAO,eAAkB,SAAUlI,EAAQoB,QACzB,IAAZA,IACFA,EAAU,CAAC,GAEbq2B,KACA,IAAI,OACF11B,EAAM,OACN8Y,EAAM,QACNsW,EAAO,SACPld,EAAQ,KACRqO,GACE8O,GAAsBpxB,EAAQkI,GACd,MAAlB2vB,GAAqI,GAAiB,GACxJ5hB,EAAOuK,MAAM5D,EAAYib,EAAgBz2B,EAAQW,QAAUA,EAAQ,CACjE2U,mBAAoBtV,EAAQsV,mBAC5BzC,WACAqO,OACAxO,WAAY1S,EAAQyZ,QAAUA,EAC9B7G,YAAa5S,EAAQ+vB,SAAWA,GAEpC,GAAG,CAAClb,EAAQ/N,EAAU0U,EAAYib,GACpC,CAGA,SAASjC,GAAc7zB,EAAQ2nB,GAC7B,IAAI,SACFtJ,QACa,IAAXsJ,EAAoB,CAAC,EAAIA,GACzB,SACFxhB,GACE,aAAiB,IACjBsjB,EAAe,aAAiB,IACnCA,GAAqI,GAAiB,GACvJ,IAAKniB,GAASmiB,EAAaviB,QAAQhE,OAAO,GAGtC/B,EAAO,GAAS,CAAC,EAAG8kB,GAAgBjmB,GAAkB,IAAK,CAC7Dqe,cAOE9d,EAAW4lB,KACf,GAAc,MAAVnmB,IAGFmB,EAAKE,OAASd,EAASc,OAInBiG,EAAM5B,MAAM/F,OAAO,CACrB,IAAI6H,EAAS,IAAIwZ,gBAAgB7f,EAAKE,QACtCmG,EAAOmI,OAAO,SACdxO,EAAKE,OAASmG,EAAOzD,WAAa,IAAMyD,EAAOzD,WAAa,EAC9D,CAYF,OAVM/D,GAAqB,MAAXA,IAAmBsH,EAAM5B,MAAM/F,QAC7CwB,EAAKE,OAASF,EAAKE,OAASF,EAAKE,OAAOO,QAAQ,MAAO,WAAa,UAMrD,MAAbuE,IACFhF,EAAKV,SAA6B,MAAlBU,EAAKV,SAAmB0F,EAAW4B,EAAU,CAAC5B,EAAUhF,EAAKV,YAExEM,EAAWI,EACpB,EA3MA,SAAWylB,GACTA,EAAqC,qBAAI,uBACzCA,EAA0B,UAAI,YAC9BA,EAAiC,iBAAI,mBACrCA,EAA2B,WAAI,aAC/BA,EAAuC,uBAAI,wBAC5C,EAND,CAMG,KAAmB,GAAiB,CAAC,IAExC,SAAWG,GACTA,EAAiC,YAAI,cACrCA,EAA0C,qBAAI,sBAC/C,CAHD,CAGG,KAAwB,GAAsB,CAAC,IA8MlD,IAAIiP,GAAY,EAMhB,SAASC,KACP,IAAIC,EACJ,IAAI,OACFhiB,GACE,GAAqB,GAAeiiB,YACpCzwB,EAAQ,aAAiB,IAC5BA,GAA2H,GAAiB,GAC7I,IAAIqT,EAAwE,OAA7Dmd,EAAiBxwB,EAAMwB,QAAQxB,EAAMwB,QAAQvI,OAAS,SAAc,EAASu3B,EAAexwB,MAAME,GACpG,MAAXmT,GAA2J,GAAiB,GAC9K,IAAK8B,GAAc,YAAe,IAAM3d,SAAS84B,OAC5C1C,GAAQ,YAAe,KACzBva,GAAuH,GAAiB,GA9B7I,SAA2B8B,EAAY9B,GAWrC,OAV+B,cAAiB,CAACmQ,EAAO+I,KACtD,IAAIsB,EAASsC,GAAiBhb,EAAY9B,GAC1C,OAAoB,gBAAoB0a,GAAU,GAAS,CAAC,EAAGvK,EAAO,CACpE+I,IAAKA,EACLsB,OAAQA,IACP,GAMP,CAmBW6C,CAAkBvb,EAAY9B,OAElCsd,GAAQ,YAAe,IAAMxzB,IAC/BqR,GAAqH,GAAiB,GACtI6E,GAAuH,GAAiB,GACzI7E,EAAOuK,MAAM5D,EAAY9B,EAASlW,EAAK,IAErC0wB,EAASsC,GAAiBhb,EAAY9B,GACtCmB,EAAUhG,EAAOkH,WAAWP,GAC5Byb,EAAwB,WAAc,IAAM,GAAS,CACvDhD,OACAC,SACA8C,QACCnc,IAAU,CAACA,EAASoZ,EAAMC,EAAQ8C,IAarC,OAZA,aAAgB,IAIP,KACAniB,EAILA,EAAO8H,cAAcnB,GAHnBrX,QAAQC,KAAK,oDAGiB,GAEjC,CAACyQ,EAAQ2G,IACLyb,CACT,CAKA,SAASC,KAEP,MAAO,IADK,GAAmB,GAAoBC,aAClCzhB,SAAS0M,SAC5B,CACA,MAAMgV,GAAiC,gCACvC,IAAIhjB,GAAuB,CAAC,EAI5B,SAAS6gB,GAAqBoC,GAC5B,IAAI,OACF1Y,EAAM,WACNqW,QACa,IAAXqC,EAAoB,CAAC,EAAIA,GACzB,OACFxiB,GACE,GAAqB,GAAeyiB,uBACpC,sBACFjiB,EAAqB,mBACrBC,GACE,GAAmB,GAAoBgiB,uBACvC,SACFxwB,GACE,aAAiB,IACjB5F,EAAW4lB,KACXjf,EAAUgkB,KACVzW,EAAaqW,KAEjB,aAAgB,KACd1oB,OAAOkC,QAAQsyB,kBAAoB,SAC5B,KACLx0B,OAAOkC,QAAQsyB,kBAAoB,MAAM,IAE1C,IAgGL,SAAqBC,EAAUx3B,GAC7B,IAAI,QACFy3B,GACEz3B,GAAW,CAAC,EAChB,aAAgB,KACd,IAAIgY,EAAkB,MAAXyf,EAAkB,CAC3BA,gBACEh3B,EAEJ,OADAsC,OAAOuC,iBAAiB,WAAYkyB,EAAUxf,GACvC,KACLjV,OAAOwC,oBAAoB,WAAYiyB,EAAUxf,EAAK,CACvD,GACA,CAACwf,EAAUC,GAChB,CA3GEC,CAAY,eAAkB,KAC5B,GAAyB,SAArBtiB,EAAW5U,MAAkB,CAC/B,IAAIjB,GAAOof,EAASA,EAAOzd,EAAU2G,GAAW,OAAS3G,EAAS3B,IAClE6U,GAAqB7U,GAAOwD,OAAO40B,OACrC,CACA,IACE1Z,eAAeK,QAAQ0W,GAAcoC,GAAgC71B,KAAKC,UAAU4S,IACtF,CAAE,MAAO1O,GAET,CACA3C,OAAOkC,QAAQsyB,kBAAoB,MAAM,GACxC,CAACvC,EAAYrW,EAAQvJ,EAAW5U,MAAOU,EAAU2G,KAE5B,oBAAbvE,WAET,mBAAsB,KACpB,IACE,IAAI0a,EAAmBC,eAAeC,QAAQ8W,GAAcoC,IACxDpZ,IACF5J,GAAuB7S,KAAK4c,MAAMH,GAEtC,CAAE,MAAO3Z,GAET,IACC,CAAC2wB,IAGJ,mBAAsB,KACpB,IAAI4C,EAAwBjZ,GAAuB,MAAb7X,EAAmB,CAAC5F,EAAU2G,IAAY8W,EAChF,GAAS,CAAC,EAAGzd,EAAU,CACrBE,SAAU2F,EAAc7F,EAASE,SAAU0F,IAAa5F,EAASE,WAC/DyG,GAAW8W,EACXkZ,EAAqC,MAAVhjB,OAAiB,EAASA,EAAO2J,wBAAwBpK,IAAsB,IAAMrR,OAAO40B,SAASC,GACpI,MAAO,IAAMC,GAA4BA,GAA0B,GAClE,CAAChjB,EAAQ/N,EAAU6X,IAGtB,mBAAsB,KAEpB,IAA8B,IAA1BtJ,EAIJ,GAAqC,iBAA1BA,EAAX,CAKA,GAAInU,EAASe,KAAM,CACjB,IAAI61B,EAAKx0B,SAASy0B,eAAe7rB,mBAAmBhL,EAASe,KAAK4B,MAAM,KACxE,GAAIi0B,EAEF,YADAA,EAAGE,gBAGP,EAE2B,IAAvB1iB,GAIJvS,OAAOk1B,SAAS,EAAG,EAdnB,MAFEl1B,OAAOk1B,SAAS,EAAG5iB,EAgBA,GACpB,CAACnU,EAAUmU,EAAuBC,IAEzC,CASA,SAAS4iB,GAAgBV,EAAUx3B,GACjC,IAAI,QACFy3B,GACEz3B,GAAW,CAAC,EAChB,aAAgB,KACd,IAAIgY,EAAkB,MAAXyf,EAAkB,CAC3BA,gBACEh3B,EAEJ,OADAsC,OAAOuC,iBAAiB,eAAgBkyB,EAAUxf,GAC3C,KACLjV,OAAOwC,oBAAoB,eAAgBiyB,EAAUxf,EAAK,CAC3D,GACA,CAACwf,EAAUC,GAChB,CA+BA,SAASU,GAAUC,GACjB,IAAI,KACFC,EAAI,QACJr0B,GACEo0B,EACA/a,EAAU,GAAoBgb,GAClC,aAAgB,KACd,GAAsB,YAAlBhb,EAAQ7c,MAAqB,CACjBuC,OAAOu1B,QAAQt0B,GAK3Bu0B,WAAWlb,EAAQpK,QAAS,GAE5BoK,EAAQnK,OAEZ,IACC,CAACmK,EAASrZ,IACb,aAAgB,KACQ,YAAlBqZ,EAAQ7c,OAAwB63B,GAClChb,EAAQnK,OACV,GACC,CAACmK,EAASgb,GACf,CASA,SAAS1E,GAAuB30B,EAAIgZ,QACrB,IAATA,IACFA,EAAO,CAAC,GAEV,IAAIyZ,EAAY,aAAiBP,IAClB,MAAbO,GAA+P,GAAiB,GAClR,IAAI,SACF3qB,GACE,GAAqB,GAAe6sB,wBACpC7xB,EAAO8kB,GAAgB5nB,EAAI,CAC7BggB,SAAUhH,EAAKgH,WAEjB,IAAKyS,EAAUN,gBACb,OAAO,EAET,IAAI5N,EAAcxc,EAAc0qB,EAAU9Z,gBAAgBvW,SAAU0F,IAAa2qB,EAAU9Z,gBAAgBvW,SACvGo3B,EAAWzxB,EAAc0qB,EAAUrvB,aAAahB,SAAU0F,IAAa2qB,EAAUrvB,aAAahB,SAclG,OAA6C,MAAtCwJ,EAAU9I,EAAKV,SAAUo3B,IAA8D,MAAzC5tB,EAAU9I,EAAKV,SAAUmiB,EAChF,kBCryCa,IAAIkV,EAAE,EAAQ,MAAiBt6B,EAAE,MAAM+M,EAAE,MAAMxN,EAAQg7B,SAAS,MAAMh7B,EAAQi7B,WAAW,MAAMj7B,EAAQk7B,SAAS,MAAM,IAAIC,EAAE,MAAMzpB,EAAE,MAAM0pB,EAAE,MAAMp7B,EAAQq7B,SAAS,MAAM,IAAIC,EAAE,MAAMloB,EAAE,MACpM,GAAG,mBAAoB6P,QAAQA,OAAOsY,IAAI,CAAC,IAAIC,EAAEvY,OAAOsY,IAAI96B,EAAE+6B,EAAE,iBAAiBhuB,EAAEguB,EAAE,gBAAgBx7B,EAAQg7B,SAASQ,EAAE,kBAAkBx7B,EAAQi7B,WAAWO,EAAE,qBAAqBx7B,EAAQk7B,SAASM,EAAE,kBAAkBL,EAAEK,EAAE,kBAAkB9pB,EAAE8pB,EAAE,iBAAiBJ,EAAEI,EAAE,qBAAqBx7B,EAAQq7B,SAASG,EAAE,kBAAkBF,EAAEE,EAAE,cAAcpoB,EAAEooB,EAAE,aAAa,CAAC,IAAIC,EAAE,mBAAoBxY,QAAQA,OAAOyY,SACtR,SAASC,EAAElyB,GAAG,IAAI,IAAIC,EAAE,yDAAyDD,EAAEmyB,EAAE,EAAEA,EAAEj6B,UAAUC,OAAOg6B,IAAIlyB,GAAG,WAAWmyB,mBAAmBl6B,UAAUi6B,IAAI,MAAM,yBAAyBnyB,EAAE,WAAWC,EAAE,gHAAgH,CACpb,IAAIoyB,EAAE,CAACC,UAAU,WAAW,OAAM,CAAE,EAAEC,mBAAmB,WAAW,EAAEC,oBAAoB,WAAW,EAAEC,gBAAgB,WAAW,GAAGC,EAAE,CAAC,EAAE,SAASC,EAAE3yB,EAAEC,EAAEkyB,GAAGz5B,KAAKgqB,MAAM1iB,EAAEtH,KAAKwkB,QAAQjd,EAAEvH,KAAKk6B,KAAKF,EAAEh6B,KAAKm6B,QAAQV,GAAGE,CAAC,CACrN,SAASS,IAAI,CAAyB,SAASC,EAAE/yB,EAAEC,EAAEkyB,GAAGz5B,KAAKgqB,MAAM1iB,EAAEtH,KAAKwkB,QAAQjd,EAAEvH,KAAKk6B,KAAKF,EAAEh6B,KAAKm6B,QAAQV,GAAGE,CAAC,CADqGM,EAAEx8B,UAAU68B,iBAAiB,CAAC,EAAEL,EAAEx8B,UAAU6vB,SAAS,SAAShmB,EAAEC,GAAG,GAAG,iBAAkBD,GAAG,mBAAoBA,GAAG,MAAMA,EAAE,MAAMlD,MAAMo1B,EAAE,KAAKx5B,KAAKm6B,QAAQJ,gBAAgB/5B,KAAKsH,EAAEC,EAAE,WAAW,EAAE0yB,EAAEx8B,UAAU88B,YAAY,SAASjzB,GAAGtH,KAAKm6B,QAAQN,mBAAmB75B,KAAKsH,EAAE,cAAc,EACje8yB,EAAE38B,UAAUw8B,EAAEx8B,UAAsF,IAAI+8B,EAAEH,EAAE58B,UAAU,IAAI28B,EAAEI,EAAE1rB,YAAYurB,EAAEzB,EAAE4B,EAAEP,EAAEx8B,WAAW+8B,EAAEC,sBAAqB,EAAG,IAAIC,EAAE,CAAC/1B,QAAQ,MAAMg2B,EAAEp9B,OAAOE,UAAUD,eAAeo9B,EAAE,CAACl7B,KAAI,EAAGqzB,KAAI,EAAG8H,QAAO,EAAGC,UAAS,GAChS,SAASC,EAAEzzB,EAAEC,EAAEkyB,GAAG,IAAIj1B,EAAEw2B,EAAE,CAAC,EAAE9pB,EAAE,KAAK+pB,EAAE,KAAK,GAAG,MAAM1zB,EAAE,IAAI/C,UAAK,IAAS+C,EAAEwrB,MAAMkI,EAAE1zB,EAAEwrB,UAAK,IAASxrB,EAAE7H,MAAMwR,EAAE,GAAG3J,EAAE7H,KAAK6H,EAAEozB,EAAEh7B,KAAK4H,EAAE/C,KAAKo2B,EAAEp9B,eAAegH,KAAKw2B,EAAEx2B,GAAG+C,EAAE/C,IAAI,IAAI02B,EAAE17B,UAAUC,OAAO,EAAE,GAAG,IAAIy7B,EAAEF,EAAEr0B,SAAS8yB,OAAO,GAAG,EAAEyB,EAAE,CAAC,IAAI,IAAI7f,EAAElM,MAAM+rB,GAAG/lB,EAAE,EAAEA,EAAE+lB,EAAE/lB,IAAIkG,EAAElG,GAAG3V,UAAU2V,EAAE,GAAG6lB,EAAEr0B,SAAS0U,CAAC,CAAC,GAAG/T,GAAGA,EAAE6zB,aAAa,IAAI32B,KAAK02B,EAAE5zB,EAAE6zB,kBAAe,IAASH,EAAEx2B,KAAKw2B,EAAEx2B,GAAG02B,EAAE12B,IAAI,MAAM,CAAC42B,SAAS98B,EAAEqb,KAAKrS,EAAE5H,IAAIwR,EAAE6hB,IAAIkI,EAAEjR,MAAMgR,EAAEK,OAAOX,EAAE/1B,QAAQ,CAChV,SAAS22B,EAAEh0B,GAAG,MAAM,iBAAkBA,GAAG,OAAOA,GAAGA,EAAE8zB,WAAW98B,CAAC,CAAoG,IAAIi9B,EAAE,OAAO,SAASC,EAAEl0B,EAAEC,GAAG,MAAM,iBAAkBD,GAAG,OAAOA,GAAG,MAAMA,EAAE5H,IAA7K,SAAgB4H,GAAG,IAAIC,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAID,EAAE5E,QAAQ,SAAQ,SAAS4E,GAAG,OAAOC,EAAED,EAAE,GAAE,CAA+Em0B,CAAO,GAAGn0B,EAAE5H,KAAK6H,EAAE1C,SAAS,GAAG,CAC/W,SAAS62B,EAAEp0B,EAAEC,EAAEkyB,EAAEj1B,EAAEw2B,GAAG,IAAI9pB,SAAS5J,EAAK,cAAc4J,GAAG,YAAYA,IAAE5J,EAAE,MAAK,IAAI2zB,GAAE,EAAG,GAAG,OAAO3zB,EAAE2zB,GAAE,OAAQ,OAAO/pB,GAAG,IAAK,SAAS,IAAK,SAAS+pB,GAAE,EAAG,MAAM,IAAK,SAAS,OAAO3zB,EAAE8zB,UAAU,KAAK98B,EAAE,KAAK+M,EAAE4vB,GAAE,GAAI,GAAGA,EAAE,OAAWD,EAAEA,EAANC,EAAE3zB,GAASA,EAAE,KAAK9C,EAAE,IAAIg3B,EAAEP,EAAE,GAAGz2B,EAAE2K,MAAMC,QAAQ4rB,IAAIvB,EAAE,GAAG,MAAMnyB,IAAImyB,EAAEnyB,EAAE5E,QAAQ64B,EAAE,OAAO,KAAKG,EAAEV,EAAEzzB,EAAEkyB,EAAE,IAAG,SAASnyB,GAAG,OAAOA,CAAC,KAAI,MAAM0zB,IAAIM,EAAEN,KAAKA,EAD/W,SAAW1zB,EAAEC,GAAG,MAAM,CAAC6zB,SAAS98B,EAAEqb,KAAKrS,EAAEqS,KAAKja,IAAI6H,EAAEwrB,IAAIzrB,EAAEyrB,IAAI/I,MAAM1iB,EAAE0iB,MAAMqR,OAAO/zB,EAAE+zB,OAAO,CACqRM,CAAEX,EAAEvB,IAAIuB,EAAEt7B,KAAKu7B,GAAGA,EAAEv7B,MAAMs7B,EAAEt7B,IAAI,IAAI,GAAGs7B,EAAEt7B,KAAKgD,QAAQ64B,EAAE,OAAO,KAAKj0B,IAAIC,EAAElF,KAAK24B,IAAI,EAAyB,GAAvBC,EAAE,EAAEz2B,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAO2K,MAAMC,QAAQ9H,GAAG,IAAI,IAAI4zB,EACzf,EAAEA,EAAE5zB,EAAE7H,OAAOy7B,IAAI,CAAQ,IAAI7f,EAAE7W,EAAEg3B,EAAftqB,EAAE5J,EAAE4zB,GAAeA,GAAGD,GAAGS,EAAExqB,EAAE3J,EAAEkyB,EAAEpe,EAAE2f,EAAE,MAAM,GAAG3f,EANhE,SAAW/T,GAAG,OAAG,OAAOA,GAAG,iBAAkBA,EAAS,KAAsC,mBAAjCA,EAAEgyB,GAAGhyB,EAAEgyB,IAAIhyB,EAAE,eAA0CA,EAAE,IAAI,CAMtDyW,CAAEzW,GAAG,mBAAoB+T,EAAE,IAAI/T,EAAE+T,EAAE1b,KAAK2H,GAAG4zB,EAAE,IAAIhqB,EAAE5J,EAAEs0B,QAAQ7rB,MAA6BkrB,GAAGS,EAA1BxqB,EAAEA,EAAEhN,MAA0BqD,EAAEkyB,EAAtBpe,EAAE7W,EAAEg3B,EAAEtqB,EAAEgqB,KAAkBF,QAAQ,GAAG,WAAW9pB,EAAE,MAAM3J,EAAE,GAAGD,EAAElD,MAAMo1B,EAAE,GAAG,oBAAoBjyB,EAAE,qBAAqBhK,OAAOqB,KAAK0I,GAAG/I,KAAK,MAAM,IAAIgJ,IAAI,OAAO0zB,CAAC,CAAC,SAASY,EAAEv0B,EAAEC,EAAEkyB,GAAG,GAAG,MAAMnyB,EAAE,OAAOA,EAAE,IAAI9C,EAAE,GAAGw2B,EAAE,EAAmD,OAAjDU,EAAEp0B,EAAE9C,EAAE,GAAG,IAAG,SAAS8C,GAAG,OAAOC,EAAE5H,KAAK85B,EAAEnyB,EAAE0zB,IAAI,IAAUx2B,CAAC,CAC3Z,SAASs3B,EAAEx0B,GAAG,IAAI,IAAIA,EAAEy0B,QAAQ,CAAC,IAAIx0B,EAAED,EAAE00B,QAAQz0B,EAAEA,IAAID,EAAEy0B,QAAQ,EAAEz0B,EAAE00B,QAAQz0B,EAAEA,EAAE4I,MAAK,SAAS5I,GAAG,IAAID,EAAEy0B,UAAUx0B,EAAEA,EAAE00B,QAAQ30B,EAAEy0B,QAAQ,EAAEz0B,EAAE00B,QAAQz0B,EAAE,IAAE,SAASA,GAAG,IAAID,EAAEy0B,UAAUz0B,EAAEy0B,QAAQ,EAAEz0B,EAAE00B,QAAQz0B,EAAE,GAAE,CAAC,GAAG,IAAID,EAAEy0B,QAAQ,OAAOz0B,EAAE00B,QAAQ,MAAM10B,EAAE00B,OAAQ,CAAC,IAAIE,EAAE,CAACv3B,QAAQ,MAAM,SAASw3B,IAAI,IAAI70B,EAAE40B,EAAEv3B,QAAQ,GAAG,OAAO2C,EAAE,MAAMlD,MAAMo1B,EAAE,MAAM,OAAOlyB,CAAC,CAAC,IAAI80B,EAAE,CAACC,uBAAuBH,EAAEI,wBAAwB,CAACtK,WAAW,GAAGuK,kBAAkB7B,EAAE8B,qBAAqB,CAAC73B,SAAQ,GAAI7G,OAAO86B,GACje/6B,EAAQ4+B,SAAS,CAACp+B,IAAIw9B,EAAEn9B,QAAQ,SAAS4I,EAAEC,EAAEkyB,GAAGoC,EAAEv0B,GAAE,WAAWC,EAAExH,MAAMC,KAAKR,UAAU,GAAEi6B,EAAE,EAAEiD,MAAM,SAASp1B,GAAG,IAAIC,EAAE,EAAuB,OAArBs0B,EAAEv0B,GAAE,WAAWC,GAAG,IAAUA,CAAC,EAAEo1B,QAAQ,SAASr1B,GAAG,OAAOu0B,EAAEv0B,GAAE,SAASA,GAAG,OAAOA,CAAC,KAAI,EAAE,EAAEs1B,KAAK,SAASt1B,GAAG,IAAIg0B,EAAEh0B,GAAG,MAAMlD,MAAMo1B,EAAE,MAAM,OAAOlyB,CAAC,GAAGzJ,EAAQstB,UAAU8O,EAAEp8B,EAAQg/B,cAAcxC,EAAEx8B,EAAQi/B,mDAAmDV,EAChXv+B,EAAQk/B,aAAa,SAASz1B,EAAEC,EAAEkyB,GAAG,GAAG,MAAOnyB,EAAc,MAAMlD,MAAMo1B,EAAE,IAAIlyB,IAAI,IAAI9C,EAAEo0B,EAAE,CAAC,EAAEtxB,EAAE0iB,OAAOgR,EAAE1zB,EAAE5H,IAAIwR,EAAE5J,EAAEyrB,IAAIkI,EAAE3zB,EAAE+zB,OAAO,GAAG,MAAM9zB,EAAE,CAAoE,QAAnE,IAASA,EAAEwrB,MAAM7hB,EAAE3J,EAAEwrB,IAAIkI,EAAEP,EAAE/1B,cAAS,IAAS4C,EAAE7H,MAAMs7B,EAAE,GAAGzzB,EAAE7H,KAAQ4H,EAAEqS,MAAMrS,EAAEqS,KAAKwhB,aAAa,IAAID,EAAE5zB,EAAEqS,KAAKwhB,aAAa,IAAI9f,KAAK9T,EAAEozB,EAAEh7B,KAAK4H,EAAE8T,KAAKuf,EAAEp9B,eAAe6d,KAAK7W,EAAE6W,QAAG,IAAS9T,EAAE8T,SAAI,IAAS6f,EAAEA,EAAE7f,GAAG9T,EAAE8T,GAAG,CAAC,IAAIA,EAAE7b,UAAUC,OAAO,EAAE,GAAG,IAAI4b,EAAE7W,EAAEmC,SAAS8yB,OAAO,GAAG,EAAEpe,EAAE,CAAC6f,EAAE/rB,MAAMkM,GAAG,IAAI,IAAIlG,EAAE,EAAEA,EAAEkG,EAAElG,IAAI+lB,EAAE/lB,GAAG3V,UAAU2V,EAAE,GAAG3Q,EAAEmC,SAASu0B,CAAC,CAAC,MAAM,CAACE,SAAS98B,EAAEqb,KAAKrS,EAAEqS,KACxfja,IAAIs7B,EAAEjI,IAAI7hB,EAAE8Y,MAAMxlB,EAAE62B,OAAOJ,EAAE,EAAEp9B,EAAQm/B,cAAc,SAAS11B,EAAEC,GAA8K,YAA3K,IAASA,IAAIA,EAAE,OAAMD,EAAE,CAAC8zB,SAAS7rB,EAAE0tB,sBAAsB11B,EAAE21B,cAAc51B,EAAE61B,eAAe71B,EAAE81B,aAAa,EAAE9U,SAAS,KAAK+U,SAAS,OAAQ/U,SAAS,CAAC8S,SAASpC,EAAEsE,SAASh2B,GAAUA,EAAE+1B,SAAS/1B,CAAC,EAAEzJ,EAAQiW,cAAcinB,EAAEl9B,EAAQ0/B,cAAc,SAASj2B,GAAG,IAAIC,EAAEwzB,EAAEj7B,KAAK,KAAKwH,GAAY,OAATC,EAAEoS,KAAKrS,EAASC,CAAC,EAAE1J,EAAQ2/B,UAAU,WAAW,MAAM,CAAC74B,QAAQ,KAAK,EAAE9G,EAAQ4/B,WAAW,SAASn2B,GAAG,MAAM,CAAC8zB,SAASnC,EAAE3O,OAAOhjB,EAAE,EAAEzJ,EAAQ6/B,eAAepC,EAC3ez9B,EAAQuX,KAAK,SAAS9N,GAAG,MAAM,CAAC8zB,SAASnqB,EAAE0sB,SAAS,CAAC5B,SAAS,EAAEC,QAAQ10B,GAAGs2B,MAAM9B,EAAE,EAAEj+B,EAAQsO,KAAK,SAAS7E,EAAEC,GAAG,MAAM,CAAC6zB,SAASjC,EAAExf,KAAKrS,EAAEu2B,aAAQ,IAASt2B,EAAE,KAAKA,EAAE,EAAE1J,EAAQigC,YAAY,SAASx2B,EAAEC,GAAG,OAAO40B,IAAI2B,YAAYx2B,EAAEC,EAAE,EAAE1J,EAAQkgC,WAAW,SAASz2B,EAAEC,GAAG,OAAO40B,IAAI4B,WAAWz2B,EAAEC,EAAE,EAAE1J,EAAQmgC,cAAc,WAAW,EAAEngC,EAAQogC,UAAU,SAAS32B,EAAEC,GAAG,OAAO40B,IAAI8B,UAAU32B,EAAEC,EAAE,EAAE1J,EAAQqgC,oBAAoB,SAAS52B,EAAEC,EAAEkyB,GAAG,OAAO0C,IAAI+B,oBAAoB52B,EAAEC,EAAEkyB,EAAE,EAChd57B,EAAQsgC,gBAAgB,SAAS72B,EAAEC,GAAG,OAAO40B,IAAIgC,gBAAgB72B,EAAEC,EAAE,EAAE1J,EAAQugC,QAAQ,SAAS92B,EAAEC,GAAG,OAAO40B,IAAIiC,QAAQ92B,EAAEC,EAAE,EAAE1J,EAAQwgC,WAAW,SAAS/2B,EAAEC,EAAEkyB,GAAG,OAAO0C,IAAIkC,WAAW/2B,EAAEC,EAAEkyB,EAAE,EAAE57B,EAAQygC,OAAO,SAASh3B,GAAG,OAAO60B,IAAImC,OAAOh3B,EAAE,EAAEzJ,EAAQ0gC,SAAS,SAASj3B,GAAG,OAAO60B,IAAIoC,SAASj3B,EAAE,EAAEzJ,EAAQ2gC,QAAQ,yBCnBnT5gC,EAAOC,QAAU,EAAjB,qtBCHF,iBAKA,UAoGA,UAnGc,SAACmsB,GACb,IAAIjL,GAAW,IAAAyI,eACfljB,QAAQm6B,IAAI,SACN,OAAsB,IAAAF,UAAS,IAA9BG,EAAM,KACP,GADkB,MACQ,IAAAH,UAAS,KAAlCI,EAAQ,KAAEC,EAAW,KACtB,GAA0B,IAAAL,UAAS,IAAlCM,EAAQ,KAAEC,EAAW,KACtB,GAAoB,IAAAP,WAAS,GAArBQ,GAAF,KAAU,MAChB,GAAkC,IAAAR,UAAS,IAA9B,KAAiB,KAwDpC,OAAQ,+BAAK7K,UAAU,aACnB,+BAAKA,UAAU,YACb,8BAAIA,UAAU,gBAAc,UAE9B,oCACE,+BAAKA,UAAU,YACb,iDAEE,iCACE/Z,KAAK,OACL5T,KAAK,WACLi5B,SAAU,SAACx6B,GAAI,OAhEJ,SAACA,GACtBo6B,EAAYp6B,EACd,CA8D2By6B,CAAgB3L,MAAMv0B,OAA4BmF,MAAlD,MAIrB,+BAAKwvB,UAAU,YACb,iDAEE,iCACE/Z,KAAK,WACL5T,KAAK,WAEJi5B,SAAU,SAACx6B,GAAI,OAxEL,SAACA,GACtBs6B,EAAYt6B,EACd,CAsE4B06B,CAAgB5L,MAAMv0B,OAA4BmF,MAAlD,OAKxB,+BAAKwvB,UAAU,YACb,kCAAQT,QAAS,WAAM,OApDT,WAClB3uB,QAAQm6B,IAAI,SACZ,IAAMU,EAAiB,CACrBvlB,OAAQ,OACRrL,QAAS,CAAE,eAAgB,oBAC3B8S,KAAM3f,KAAKC,UAAU,CAAC,CAAEg9B,SAAUA,EAAUE,SAAUA,MAGxDtf,MAAM,wCAAyC4f,GAC5ChvB,MAAK,SAACivB,GAAQ,OAAAA,EAAIjxB,MAAJ,IACdgC,MAAK,SAACkvB,GACDA,EAAKrQ,UACP1qB,QAAQm6B,IAAIY,GACZrV,EAAMsV,eAAeD,EAAKX,QAE1Bp6B,QAAQm6B,IAAIC,GACZK,GAAS,GACThgB,EAAS,gBAEb,GACJ,CAgC6BwgB,EAAA,GAAa,SACpC,kCAAQtM,QAAS,WAAM,OA5EA3uB,QAAQm6B,IAAI,cACzC1f,EAAS,UA2EoB,GAAc,YAK7C,ICtGIygB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB9+B,IAAjB++B,EACH,OAAOA,EAAa9hC,QAGrB,IAAID,EAAS4hC,EAAyBE,GAAY,CACjDh5B,GAAIg5B,EAEJ7hC,QAAS,CAAC,GAOX,OAHA+hC,EAAoBF,GAAU//B,KAAK/B,EAAOC,QAASD,EAAQA,EAAOC,QAAS4hC,GAGpE7hC,EAAOC,OACf,CAGA4hC,EAAoBtqB,EAAIyqB,ETzBpBziC,EAAW,GACfsiC,EAAoB/D,EAAI,CAAC/xB,EAAQk2B,EAAU98B,EAAI+8B,KAC9C,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAAS7hC,EAAI,EAAGA,EAAIhB,EAASsC,OAAQtB,IAAK,CAGzC,IAFA,IAAK0hC,EAAU98B,EAAI+8B,GAAY3iC,EAASgB,GACpC8hC,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAASpgC,OAAQygC,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaviC,OAAOqB,KAAK6gC,EAAoB/D,GAAGh0B,OAAOhI,GAAS+/B,EAAoB/D,EAAEh8B,GAAKmgC,EAASK,MAC9IL,EAASr9B,OAAO09B,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACb9iC,EAASqF,OAAOrE,IAAK,GACrB,IAAIoR,EAAIxM,SACEnC,IAAN2O,IAAiB5F,EAAS4F,EAC/B,CACD,CACA,OAAO5F,CAnBP,CAJCm2B,EAAWA,GAAY,EACvB,IAAI,IAAI3hC,EAAIhB,EAASsC,OAAQtB,EAAI,GAAKhB,EAASgB,EAAI,GAAG,GAAK2hC,EAAU3hC,IAAKhB,EAASgB,GAAKhB,EAASgB,EAAI,GACrGhB,EAASgB,GAAK,CAAC0hC,EAAU98B,EAAI+8B,EAqBjB,EUzBdL,EAAoBnhC,EAAKV,IACxB,IAAIuiC,EAASviC,GAAUA,EAAOwiC,WAC7B,IAAOxiC,EAAiB,QACxB,IAAM,EAEP,OADA6hC,EAAoBzE,EAAEmF,EAAQ,CAAE74B,EAAG64B,IAC5BA,CAAM,ETNV9iC,EAAWE,OAAO8iC,eAAkBC,GAAS/iC,OAAO8iC,eAAeC,GAASA,GAASA,EAAa,UAQtGb,EAAoBxG,EAAI,SAAS/0B,EAAOq8B,GAEvC,GADU,EAAPA,IAAUr8B,EAAQlE,KAAKkE,IAChB,EAAPq8B,EAAU,OAAOr8B,EACpB,GAAoB,iBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPq8B,GAAar8B,EAAMk8B,WAAY,OAAOl8B,EAC1C,GAAW,GAAPq8B,GAAoC,mBAAfr8B,EAAMiM,KAAqB,OAAOjM,CAC5D,CACA,IAAIs8B,EAAKjjC,OAAOkjC,OAAO,MACvBhB,EAAoBlwB,EAAEixB,GACtB,IAAIE,EAAM,CAAC,EACXtjC,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIsH,EAAiB,EAAP47B,GAAYr8B,EAAyB,iBAAXS,KAAyBvH,EAAe2G,QAAQY,GAAUA,EAAUtH,EAASsH,GACxHpH,OAAOU,oBAAoB0G,GAASjG,SAASgB,GAASghC,EAAIhhC,GAAO,IAAOwE,EAAMxE,KAI/E,OAFAghC,EAAa,QAAI,IAAM,EACvBjB,EAAoBzE,EAAEwF,EAAIE,GACnBF,CACR,EUxBAf,EAAoBzE,EAAI,CAACn9B,EAAS8iC,KACjC,IAAI,IAAIjhC,KAAOihC,EACXlB,EAAoBmB,EAAED,EAAYjhC,KAAS+/B,EAAoBmB,EAAE/iC,EAAS6B,IAC5EnC,OAAO+S,eAAezS,EAAS6B,EAAK,CAAEmhC,YAAY,EAAMtwB,IAAKowB,EAAWjhC,IAE1E,ECND+/B,EAAoBvE,EAAI,WACvB,GAA0B,iBAAf4F,WAAyB,OAAOA,WAC3C,IACC,OAAO9gC,MAAQ,IAAI+gC,SAAS,cAAb,EAChB,CAAE,MAAOv8B,GACR,GAAsB,iBAAXtB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBu8B,EAAoBmB,EAAI,CAACN,EAAKU,IAAUzjC,OAAOE,UAAUD,eAAemC,KAAK2gC,EAAKU,GCClFvB,EAAoBlwB,EAAK1R,IACH,oBAAXijB,QAA0BA,OAAOmgB,aAC1C1jC,OAAO+S,eAAezS,EAASijB,OAAOmgB,YAAa,CAAE/8B,MAAO,WAE7D3G,OAAO+S,eAAezS,EAAS,aAAc,CAAEqG,OAAO,GAAO,QCL9D,IAAIg9B,EACAzB,EAAoBvE,EAAEiG,gBAAeD,EAAYzB,EAAoBvE,EAAE75B,SAAW,IACtF,IAAIoC,EAAWg8B,EAAoBvE,EAAEz3B,SACrC,IAAKy9B,GAAaz9B,IACbA,EAAS29B,gBACZF,EAAYz9B,EAAS29B,cAAcC,MAC/BH,GAAW,CACf,IAAII,EAAU79B,EAAS89B,qBAAqB,UAC5C,GAAGD,EAAQ7hC,OAEV,IADA,IAAItB,EAAImjC,EAAQ7hC,OAAS,EAClBtB,GAAK,IAAM+iC,GAAWA,EAAYI,EAAQnjC,KAAKkjC,GAExD,CAID,IAAKH,EAAW,MAAM,IAAI98B,MAAM,yDAChC88B,EAAYA,EAAUx+B,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF+8B,EAAoBp0B,EAAI61B,YCbxB,IAAIM,EAAkB,CACrB,IAAK,GAaN/B,EAAoB/D,EAAEwE,EAAKuB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4Bp5B,KACvD,IAGIm3B,EAAU+B,GAHT5B,EAAU+B,EAAaC,GAAWt5B,EAGhBpK,EAAI,EAC3B,GAAG0hC,EAASx1B,MAAM3D,GAAgC,IAAxB86B,EAAgB96B,KAAa,CACtD,IAAIg5B,KAAYkC,EACZnC,EAAoBmB,EAAEgB,EAAalC,KACrCD,EAAoBtqB,EAAEuqB,GAAYkC,EAAYlC,IAGhD,GAAGmC,EAAS,IAAIl4B,EAASk4B,EAAQpC,EAClC,CAEA,IADGkC,GAA4BA,EAA2Bp5B,GACrDpK,EAAI0hC,EAASpgC,OAAQtB,IACzBsjC,EAAU5B,EAAS1hC,GAChBshC,EAAoBmB,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOhC,EAAoB/D,EAAE/xB,EAAO,EAGjCm4B,EAAqBC,KAA6B,uBAAIA,KAA6B,wBAAK,GAC5FD,EAAmBpjC,QAAQgjC,EAAqB5hC,KAAK,KAAM,IAC3DgiC,EAAmBz/B,KAAOq/B,EAAqB5hC,KAAK,KAAMgiC,EAAmBz/B,KAAKvC,KAAKgiC,QChDvFrC,EAAoBuC,QAAKphC,ECGzB,IAAIqhC,EAAsBxC,EAAoB,MAC9CwC,EAAsBxC,EAAoB/D,EAAEuG","sources":["webpack://silly-page/webpack/runtime/chunk loaded","webpack://silly-page/webpack/runtime/create fake namespace object","webpack://silly-page/./node_modules/object-assign/index.js","webpack://silly-page/./node_modules/@remix-run/router/dist/router.js","webpack://silly-page/./node_modules/react-router/dist/index.js","webpack://silly-page/./node_modules/react-router-dom/dist/index.js","webpack://silly-page/./node_modules/react/cjs/react.production.min.js","webpack://silly-page/./node_modules/react/index.js","webpack://silly-page/./src/components/CustomGame/Login.tsx","webpack://silly-page/webpack/bootstrap","webpack://silly-page/webpack/runtime/compat get default export","webpack://silly-page/webpack/runtime/define property getters","webpack://silly-page/webpack/runtime/global","webpack://silly-page/webpack/runtime/hasOwnProperty shorthand","webpack://silly-page/webpack/runtime/make namespace object","webpack://silly-page/webpack/runtime/publicPath","webpack://silly-page/webpack/runtime/jsonp chunk loading","webpack://silly-page/webpack/runtime/nonce","webpack://silly-page/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * @remix-run/router v1.10.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, viewTransitionOpts) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state, {\n      unstable_viewTransitionOpts: viewTransitionOpts\n    }));\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), viewTransitionOpts);\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission\n        });\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined);\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true\n    });\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse = {\n        type: resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result\n      };\n      throw queryRouteResponse;\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.17.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.17.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    if (!viewTransitionOpts || router.window == null || typeof router.window.document.startViewTransition !== \"function\") {\n      // Mid-navigation state update, or startViewTransition isn't available\n      optInStartTransition(() => setStateImpl(newState));\n    } else if (transition && renderDfd) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [optInStartTransition, transition, renderDfd, router.window]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext.isTransitioning]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement)))), null);\n}\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId,\n      unstable_viewTransition: options.unstable_viewTransition\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref11) {\n  let {\n    when,\n    message\n  } = _ref11;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import React, { useState, createContext, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\r\n// import \"./customgame.css\";\r\nimport { Routes, BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport CreateGame  from \"./CreateGame\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Login = (props:any):any => {\r\n  let navigate = useNavigate();\r\n  console.log(\"Hello\")\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassWord] = useState(\"\");\r\n  const [login, setLogin] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  let user=\"\";\r\n  let pass=\"\";\r\n  const handleUserName = (e:string):void => {\r\n    setUserName(e)\r\n  };\r\n  const handlePassword = (e:string): any => {\r\n    setPassWord(e)\r\n  };\r\n  const handleSubmit = () => { console.log(\"Login\")\r\n  navigate(\"/signup\");\r\n    // const requestOptions = {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify([{ username: username, password: password }]),\r\n    // };\r\n    // fetch(\"https://apple-tart-39767.herokuapp.com/signup\", requestOptions)\r\n    //   .then((res) => res.json())\r\n    //   .then((res1) => {\r\n    //     if (res1.success) {\r\n    //       setLogin(true);\r\n    //       setUserId(res1.userId);\r\n    //       // let gameOptions = {\r\n    //       //   method: \"POST\",\r\n    //       //   headers: { \"Content-Type\": \"application/json\" },\r\n    //       //   body: JSON.stringify([{ userId: userId, gameName: \"firstGame\" }]),\r\n    //       // };\r\n    //     } else {\r\n    //       setErrorMessage(res1.errorMessage);\r\n    //     }\r\n    //   });\r\n  };\r\n  const handleLogin = () => {\r\n    console.log(\"Login\")\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify([{ username: username, password: password }]),\r\n    };\r\n\r\n    fetch(\"https://customgame.onrender.com/login\", requestOptions)\r\n      .then((res) => res.json())\r\n      .then((res1) => {\r\n        if (res1.success) {\r\n          console.log(res1);\r\n          props.addUserContent(res1.userId)\r\n          // setUserId(res1.userId);\r\n          console.log(userId);\r\n          setLogin(true);\r\n          navigate(\"/profilePage\")\r\n        }\r\n      });\r\n  };\r\n  // return login? (\r\n  //   <ProfilePage />\r\n  // ) : (\r\n  return (<div className=\"loginPage\">\r\n      <div className=\"upmargin\">\r\n        <h1 className=\"headingLogin\">Login</h1>\r\n      </div>\r\n      <form>\r\n        <div className=\"upmargin\">\r\n          <label>\r\n            Username:\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={(e)=>handleUserName((event.target as HTMLInputElement).value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"upmargin\">\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n\r\n               onChange={(e)=>handlePassword((event.target as HTMLInputElement).value)}\r\n            />\r\n          </label>\r\n        </div>\r\n      </form>\r\n      <div className=\"upmargin\">\r\n        <button onClick={() => handleLogin()}>Login</button>\r\n        <button onClick={() => handleSubmit()}>Sign Up</button>\r\n      </div>\r\n      {/* <h1>{errorMessage}</h1> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t712: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksilly_page\"] = self[\"webpackChunksilly_page\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6350);\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","module","exports","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","s","arguments","length","key","call","Action","_extends","bind","apply","this","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","Math","min","max","getCurrentLocation","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","getUrlBasedHistory","window","globalHistory","usr","createHashHistory","substr","startsWith","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","invariant","value","message","Error","cond","console","warn","e","getHistoryState","idx","current","random","toString","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","DOMException","name","ResultType","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","id","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","siblings","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","caseSensitive","joinPaths","concat","computeScore","_route$path","includes","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","generatePath","originalPath","prefix","p","array","keyMatch","optional","param","pattern","matcher","paramNames","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","DeferredData","constructor","reject","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","undefinedError","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","resolveData","resolve","size","unwrappedData","_ref2","unwrapTrackedPromise","pendingKeys","_tracked","isTrackedPromise","_error","_data","defer","redirect","redirectDocument","response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","viewTransitionOpts","unstable_viewTransitionOpts","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","mergeLoaderData","priorPaths","currentLocation","toPaths","getSavedScrollPosition","async","startNavigation","opts","startUninterruptedRevalidation","getScrollKey","saveScrollPosition","enableViewTransition","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","submission","pendingActionData","pendingError","request","createClientSideRequest","findNearestBoundary","actionOutput","interruptActiveLoads","getSubmittingNavigation","actionMatch","getTargetMatch","callLoaderOrAction","shortCircuited","type","method","routeId","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","pendingActionError","isDeferredResult","handleAction","getLoadingNavigation","Request","fetcherSubmission","activeSubmission","getSubmissionFromNavigation","matchesToLoad","revalidatingFetchers","getMatchesToLoad","updatedFetchers","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","getLoadingFetcher","abortFetcher","abortPendingFetchRevalidations","f","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","fetcherKey","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","handleLoaders","getFetcher","_temp","revalidate","redirectLocation","isDocumentReload","reloadDocument","redirectHistoryAction","currentMatches","fetchersToLoad","all","resolveDeferredResults","setFetcherError","deleteFetcher","markFetchersDone","doneFetcher","getDoneFetcher","doneKeys","landedId","yeetedKeys","deleteBlocker","updateBlocker","newBlocker","blocker","shouldBlockNavigation","blockerKey","blockerFunction","predicate","cancelledRouteIds","dfd","y","initialize","_window","transitions","sessionPositions","sessionStorage","getItem","parse","restoreAppliedTransitions","_saveAppliedTransitions","setItem","persistAppliedTransitions","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizedPath","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","userReplace","unstable_viewTransition","fetch","requestMatches","existingFetcher","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","staleKey","handleFetcherAction","resolveDeferredData","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","Symbol","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","body","isSubmissionNavigation","isValidMethod","searchParams","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","_ref3","convertFormDataToSearchParams","convertSearchParamsToFormData","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","values","currentUrl","nextUrl","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","resultType","onReject","runHandler","handler","context","requestContext","handlerError","isResponse","isStaticRequest","protocol","isSameBasename","isRouteRequest","contentType","statusCode","isDeferredData","_result$init","_result$init2","processRouteLoaderData","foundError","loaderHeaders","newLoaderData","mergedLoaderData","reverse","find","_temp4","errorMessage","signals","isRevalidatingLoader","unwrap","getAll","pathMatches","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","routePathnamesJson","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","setBlockerKey","startTransitionImpl","MemoryRouter","historyRef","setStateImpl","v7_startTransition","setState","Router","Navigate","_ref4","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","attr","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","__type","__subType","ErrorConstructor","ViewTransitionContext","isTransitioning","Deferred","reason","fallbackElement","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","optInStartTransition","startTransitionSafe","startViewTransition","skipTransition","renderPromise","finished","finally","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","className","classNameProp","styleProp","routerState","useViewTransitionState","nextLocationPathname","isActive","isPending","renderProps","ariaCurrent","Form","submit","useSubmit","FormImpl","_ref9","forwardedRef","onSubmit","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","storageKey","useScrollRestoration","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","useSubmitFetcher","fetcherRouteId","UseSubmitFetcher","fetcherId","useFetcher","_route$matches","UseFetcher","createFetcherForm","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","getKeyWithoutBasename","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","_ref11","when","confirm","setTimeout","nextPath","l","Fragment","StrictMode","Profiler","q","t","Suspense","u","for","w","x","iterator","z","c","encodeURIComponent","A","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","C","refs","updater","D","E","isReactComponent","forceUpdate","F","isPureReactComponent","G","H","I","__self","__source","J","d","h","g","defaultProps","$$typeof","_owner","L","M","N","escape","O","K","next","P","Q","_status","_result","default","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","ReactCurrentOwner","IsSomeRendererActing","Children","count","toArray","only","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","_payload","_init","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","log","userId","username","setUserName","password","setPassWord","setLogin","onChange","handleUserName","handlePassword","requestOptions","res","res1","addUserContent","handleLogin","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","getter","__esModule","getPrototypeOf","obj","mode","ns","create","def","definition","o","enumerable","globalThis","Function","prop","toStringTag","scriptUrl","importScripts","currentScript","src","scripts","getElementsByTagName","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","nc","__webpack_exports__"],"sourceRoot":""}